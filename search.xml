<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Syntax的Markdown语法</title>
    <url>/MarkdownSyntax/</url>
    <content><![CDATA[<h2 id="OVERVIEW"><a href="#OVERVIEW" class="headerlink" title="OVERVIEW"></a>OVERVIEW</h2><h3 id="PHILOSOPHY"><a href="#PHILOSOPHY" class="headerlink" title="PHILOSOPHY"></a>PHILOSOPHY</h3><p>Markdown is intended to be as easy-to-read and easy-to-write as is feasible.</p>
<p>Readability, however, is emphasized above all else. A Markdown-formatted document should be publishable as-is, as plain text, without looking like it’s been marked up with tags or formatting instructions. While Markdown’s syntax has been influenced by several existing text-to-HTML filters — including <a href="http://docutils.sourceforge.net/mirror/setext.html">Setext</a>, <a href="http://www.aaronsw.com/2002/atx/">atx</a>, <a href="https://web.archive.org/web/20021226035527/http://textism.com/tools/textile/">Textile</a>, <a href="http://docutils.sourceforge.net/rst.html">reStructuredText</a>, <a href="http://www.triptico.com/software/grutatxt.html">Grutatext</a>, and <a href="http://ettext.taint.org/doc/">EtText</a> — the single biggest source of inspiration for Markdown’s syntax is the format of plain text email.</p>
<p>To this end, Markdown’s syntax is comprised entirely of punctuation characters, which punctuation characters have been carefully chosen so as to look like what they mean. E.g., asterisks around a word actually look like <em>emphasis</em>. Markdown lists look like, well, lists. Even blockquotes look like quoted passages of text, assuming you’ve ever used email.</p>
<h3 id="INLINE-HTML"><a href="#INLINE-HTML" class="headerlink" title="INLINE HTML"></a>INLINE HTML</h3><p>Markdown’s syntax is intended for one purpose: to be used as a format for <em>writing</em> for the web.</p>
<p>Markdown is not a replacement for HTML, or even close to it. Its syntax is very small, corresponding only to a very small subset of HTML tags. The idea is <em>not</em> to create a syntax that makes it easier to insert HTML tags. In my opinion, HTML tags are already easy to insert. The idea for Markdown is to make it easy to read, write, and edit prose. HTML is a <em>publishing</em> format; Markdown is a <em>writing</em>format. Thus, Markdown’s formatting syntax only addresses issues that can be conveyed in plain text.</p>
<p>For any markup that is not covered by Markdown’s syntax, you simply use HTML itself. There’s no need to preface it or delimit it to indicate that you’re switching from Markdown to HTML; you just use the tags.</p>
<p>The only restrictions are that block-level HTML elements — e.g. <code>&lt;div&gt;</code>, <code>&lt;table&gt;</code>, <code>&lt;pre&gt;</code>, <code>&lt;p&gt;</code>, etc. — must be separated from surrounding content by blank lines, and the start and end tags of the block should not be indented with tabs or spaces. Markdown is smart enough not to add extra (unwanted) <code>&lt;p&gt;</code> tags around HTML block-level tags.</p>
<p>For example, to add an HTML table to a Markdown article:</p>
<figure class="highlight xquery"><table><tr><td class="code"><pre><span class="line">This <span class="literal">is</span> a regular paragraph.</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span><span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        </span><span class="language-xml"><span class="tag">&lt;<span class="name">td</span>&gt;</span>Foo<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">This <span class="literal">is</span> another regular paragraph.</span><br></pre></td></tr></table></figure>

<p>Note that Markdown formatting syntax is not processed within block-level HTML tags. E.g., you can’t use Markdown-style <code>*emphasis*</code>inside an HTML block.</p>
<p>Span-level HTML tags — e.g. <code>&lt;span&gt;</code>, <code>&lt;cite&gt;</code>, or <code>&lt;del&gt;</code> — can be used anywhere in a Markdown paragraph, list item, or header. If you want, you can even use HTML tags instead of Markdown formatting; e.g. if you’d prefer to use HTML <code>&lt;a&gt;</code> or <code>&lt;img&gt;</code> tags instead of Markdown’s link or image syntax, go right ahead.</p>
<p>Unlike block-level HTML tags, Markdown syntax <em>is</em> processed within span-level tags.</p>
<h3 id="AUTOMATIC-ESCAPING-FOR-SPECIAL-CHARACTERS"><a href="#AUTOMATIC-ESCAPING-FOR-SPECIAL-CHARACTERS" class="headerlink" title="AUTOMATIC ESCAPING FOR SPECIAL CHARACTERS"></a>AUTOMATIC ESCAPING FOR SPECIAL CHARACTERS</h3><p>In HTML, there are two characters that demand special treatment: <code>&lt;</code>and <code>&amp;</code>. Left angle brackets are used to start tags; ampersands are used to denote HTML entities. If you want to use them as literal characters, you must escape them as entities, e.g. <code>&lt;</code>, and<code>&amp;</code>.</p>
<p>Ampersands in particular are bedeviling for web writers. If you want to write about ‘AT&amp;T’, you need to write ‘<code>AT&amp;T</code>’. You even need to escape ampersands within URLs. Thus, if you want to link to:</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">http:</span><span class="comment">//images.google.com/images?num=30&amp;q=larry+bird</span></span><br></pre></td></tr></table></figure>

<p>you need to encode the URL as:</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">http:</span><span class="comment">//images.google.com/images?num=30&amp;amp;q=larry+bird</span></span><br></pre></td></tr></table></figure>

<p>in your anchor tag <code>href</code> attribute. Needless to say, this is easy to forget, and is probably the single most common source of HTML validation errors in otherwise well-marked-up web sites.</p>
<p>Markdown allows you to use these characters naturally, taking care of all the necessary escaping for you. If you use an ampersand as part of an HTML entity, it remains unchanged; otherwise it will be translated into <code>&amp;</code>.</p>
<p>So, if you want to include a copyright symbol in your article, you can write:</p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line"><span class="meta">&amp;copy;</span></span><br></pre></td></tr></table></figure>

<p>and Markdown will leave it alone. But if you write:</p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">AT<span class="meta">&amp;T</span></span><br></pre></td></tr></table></figure>

<p>Markdown will translate it to:</p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="built_in">AT</span>&amp;amp<span class="comment">;T</span></span><br></pre></td></tr></table></figure>

<p>Similarly, because Markdown supports <a href="https://daringfireball.net/projects/markdown/syntax#html">inline HTML</a>, if you use angle brackets as delimiters for HTML tags, Markdown will treat them as such. But if you write:</p>
<figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">4 </span>&lt; <span class="number">5</span></span><br></pre></td></tr></table></figure>

<p>Markdown will translate it to:</p>
<figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">4 </span>&amp;lt; <span class="number">5</span></span><br></pre></td></tr></table></figure>

<p>However, inside Markdown code spans and blocks, angle brackets and ampersands are <em>always</em> encoded automatically. This makes it easy to use Markdown to write about HTML code. (As opposed to raw HTML, which is a terrible format for writing about HTML syntax, because every single <code>&lt;</code> and <code>&amp;</code> in your example code needs to be escaped.)</p>
<hr>
<h2 id="BLOCK-ELEMENTS"><a href="#BLOCK-ELEMENTS" class="headerlink" title="BLOCK ELEMENTS"></a>BLOCK ELEMENTS</h2><h3 id="PARAGRAPHS-AND-LINE-BREAKS"><a href="#PARAGRAPHS-AND-LINE-BREAKS" class="headerlink" title="PARAGRAPHS AND LINE BREAKS"></a>PARAGRAPHS AND LINE BREAKS</h3><p>A paragraph is simply one or more consecutive lines of text, separated by one or more blank lines. (A blank line is any line that looks like a blank line — a line containing nothing but spaces or tabs is considered blank.) Normal paragraphs should not be indented with spaces or tabs.</p>
<p>The implication of the “one or more consecutive lines of text” rule is that Markdown supports “hard-wrapped” text paragraphs. This differs significantly from most other text-to-HTML formatters (including Movable Type’s “Convert Line Breaks” option) which translate every line break character in a paragraph into a <code>&lt;br /&gt;</code> tag.</p>
<p>When you <em>do</em> want to insert a <code>&lt;br /&gt;</code> break tag using Markdown, you end a line with two or more spaces, then type return.</p>
<p>Yes, this takes a tad more effort to create a <code>&lt;br /&gt;</code>, but a simplistic “every line break is a <code>&lt;br /&gt;</code>” rule wouldn’t work for Markdown. Markdown’s email-style <a href="https://daringfireball.net/projects/markdown/syntax#blockquote">blockquoting</a> and multi-paragraph <a href="https://daringfireball.net/projects/markdown/syntax#list">list items</a>work best — and look better — when you format them with hard breaks.</p>
<h3 id="HEADERS"><a href="#HEADERS" class="headerlink" title="HEADERS"></a>HEADERS</h3><p>Markdown supports two styles of headers, <a href="http://docutils.sourceforge.net/mirror/setext.html">Setext</a> and <a href="http://www.aaronsw.com/2002/atx/">atx</a>.</p>
<p>Setext-style headers are “underlined” using equal signs (for first-level headers) and dashes (for second-level headers). For example:</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"><span class="section">This is an H1</span></span><br><span class="line"><span class="section">=============</span></span><br><span class="line"></span><br><span class="line"><span class="section">This is an H2</span></span><br><span class="line"><span class="section">-------------</span></span><br></pre></td></tr></table></figure>

<p>Any number of underlining <code>=</code>’s or <code>-</code>’s will work.</p>
<p>Atx-style headers use 1-6 hash characters at the start of the line, corresponding to header levels 1-6. For example:</p>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line"># This is an H1</span><br><span class="line"></span><br><span class="line">## This is an H2</span><br><span class="line"></span><br><span class="line">###### This is an H6</span><br></pre></td></tr></table></figure>

<p>Optionally, you may “close” atx-style headers. This is purely cosmetic — you can use this if you think it looks better. The closing hashes don’t even need to match the number of hashes used to open the header. (The number of opening hashes determines the header level.) :</p>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line"># This is an H1 #</span><br><span class="line"></span><br><span class="line">## This is an H2 ##</span><br><span class="line"></span><br><span class="line">### This is an H3 ######</span><br></pre></td></tr></table></figure>

<h3 id="BLOCKQUOTES"><a href="#BLOCKQUOTES" class="headerlink" title="BLOCKQUOTES"></a>BLOCKQUOTES</h3><p>Markdown uses email-style <code>&gt;</code> characters for blockquoting. If you’re familiar with quoting passages of text in an email message, then you know how to create a blockquote in Markdown. It looks best if you hard wrap the text and put a <code>&gt;</code> before every line:</p>
<figure class="highlight node-repl"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript"><span class="title class_">This</span> is a blockquote <span class="keyword">with</span> two paragraphs. <span class="title class_">Lorem</span> ipsum dolor sit amet,</span></span><br><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript">consectetuer adipiscing elit. <span class="title class_">Aliquam</span> hendrerit mi posuere lectus.</span></span><br><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript"><span class="title class_">Vestibulum</span> enim wisi, viverra nec, fringilla <span class="keyword">in</span>, laoreet vitae, risus.</span></span><br><span class="line"><span class="meta prompt_">&gt;</span> </span><br><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript"><span class="title class_">Donec</span> sit amet nisl. <span class="title class_">Aliquam</span> semper ipsum sit amet velit. <span class="title class_">Suspendisse</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript">id sem consectetuer libero luctus adipiscing.</span></span><br></pre></td></tr></table></figure>

<p>Markdown allows you to be lazy and only put the <code>&gt;</code> before the first line of a hard-wrapped paragraph:</p>
<figure class="highlight node-repl"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript"><span class="title class_">This</span> is a blockquote <span class="keyword">with</span> two paragraphs. <span class="title class_">Lorem</span> ipsum dolor sit amet,</span></span><br><span class="line">consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.</span><br><span class="line">Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line"></span><br><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript"><span class="title class_">Donec</span> sit amet nisl. <span class="title class_">Aliquam</span> semper ipsum sit amet velit. <span class="title class_">Suspendisse</span></span></span><br><span class="line">id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure>

<p>Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) by adding additional levels of <code>&gt;</code>:</p>
<figure class="highlight node-repl"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript"><span class="title class_">This</span> is the first level <span class="keyword">of</span> quoting.</span></span><br><span class="line"><span class="meta prompt_">&gt;</span></span><br><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript">&gt; <span class="title class_">This</span> is nested blockquote.</span></span><br><span class="line"><span class="meta prompt_">&gt;</span></span><br><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript"><span class="title class_">Back</span> to the first level.</span></span><br></pre></td></tr></table></figure>

<p>Blockquotes can contain other Markdown elements, including headers, lists, and code blocks:</p>
<figure class="highlight node-repl"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript">## <span class="title class_">This</span> is a header.</span></span><br><span class="line"><span class="meta prompt_">&gt;</span> </span><br><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript"><span class="number">1.</span>   <span class="title class_">This</span> is the first list item.</span></span><br><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript"><span class="number">2.</span>   <span class="title class_">This</span> is the second list item.</span></span><br><span class="line"><span class="meta prompt_">&gt;</span> </span><br><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript"><span class="title class_">Here</span><span class="string">&#x27;s some example code:</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span> </span><br><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript"><span class="string">    return shell_exec(&quot;echo $input | $markdown_script&quot;);</span></span></span><br></pre></td></tr></table></figure>

<p>Any decent text editor should make email-style quoting easy. For example, with BBEdit, you can make a selection and choose Increase Quote Level from the Text menu.</p>
<h3 id="LISTS"><a href="#LISTS" class="headerlink" title="LISTS"></a>LISTS</h3><p>Markdown supports ordered (numbered) and unordered (bulleted) lists.</p>
<p>Unordered lists use asterisks, pluses, and hyphens — interchangably — as list markers:</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"><span class="bullet">*   </span>Red</span><br><span class="line"><span class="bullet">*   </span>Green</span><br><span class="line"><span class="bullet">*   </span>Blue</span><br></pre></td></tr></table></figure>

<p>is equivalent to:</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">+</span>   Red</span><br><span class="line"><span class="bullet">+</span>   Green</span><br><span class="line"><span class="bullet">+</span>   Blue</span><br></pre></td></tr></table></figure>

<p>and:</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-   </span>Red</span><br><span class="line"><span class="bullet">-   </span>Green</span><br><span class="line"><span class="bullet">-   </span>Blue</span><br></pre></td></tr></table></figure>

<p>Ordered lists use numbers followed by periods:</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span>  Bird</span><br><span class="line"><span class="bullet">2.</span>  McHale</span><br><span class="line"><span class="bullet">3.</span>  Parish</span><br></pre></td></tr></table></figure>

<p>It’s important to note that the actual numbers you use to mark the list have no effect on the HTML output Markdown produces. The HTML Markdown produces from the above list is:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Bird<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>McHale<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Parish<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>If you instead wrote the list in Markdown like this:</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span>  Bird</span><br><span class="line"><span class="bullet">1.</span>  McHale</span><br><span class="line"><span class="bullet">1.</span>  Parish</span><br></pre></td></tr></table></figure>

<p>or even:</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">3.</span> Bird</span><br><span class="line"><span class="bullet">1.</span> McHale</span><br><span class="line"><span class="bullet">8.</span> Parish</span><br></pre></td></tr></table></figure>

<p>you’d get the exact same HTML output. The point is, if you want to, you can use ordinal numbers in your ordered Markdown lists, so that the numbers in your source match the numbers in your published HTML. But if you want to be lazy, you don’t have to.</p>
<p>If you do use lazy list numbering, however, you should still start the list with the number 1. At some point in the future, Markdown may support starting ordered lists at an arbitrary number.</p>
<p>List markers typically start at the left margin, but may be indented by up to three spaces. List markers must be followed by one or more spaces or a tab.</p>
<p>To make lists look nice, you can wrap items with hanging indents:</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="comment">*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</span></span><br><span class="line">    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,</span><br><span class="line">    viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line"><span class="comment">*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.</span></span><br><span class="line">    Suspendisse id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure>

<p>But if you want to be lazy, you don’t have to:</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="comment">*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</span></span><br><span class="line">Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,</span><br><span class="line">viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line"><span class="comment">*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.</span></span><br><span class="line">Suspendisse id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure>

<p>If list items are separated by blank lines, Markdown will wrap the items in <code>&lt;p&gt;</code> tags in the HTML output. For example, this input:</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"><span class="bullet">*   </span>Bird</span><br><span class="line"><span class="bullet">*   </span>Magic</span><br></pre></td></tr></table></figure>

<p>will turn into:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Bird<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Magic<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>But this:</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"><span class="bullet">*   </span>Bird</span><br><span class="line"></span><br><span class="line"><span class="bullet">*   </span>Magic</span><br></pre></td></tr></table></figure>

<p>will turn into:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>Bird<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>Magic<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>List items may consist of multiple paragraphs. Each subsequent paragraph in a list item must be indented by either 4 spaces or one tab:</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>  This <span class="keyword">is</span> a <span class="built_in">list</span> <span class="built_in">item</span> <span class="keyword">with</span> two <span class="built_in">paragraphs</span>. Lorem ipsum dolor</span><br><span class="line">    sit amet, consectetuer adipiscing elit. Aliquam hendrerit</span><br><span class="line">    mi posuere lectus.</span><br><span class="line"></span><br><span class="line">    Vestibulum enim wisi, viverra nec, fringilla <span class="keyword">in</span>, laoreet</span><br><span class="line">    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum</span><br><span class="line">    sit amet velit.</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>  Suspendisse <span class="built_in">id</span> sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure>

<p>It looks nice if you indent every line of the subsequent paragraphs, but here again, Markdown will allow you to be lazy:</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">*   This <span class="keyword">is</span> a <span class="built_in">list</span> <span class="built_in">item</span> <span class="keyword">with</span> two <span class="built_in">paragraphs</span>.</span><br><span class="line"></span><br><span class="line">    This <span class="keyword">is</span> <span class="keyword">the</span> <span class="keyword">second</span> <span class="built_in">paragraph</span> <span class="keyword">in</span> <span class="keyword">the</span> <span class="built_in">list</span> <span class="built_in">item</span>. You&#x27;re</span><br><span class="line">only required <span class="keyword">to</span> indent <span class="keyword">the</span> <span class="keyword">first</span> line. Lorem ipsum dolor</span><br><span class="line">sit amet, consectetuer adipiscing elit.</span><br><span class="line"></span><br><span class="line">*   Another <span class="built_in">item</span> <span class="keyword">in</span> <span class="keyword">the</span> same <span class="built_in">list</span>.</span><br></pre></td></tr></table></figure>

<p>To put a blockquote within a list item, the blockquote’s <code>&gt;</code> delimiters need to be indented:</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line">*   <span class="selector-tag">A</span> <span class="selector-tag">list</span> <span class="selector-tag">item</span> <span class="selector-tag">with</span> <span class="selector-tag">a</span> <span class="selector-tag">blockquote</span>:</span><br><span class="line"></span><br><span class="line">    &gt; <span class="selector-tag">This</span> <span class="selector-tag">is</span> <span class="selector-tag">a</span> <span class="selector-tag">blockquote</span></span><br><span class="line">    &gt; <span class="selector-tag">inside</span> <span class="selector-tag">a</span> <span class="selector-tag">list</span> <span class="selector-tag">item</span>.</span><br></pre></td></tr></table></figure>

<p>To put a code block within a list item, the code block needs to be indented <em>twice</em> — 8 spaces or two tabs:</p>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">*   A list item <span class="keyword">with</span> a <span class="keyword">code</span> block:</span><br><span class="line"></span><br><span class="line">        &lt;<span class="keyword">code</span> goes here&gt;</span><br></pre></td></tr></table></figure>

<p>It’s worth noting that it’s possible to trigger an ordered list by accident, by writing something like this:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="number">1986</span>. What <span class="selector-tag">a</span> great season.</span><br></pre></td></tr></table></figure>

<p>In other words, a <em>number-period-space</em> sequence at the beginning of a line. To avoid this, you can backslash-escape the period:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="number">1986</span>\. What <span class="selector-tag">a</span> great season.</span><br></pre></td></tr></table></figure>

<h3 id="CODE-BLOCKS"><a href="#CODE-BLOCKS" class="headerlink" title="CODE BLOCKS"></a>CODE BLOCKS</h3><p>Pre-formatted code blocks are used for writing about programming or markup source code. Rather than forming normal paragraphs, the lines of a code block are interpreted literally. Markdown wraps a code block in both <code>&lt;pre&gt;</code> and <code>&lt;code&gt;</code> tags.</p>
<p>To produce a code block in Markdown, simply indent every line of the block by at least 4 spaces or 1 tab. For example, given this input:</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">This is <span class="keyword">a</span> <span class="keyword">normal</span> <span class="keyword">paragraph</span>:</span><br><span class="line"></span><br><span class="line">    This is <span class="keyword">a</span> code block.</span><br></pre></td></tr></table></figure>

<p>Markdown will generate:</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="symbol">&lt;p&gt;</span>This <span class="keyword">is</span> <span class="keyword">a</span> <span class="keyword">normal</span> paragraph:&lt;/<span class="keyword">p</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="symbol">&lt;pre&gt;</span><span class="symbol">&lt;code&gt;</span>This <span class="keyword">is</span> <span class="keyword">a</span> code block.</span><br><span class="line">&lt;/code&gt;&lt;/<span class="keyword">pre</span>&gt;</span><br></pre></td></tr></table></figure>

<p>One level of indentation — 4 spaces or 1 tab — is removed from each line of the code block. For example, this:</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">Here <span class="keyword">is</span> an example <span class="keyword">of</span> <span class="literal">AppleScript</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">tell</span> <span class="built_in">application</span> <span class="string">&quot;Foo&quot;</span></span><br><span class="line">        <span class="built_in">beep</span></span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">tell</span></span><br></pre></td></tr></table></figure>

<p>will turn into:</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;Here <span class="keyword">is</span> an example <span class="keyword">of</span> <span class="literal">AppleScript</span>:&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;pre&gt;&lt;code&gt;<span class="keyword">tell</span> <span class="built_in">application</span> <span class="string">&quot;Foo&quot;</span></span><br><span class="line">    <span class="built_in">beep</span></span><br><span class="line"><span class="keyword">end</span> <span class="keyword">tell</span></span><br><span class="line">&lt;/code&gt;&lt;/pre&gt;</span><br></pre></td></tr></table></figure>

<p>A code block continues until it reaches a line that is not indented (or the end of the article).</p>
<p>Within a code block, ampersands (<code>&amp;</code>) and angle brackets (<code>&lt;</code> and <code>&gt;</code>) are automatically converted into HTML entities. This makes it very easy to include example HTML source code using Markdown — just paste it and indent it, and Markdown will handle the hassle of encoding the ampersands and angle brackets. For example, this:</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">&quot;footer&quot;</span>&gt;</span><br><span class="line">    &amp;<span class="keyword">copy</span>; <span class="number">2004</span> Foo Corporation</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure>

<p>will turn into:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span><span class="symbol">&amp;lt;</span>div class=&quot;footer&quot;<span class="symbol">&amp;gt;</span></span><br><span class="line">    <span class="symbol">&amp;amp;</span>copy; 2004 Foo Corporation</span><br><span class="line"><span class="symbol">&amp;lt;</span>/div<span class="symbol">&amp;gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>Regular Markdown syntax is not processed within code blocks. E.g., asterisks are just literal asterisks within a code block. This means it’s also easy to use Markdown to write about Markdown’s own syntax.</p>
<h3 id="HORIZONTAL-RULES"><a href="#HORIZONTAL-RULES" class="headerlink" title="HORIZONTAL RULES"></a>HORIZONTAL RULES</h3><p>You can produce a horizontal rule tag (<code>&lt;hr /&gt;</code>) by placing three or more hyphens, asterisks, or underscores on a line by themselves. If you wish, you may use spaces between the hyphens or asterisks. Each of the following lines will produce a horizontal rule:</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="comment">* * *</span></span><br><span class="line"></span><br><span class="line"><span class="comment">***</span></span><br><span class="line"></span><br><span class="line"><span class="comment">*****</span></span><br><span class="line"></span><br><span class="line">- - -</span><br><span class="line"></span><br><span class="line">---------------------------------------</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="SPAN-ELEMENTS"><a href="#SPAN-ELEMENTS" class="headerlink" title="SPAN ELEMENTS"></a>SPAN ELEMENTS</h2><h3 id="LINKS"><a href="#LINKS" class="headerlink" title="LINKS"></a>LINKS</h3><p>Markdown supports two style of links: <em>inline</em> and <em>reference</em>.</p>
<p>In both styles, the link text is delimited by [square brackets].</p>
<p>To create an inline link, use a set of regular parentheses immediately after the link text’s closing square bracket. Inside the parentheses, put the URL where you want the link to point, along with an <em>optional</em>title for the link, surrounded in quotes. For example:</p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">This <span class="built_in">is</span> [an <span class="built_in">example</span>](http://<span class="built_in">example</span>.com/ <span class="string">&quot;Title&quot;</span>) inline link.</span><br><span class="line"></span><br><span class="line">[This link](http://<span class="built_in">example</span>.net/) has no <span class="built_in">title</span> attribute.</span><br></pre></td></tr></table></figure>

<p>Will produce:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This is <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://example.com/&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Title&quot;</span>&gt;</span></span><br><span class="line">an example<span class="tag">&lt;/<span class="name">a</span>&gt;</span> inline link.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://example.net/&quot;</span>&gt;</span>This link<span class="tag">&lt;/<span class="name">a</span>&gt;</span> has no</span><br><span class="line">title attribute.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>If you’re referring to a local resource on the same server, you can use relative paths:</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">See <span class="keyword">my</span> [About](/<span class="keyword">about</span>/) page <span class="keyword">for</span> details.   </span><br></pre></td></tr></table></figure>

<p>Reference-style links use a second set of square brackets, inside which you place a label of your choosing to identify the link:</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">This <span class="keyword">is</span> [an example][<span class="built_in">id</span>] <span class="keyword">reference</span>-style link.</span><br></pre></td></tr></table></figure>

<p>You can optionally use a space to separate the sets of brackets:</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">This <span class="keyword">is</span> [an example] [<span class="built_in">id</span>] <span class="keyword">reference</span>-style link.</span><br></pre></td></tr></table></figure>

<p>Then, anywhere in the document, you define your link label like this, on a line by itself:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[<span class="built_in">id</span>]: http://example.com/  <span class="string">&quot;Optional Title Here&quot;</span></span><br></pre></td></tr></table></figure>

<p>That is:</p>
<ul>
<li>Square brackets containing the link identifier (optionally indented from the left margin using up to three spaces);</li>
<li>followed by a colon;</li>
<li>followed by one or more spaces (or tabs);</li>
<li>followed by the URL for the link;</li>
<li>optionally followed by a title attribute for the link, enclosed in double or single quotes, or enclosed in parentheses.</li>
</ul>
<p>The following three link definitions are equivalent:</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="symbol">foo</span>]: <span class="link">http://example.com/  &quot;Optional Title Here&quot;</span></span><br><span class="line">[<span class="symbol">foo</span>]: <span class="link">http://example.com/  &#x27;Optional Title Here&#x27;</span></span><br><span class="line">[<span class="symbol">foo</span>]: <span class="link">http://example.com/  (Optional Title Here)</span></span><br></pre></td></tr></table></figure>

<p>NOTE: There is a known bug in Markdown.pl 1.0.1 which prevents single quotes from being used to delimit link titles.</p>
<p>The link URL may, optionally, be surrounded by angle brackets:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[<span class="built_in">id</span>]: &lt;http://example.com/&gt;  <span class="string">&quot;Optional Title Here&quot;</span></span><br></pre></td></tr></table></figure>

<p>You can put the title attribute on the next line and use extra spaces or tabs for padding, which tends to look better with longer URLs:</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">[id]: http:<span class="regexp">//</span>example.com<span class="regexp">/longish/</span>path<span class="regexp">/to/</span>resource/here</span><br><span class="line">    <span class="string">&quot;Optional Title Here&quot;</span></span><br></pre></td></tr></table></figure>

<p>Link definitions are only used for creating links during Markdown processing, and are stripped from your document in the HTML output.</p>
<p>Link definition names may consist of letters, numbers, spaces, and punctuation — but they are <em>not</em> case sensitive. E.g. these two links:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-attr">[link text]</span><span class="selector-attr">[a]</span></span><br><span class="line"><span class="selector-attr">[link text]</span><span class="selector-attr">[A]</span></span><br></pre></td></tr></table></figure>

<p>are equivalent.</p>
<p>The <em>implicit link name</em> shortcut allows you to omit the name of the link, in which case the link text itself is used as the name. Just use an empty set of square brackets — e.g., to link the word “Google” to the google.com web site, you could simply write:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-attr">[Google]</span><span class="selector-attr">[]</span></span><br></pre></td></tr></table></figure>

<p>And then define the link:</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="symbol">Google</span>]: <span class="link">http://google.com/</span></span><br></pre></td></tr></table></figure>

<p>Because link names may contain spaces, this shortcut even works for multiple words in the link text:</p>
<figure class="highlight prolog"><table><tr><td class="code"><pre><span class="line"><span class="symbol">Visit</span> [<span class="symbol">Daring</span> <span class="symbol">Fireball</span>][] for more information.</span><br></pre></td></tr></table></figure>

<p>And then define the link:</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="symbol">Daring Fireball</span>]: <span class="link">http://daringfireball.net/</span></span><br></pre></td></tr></table></figure>

<p>Link definitions can be placed anywhere in your Markdown document. I tend to put them immediately after each paragraph in which they’re used, but if you want, you can put them all at the end of your document, sort of like footnotes.</p>
<p>Here’s an example of reference links in action:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">I</span> get <span class="number">10</span> times more traffic <span class="selector-tag">from</span> <span class="selector-attr">[Google]</span> <span class="selector-attr">[1]</span> than <span class="selector-tag">from</span></span><br><span class="line"><span class="selector-attr">[Yahoo]</span> <span class="selector-attr">[2]</span> or <span class="selector-attr">[MSN]</span> <span class="selector-attr">[3]</span>.</span><br><span class="line"></span><br><span class="line">  <span class="selector-attr">[1]</span>: http://google.com/        <span class="string">&quot;Google&quot;</span></span><br><span class="line">  [<span class="number">2</span>]: http://search.yahoo.com/  <span class="string">&quot;Yahoo Search&quot;</span></span><br><span class="line">  [<span class="number">3</span>]: http://search.msn.com/    <span class="string">&quot;MSN Search&quot;</span></span><br></pre></td></tr></table></figure>

<p>Using the implicit link name shortcut, you could instead write:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">I</span> get <span class="number">10</span> times more traffic <span class="selector-tag">from</span> <span class="selector-attr">[Google]</span><span class="selector-attr">[]</span> than <span class="selector-tag">from</span></span><br><span class="line"><span class="selector-attr">[Yahoo]</span><span class="selector-attr">[]</span> or <span class="selector-attr">[MSN]</span><span class="selector-attr">[]</span>.</span><br><span class="line"></span><br><span class="line">  <span class="selector-attr">[google]</span>: http://google.com/        <span class="string">&quot;Google&quot;</span></span><br><span class="line">  [yahoo]:  http://search.yahoo.com/  <span class="string">&quot;Yahoo Search&quot;</span></span><br><span class="line">  [msn]:    http://search.msn.com/    <span class="string">&quot;MSN Search&quot;</span></span><br></pre></td></tr></table></figure>

<p>Both of the above examples will produce the following HTML output:</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;I <span class="built_in">get</span> 10 times more traffic <span class="keyword">from</span> &lt;a <span class="attribute">href</span>=<span class="string">&quot;http://google.com/&quot;</span></span><br><span class="line"><span class="attribute">title</span>=<span class="string">&quot;Google&quot;</span>&gt;Google&lt;/a&gt; than <span class="keyword">from</span></span><br><span class="line">&lt;a <span class="attribute">href</span>=<span class="string">&quot;http://search.yahoo.com/&quot;</span> <span class="attribute">title</span>=<span class="string">&quot;Yahoo Search&quot;</span>&gt;Yahoo&lt;/a&gt;</span><br><span class="line"><span class="keyword">or</span> &lt;a <span class="attribute">href</span>=<span class="string">&quot;http://search.msn.com/&quot;</span> <span class="attribute">title</span>=<span class="string">&quot;MSN Search&quot;</span>&gt;MSN&lt;/a&gt;.&lt;/p&gt;</span><br></pre></td></tr></table></figure>

<p>For comparison, here is the same paragraph written using Markdown’s inline link style:</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">I <span class="built_in">get</span> <span class="number">10</span> times more traffic from [Google](http://google.<span class="keyword">com</span>/ <span class="string">&quot;Google&quot;</span>)</span><br><span class="line">than from [Yahoo](http://<span class="built_in">search</span>.yahoo.<span class="keyword">com</span>/ <span class="string">&quot;Yahoo Search&quot;</span>) <span class="built_in">or</span></span><br><span class="line">[MSN](http://<span class="built_in">search</span>.msn.<span class="keyword">com</span>/ <span class="string">&quot;MSN Search&quot;</span>).</span><br></pre></td></tr></table></figure>

<p>The point of reference-style links is not that they’re easier to write. The point is that with reference-style links, your document source is vastly more readable. Compare the above examples: using reference-style links, the paragraph itself is only 81 characters long; with inline-style links, it’s 176 characters; and as raw HTML, it’s 234 characters. In the raw HTML, there’s more markup than there is text.</p>
<p>With Markdown’s reference-style links, a source document much more closely resembles the final output, as rendered in a browser. By allowing you to move the markup-related metadata out of the paragraph, you can add links without interrupting the narrative flow of your prose.</p>
<h3 id="EMPHASIS"><a href="#EMPHASIS" class="headerlink" title="EMPHASIS"></a>EMPHASIS</h3><p>Markdown treats asterisks (<code>*</code>) and underscores (<code>_</code>) as indicators of emphasis. Text wrapped with one <code>*</code> or <code>_</code> will be wrapped with an HTML <code>&lt;em&gt;</code> tag; double <code>*</code>’s or <code>_</code>’s will be wrapped with an HTML<code>&lt;strong&gt;</code> tag. E.g., this input:</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"><span class="strong">*single asterisks*</span></span><br><span class="line"></span><br><span class="line"><span class="emphasis">_single underscores_</span></span><br><span class="line"></span><br><span class="line"><span class="strong">**double asterisks**</span></span><br><span class="line"></span><br><span class="line"><span class="emphasis">__double underscores__</span></span><br></pre></td></tr></table></figure>

<p>will produce:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>single asterisks<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>single underscores<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>double asterisks<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>double underscores<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>You can use whichever style you prefer; the lone restriction is that the same character must be used to open and close an emphasis span.</p>
<p>Emphasis can be used in the middle of a word:</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">un<span class="number">*f</span>rigging<span class="number">*be</span>lievable</span><br></pre></td></tr></table></figure>

<p>But if you surround an <code>*</code> or <code>_</code> with spaces, it’ll be treated as a literal asterisk or underscore.</p>
<p>To produce a literal asterisk or underscore at a position where it would otherwise be used as an emphasis delimiter, you can backslash escape it:</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">\*<span class="keyword">this</span> text <span class="keyword">is</span> surrounded <span class="keyword">by</span> literal asterisks\*</span><br></pre></td></tr></table></figure>

<h3 id="CODE"><a href="#CODE" class="headerlink" title="CODE"></a>CODE</h3><p>To indicate a span of code, wrap it with backtick quotes (&#96;&#96;&#96;). Unlike a pre-formatted code block, a code span indicates code within a normal paragraph. For example:</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Use</span> the `printf()` <span class="keyword">function</span>.</span><br></pre></td></tr></table></figure>

<p>will produce:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Use the <span class="tag">&lt;<span class="name">code</span>&gt;</span>printf()<span class="tag">&lt;/<span class="name">code</span>&gt;</span> function.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>To include a literal backtick character within a code span, you can use multiple backticks as the opening and closing delimiters:</p>
<figure class="highlight autohotkey"><table><tr><td class="code"><pre><span class="line">``There is a literal backtick (`) here.``</span><br></pre></td></tr></table></figure>

<p>which will produce this:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;<span class="selector-tag">p</span>&gt;&lt;<span class="selector-tag">code</span>&gt;There is <span class="selector-tag">a</span> literal backtick (`) here.&lt;/<span class="selector-tag">code</span>&gt;&lt;/<span class="selector-tag">p</span>&gt;</span><br></pre></td></tr></table></figure>

<p>The backtick delimiters surrounding a code span may include spaces — one after the opening, one before the closing. This allows you to place literal backtick characters at the beginning or end of a code span:</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">A</span> <span class="selector-tag">single</span> <span class="selector-tag">backtick</span> <span class="selector-tag">in</span> <span class="selector-tag">a</span> <span class="selector-tag">code</span> <span class="selector-tag">span</span>: `` ` ``</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">A</span> <span class="selector-tag">backtick-delimited</span> <span class="selector-tag">string</span> <span class="selector-tag">in</span> <span class="selector-tag">a</span> <span class="selector-tag">code</span> <span class="selector-tag">span</span>: `` `<span class="selector-tag">foo</span>` ``</span><br></pre></td></tr></table></figure>

<p>will produce:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>A single backtick in a code span: <span class="tag">&lt;<span class="name">code</span>&gt;</span>`<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>A backtick-delimited string in a code span: <span class="tag">&lt;<span class="name">code</span>&gt;</span>`foo`<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>With a code span, ampersands and angle brackets are encoded as HTML entities automatically, which makes it easy to include example HTML tags. Markdown will turn this:</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">Please don<span class="symbol">&#x27;t</span> <span class="keyword">use</span> any `&lt;blink&gt;` tags.</span><br></pre></td></tr></table></figure>

<p>into:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Please don&#x27;t use any <span class="tag">&lt;<span class="name">code</span>&gt;</span><span class="symbol">&amp;lt;</span>blink<span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">code</span>&gt;</span> tags.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>You can write this:</p>
<figure class="highlight d"><table><tr><td class="code"><pre><span class="line"><span class="string">`&amp;#8212;`</span> <span class="keyword">is</span> the decimal-encoded equivalent of <span class="string">`&amp;mdash;`</span>.</span><br></pre></td></tr></table></figure>

<p>to produce:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span><span class="symbol">&amp;amp;</span>#8212;<span class="tag">&lt;/<span class="name">code</span>&gt;</span> is the decimal-encoded</span><br><span class="line">equivalent of <span class="tag">&lt;<span class="name">code</span>&gt;</span><span class="symbol">&amp;amp;</span>mdash;<span class="tag">&lt;/<span class="name">code</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="IMAGES"><a href="#IMAGES" class="headerlink" title="IMAGES"></a>IMAGES</h3><p>Admittedly, it’s fairly difficult to devise a “natural” syntax for placing images into a plain text document format.</p>
<p>Markdown uses an image syntax that is intended to resemble the syntax for links, allowing for two styles: <em>inline</em> and <em>reference</em>.</p>
<p>Inline image syntax looks like this:</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">![Alt <span class="type">text</span>](/<span class="type">path</span>/<span class="keyword">to</span>/img.jpg)</span><br><span class="line"></span><br><span class="line">![Alt <span class="type">text</span>](/<span class="type">path</span>/<span class="keyword">to</span>/img.jpg &quot;Optional title&quot;)</span><br></pre></td></tr></table></figure>

<p>That is:</p>
<ul>
<li>An exclamation mark: <code>!</code>;</li>
<li>followed by a set of square brackets, containing the <code>alt</code>attribute text for the image;</li>
<li>followed by a set of parentheses, containing the URL or path to the image, and an optional <code>title</code> attribute enclosed in double or single quotes.</li>
</ul>
<p>Reference-style image syntax looks like this:</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">![Alt <span class="built_in">text</span>][<span class="built_in">id</span>]</span><br></pre></td></tr></table></figure>

<p>Where “id” is the name of a defined image reference. Image references are defined using syntax identical to link references:</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">[<span class="built_in">id</span>]: url/<span class="keyword">to</span>/image  <span class="string">&quot;Optional title attribute&quot;</span></span><br></pre></td></tr></table></figure>

<p>As of this writing, Markdown has no syntax for specifying the dimensions of an image; if this is important to you, you can simply use regular HTML <code>&lt;img&gt;</code> tags.</p>
<hr>
<h2 id="MISCELLANEOUS"><a href="#MISCELLANEOUS" class="headerlink" title="MISCELLANEOUS"></a>MISCELLANEOUS</h2><h3 id="AUTOMATIC-LINKS"><a href="#AUTOMATIC-LINKS" class="headerlink" title="AUTOMATIC LINKS"></a>AUTOMATIC LINKS</h3><p>Markdown supports a shortcut style for creating “automatic” links for URLs and email addresses: simply surround the URL or email address with angle brackets. What this means is that if you want to show the actual text of a URL or email address, and also have it be a clickable link, you can do this:</p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">&lt;http:<span class="comment">//example.com/&gt;</span></span><br></pre></td></tr></table></figure>

<p>Markdown will turn this into:</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">a</span> href=<span class="string">&quot;http://example.com/&quot;</span>&gt;<span class="keyword">http</span>://example.com/&lt;/<span class="keyword">a</span>&gt;</span><br></pre></td></tr></table></figure>

<p>Automatic links for email addresses work similarly, except that Markdown will also perform a bit of randomized decimal and hex entity-encoding to help obscure your address from address-harvesting spambots. For example, Markdown will turn this:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;<span class="selector-tag">address</span><span class="keyword">@example</span>.com&gt;</span><br></pre></td></tr></table></figure>

<p>into something like this:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;<span class="symbol">&amp;#x6D;</span><span class="symbol">&amp;#x61;</span>i<span class="symbol">&amp;#x6C;</span><span class="symbol">&amp;#x74;</span><span class="symbol">&amp;#x6F;</span>:<span class="symbol">&amp;#x61;</span><span class="symbol">&amp;#x64;</span><span class="symbol">&amp;#x64;</span><span class="symbol">&amp;#x72;</span><span class="symbol">&amp;#x65;</span></span></span></span><br><span class="line"><span class="string"><span class="tag"><span class="symbol">&amp;#115;</span><span class="symbol">&amp;#115;</span><span class="symbol">&amp;#64;</span><span class="symbol">&amp;#101;</span><span class="symbol">&amp;#120;</span><span class="symbol">&amp;#x61;</span><span class="symbol">&amp;#109;</span><span class="symbol">&amp;#x70;</span><span class="symbol">&amp;#x6C;</span>e<span class="symbol">&amp;#x2E;</span><span class="symbol">&amp;#99;</span><span class="symbol">&amp;#111;</span></span></span></span><br><span class="line"><span class="string"><span class="tag"><span class="symbol">&amp;#109;</span>&quot;</span>&gt;</span><span class="symbol">&amp;#x61;</span><span class="symbol">&amp;#x64;</span><span class="symbol">&amp;#x64;</span><span class="symbol">&amp;#x72;</span><span class="symbol">&amp;#x65;</span><span class="symbol">&amp;#115;</span><span class="symbol">&amp;#115;</span><span class="symbol">&amp;#64;</span><span class="symbol">&amp;#101;</span><span class="symbol">&amp;#120;</span><span class="symbol">&amp;#x61;</span></span><br><span class="line"><span class="symbol">&amp;#109;</span><span class="symbol">&amp;#x70;</span><span class="symbol">&amp;#x6C;</span>e<span class="symbol">&amp;#x2E;</span><span class="symbol">&amp;#99;</span><span class="symbol">&amp;#111;</span><span class="symbol">&amp;#109;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>which will render in a browser as a clickable link to “<a href="mailto:&#97;&#x64;&#x64;&#114;&#x65;&#115;&#115;&#64;&#101;&#x78;&#x61;&#109;&#x70;&#108;&#x65;&#46;&#x63;&#x6f;&#109;">&#97;&#x64;&#x64;&#114;&#x65;&#115;&#115;&#64;&#101;&#x78;&#x61;&#109;&#x70;&#108;&#x65;&#46;&#x63;&#x6f;&#109;</a>”.</p>
<p>(This sort of entity-encoding trick will indeed fool many, if not most, address-harvesting bots, but it definitely won’t fool all of them. It’s better than nothing, but an address published in this way will probably eventually start receiving spam.)</p>
<h3 id="BACKSLASH-ESCAPES"><a href="#BACKSLASH-ESCAPES" class="headerlink" title="BACKSLASH ESCAPES"></a>BACKSLASH ESCAPES</h3><p>Markdown allows you to use backslash escapes to generate literal characters which would otherwise have special meaning in Markdown’s formatting syntax. For example, if you wanted to surround a word with literal asterisks (instead of an HTML <code>&lt;em&gt;</code> tag), you can use backslashes before the asterisks, like this:</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">\*literal asterisks\*</span><br></pre></td></tr></table></figure>

<p>Markdown provides backslash escapes for the following characters:</p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">\   <span class="keyword">backslash</span></span><br><span class="line"><span class="keyword"></span>`   <span class="keyword">backtick</span></span><br><span class="line"><span class="keyword"></span>*   asterisk</span><br><span class="line">_   underscore</span><br><span class="line">&#123;&#125;  curly <span class="keyword">braces</span></span><br><span class="line"><span class="keyword"></span>[]  square <span class="keyword">brackets</span></span><br><span class="line"><span class="keyword"></span>()  parentheses</span><br><span class="line"><span class="comment">#   hash mark</span></span><br><span class="line">+   plus sign</span><br><span class="line">-   minus sign (hyphen)</span><br><span class="line">.   dot</span><br><span class="line">!   exclamation mark</span><br></pre></td></tr></table></figure>

<p><a href="https://daringfireball.net/preferences/">Display Preferences</a></p>
<p>Copyright © 2002–2023 The Daring Fireball Company LLC.</p>
]]></content>
      <categories>
        <category>语法分析</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>为网页添加『Sakana！』石蒜模拟器</title>
    <url>/Sakana/</url>
    <content><![CDATA[<h1 id="石蒜模拟器"><a href="#石蒜模拟器" class="headerlink" title="石蒜模拟器"></a>石蒜模拟器</h1><h2 id="项目地址：https-github-com-itorr-sakana"><a href="#项目地址：https-github-com-itorr-sakana" class="headerlink" title="- 项目地址：https://github.com/itorr/sakana/"></a>- 项目地址：<a href="https://github.com/itorr/sakana/">https://github.com/itorr/sakana/</a></h2><h2 id="Demo：-https-lab-magiconch-com-sakana"><a href="#Demo：-https-lab-magiconch-com-sakana" class="headerlink" title="- Demo： https://lab.magiconch.com/sakana/"></a>- Demo： <a href="https://lab.magiconch.com/sakana/">https://lab.magiconch.com/sakana/</a></h2><h2 id="效果："><a href="#效果：" class="headerlink" title="- 效果："></a>- 效果：</h2><p><img data-src="/Sakana/image-20240115213244643.png" alt="image-20240115213244643"></p>
<p><img data-src="/Sakana/image-20240115213312229.png" alt="image-20240115213312229"></p>
<h2 id="安装环境："><a href="#安装环境：" class="headerlink" title="- 安装环境："></a>- 安装环境：</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo-site@0.0.0 </span><br><span class="line">├── @waline/hexo-next@3.0.1</span><br><span class="line">├── disqusjs@3.0.3-canary.1</span><br><span class="line">├── hexo-bilibili-bangumi@1.8.9</span><br><span class="line">├── hexo-deployer-ali-oss@1.0.0</span><br><span class="line">├── hexo-deployer-git@4.0.0</span><br><span class="line">├── hexo-generator-archive@2.0.0</span><br><span class="line">├── hexo-generator-baidu-sitemap@0.1.9</span><br><span class="line">├── hexo-generator-category@2.0.0</span><br><span class="line">├── hexo-generator-feed@3.0.0</span><br><span class="line">├── hexo-generator-index@3.0.0</span><br><span class="line">├── hexo-generator-searchdb@1.4.1</span><br><span class="line">├── hexo-generator-sitemap@3.0.1</span><br><span class="line">├── hexo-generator-tag@2.0.0</span><br><span class="line">├── hexo-next-darkmode@0.1.11</span><br><span class="line">├── hexo-next-valine@1.0.0</span><br><span class="line">├── hexo-renderer-ejs@2.0.0</span><br><span class="line">├── hexo-renderer-marked@6.2.0</span><br><span class="line">├── hexo-renderer-stylus@2.1.0</span><br><span class="line">├── hexo-server@3.0.0</span><br><span class="line">├── hexo-symbols-count-time@0.7.1</span><br><span class="line">├── hexo-tag-cloud@2.1.2</span><br><span class="line">├── hexo-theme-landscape@1.0.0</span><br><span class="line">├── hexo-theme-next@8.19.1</span><br><span class="line">├── hexo@6.3.0</span><br><span class="line">└── sakana@1.0.8</span><br></pre></td></tr></table></figure>

<ul>
<li>NPM安装与引入</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm i sakana -d</span><br></pre></td></tr></table></figure>

<ul>
<li>NexT 主题 _config.next.yml配置文件-自定义文件路径：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Define custom file paths.</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Create your custom files <span class="keyword">in</span> site directory `<span class="built_in">source</span>/_data` and uncomment needed files below.</span></span><br><span class="line">custom_file_path:</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash"><span class="built_in">head</span>: <span class="built_in">source</span>/_data/head.njk</span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">header: <span class="built_in">source</span>/_data/header.njk</span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">sidebar: <span class="built_in">source</span>/_data/sidebar.njk</span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">postMeta: <span class="built_in">source</span>/_data/post-meta.njk</span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">postBodyStart: <span class="built_in">source</span>/_data/post-body-start.njk</span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">postBodyEnd: <span class="built_in">source</span>/_data/post-body-end.njk</span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">footer: <span class="built_in">source</span>/_data/footer.njk</span></span><br><span class="line">  bodyEnd: source/_data/body-end.njk</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">variable: <span class="built_in">source</span>/_data/variables.styl</span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">mixin: <span class="built_in">source</span>/_data/mixins.styl</span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">style: <span class="built_in">source</span>/_data/styles.styl</span></span><br></pre></td></tr></table></figure>

<ul>
<li>在&#x2F;source&#x2F;_data 路径下创建 body-end.njk 文件，修改注入内容：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">html .sakana-box&#123;</span><br><span class="line">  position: fixed;</span><br><span class="line">  right: 0;</span><br><span class="line">  bottom: 0;</span><br><span class="line">  </span><br><span class="line">  transform-origin: 100% 100%; /* 从右下开始变换 */</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class=&quot;sakana-box&quot;&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script src=&quot;https://cdn.jsdelivr.net/npm/sakana@1.0.8&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">// 取消静音</span><br><span class="line">Sakana.setMute(true);</span><br><span class="line"></span><br><span class="line">// 启动</span><br><span class="line">Sakana.init(&#123;</span><br><span class="line">  el:         &#x27;.sakana-box&#x27;,     // 启动元素 node 或 选择器</span><br><span class="line">  scale:      .5,                // 缩放倍数</span><br><span class="line">  canSwitchCharacter: true,      // 允许换角色</span><br><span class="line">  scale:      0.425,             // 缩放倍数</span><br><span class="line">  character:  &#x27;takina&#x27;,          // 启动角色 &#x27;chisato&#x27;,&#x27;takina&#x27; </span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>重建站点测试效果</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s -g </span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Plugin</tag>
      </tags>
  </entry>
  <entry>
    <title>高性能API网关 Apache APISIX部署</title>
    <url>/apache-apisix/</url>
    <content><![CDATA[<h1 id="高性能API网关-Apache-APISIX部署"><a href="#高性能API网关-Apache-APISIX部署" class="headerlink" title="高性能API网关 Apache APISIX部署"></a>高性能API网关 Apache APISIX部署</h1><p>Apache APISIX 是一个开源的、动态的、实时的高性能云原生 API 网关，由 Apache 软件基金会支持。它设计用于处理服务之间的东西向流量（即微服务间的通信）以及传统的南北向流量（客户端到服务端请求）。APISIX 提供了诸如负载均衡、动态上游、金丝雀发布、服务熔断、身份认证和可观测性等丰富的流量管理功能。此外，APISIX 还支持作为 K8s Ingress Controller 使用，能够处理进入 Kubernetes 集群的流量。<br>APISIX 的主要特点包括：</p>
<ol>
<li><strong>全动态能力</strong>：支持热加载，允许在不重启服务的情况下更新配置。</li>
<li><strong>多平台支持</strong>：可以在多种环境中运行，包括裸机、Kubernetes，以及与 AWS Lambda、Azure Function、Lua 函数和 Apache OpenWhisk 等云服务集成。</li>
<li><strong>精细化路由</strong>：使用 NGINX 内置变量作为路由匹配条件，支持自定义匹配函数。</li>
<li><strong>运维友好</strong>：可以与多种工具和平台集成，如 HashiCorp Vault、Zipkin、Apache SkyWalking、Consul、Nacos 和 Eureka。APISIX Dashboard 提供了一个直观友好的 UI，用于配置 APISIX。</li>
<li><strong>多语言插件支持</strong>：支持多种编程语言开发插件，方便开发者根据需求进行自定义。<br>APISIX 的架构设计使其能够高效地处理大量流量，同时保持扩展性和灵活性。其内部使用 Nginx 和 LuaJIT 作为基础架构，这使得 APISIX 能够充分利用 Nginx 的高性能处理能力。<br>在安全性方面，APISIX 支持多种身份认证机制，包括但不限于 OAuth2、JWT、 basic authentication 等，确保 API 的安全性。<br>APISIX 社区活跃，不断有新的特性和插件被开发和贡献。社区周报是了解 APISIX 最新进展的一个好渠道。此外，APISIX 还提供了详细的文档，帮助用户了解如何安装、配置和使用 APISIX。<br>对于开发人员而言，APISIX 提供了一个易于使用的开发框架，可以方便地创建和定制插件来扩展网关的功能。APISIX 的插件机制非常灵活，插件可以处理路由、限流、熔断、响应处理等各种场景。<br>在运维方面，APISIX 提供了便捷的运维工具，例如可以通过简单的命令进行服务的启动、停止和重启。同时，APISIX 也支持通过 Dashboard 对网关进行配置管理，提高了运维的效率和便利性。<br>综上所述，Apache APISIX 是一个功能全面、灵活性高、易于集成和部署的 API 网关解决方案，适用于各种规模的企业和开发者，特别是在微服务架构和云原生环境中。</li>
</ol>
<h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><ul>
<li>参考文章 <a href="/dockerinit/" title="Docker初始化环境">Docker初始化环境</a></li>
</ul>
<h2 id="安装APISIX"><a href="#安装APISIX" class="headerlink" title="安装APISIX"></a>安装APISIX</h2><ul>
<li>下载 <a href='https://zfile.ceobe.cn/1/高性能API网关 Apache APISIX部署'> Git项目文件 apisix-docker.zip </a>至运行环境</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://zfile.ceobe.cn/s/e21haz -O apisix-docker.zip</span><br></pre></td></tr></table></figure>

<p>** 短链存在有效期，请自行获取并替换 **</p>
<p><img data-src="/apache-apisix/image-20240115160144787.png" alt="image-20240115160144787"></p>
<ul>
<li>解压缩文件：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">unzip apisix-docker.zip</span><br></pre></td></tr></table></figure>

<ul>
<li>使用Docker Compose自行编排容器：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd apisix-docker/example</span><br><span class="line">docker compose -f docker-compose.yml up -d</span><br></pre></td></tr></table></figure>

<p><img data-src="/apache-apisix/image-20240115152109914.png" alt="image-20240115152109914"></p>
<ul>
<li>验证 APISIX 服务：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl &quot;http://127.0.0.1:9080&quot; --head | grep Server</span><br></pre></td></tr></table></figure>

<p><img data-src="/apache-apisix/image-20240115152320421.png" alt="image-20240115152320421"></p>
<h2 id="系统界面"><a href="#系统界面" class="headerlink" title="系统界面"></a>系统界面</h2><ul>
<li>图形界面 APISIX Dashboard：</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:9000/</span><br></pre></td></tr></table></figure>

<p>默认帐号：admin</p>
<p>默认密码： admin</p>
<p>配置文件路径： apisix-docker&#x2F;example&#x2F;dashboard_conf&#x2F;conf.yaml</p>
<p><img data-src="/apache-apisix/image-20240115152841419.png" alt="image-20240115152841419"></p>
<ul>
<li>图形界面 Grafana：</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:3000</span><br></pre></td></tr></table></figure>

<p>默认帐号： admin</p>
<p>默认密码： admin（首次登录时要求修改）</p>
<p><img data-src="/apache-apisix/image-20240115153140700.png" alt="image-20240115153140700"></p>
<ul>
<li>监控告警系统 Prometheus：</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:9090</span><br></pre></td></tr></table></figure>

<p>配置文件路径： apisix-docker&#x2F;example&#x2F;prometheus_conf&#x2F;prometheus.yml</p>
<p><img data-src="/apache-apisix/image-20240115153513965.png" alt="image-20240115153513965"></p>
<ul>
<li>APISIX 管理后台 &amp; 前端：</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:9180</span><br><span class="line">http://127.0.0.1:9080</span><br></pre></td></tr></table></figure>

<p>创建测试路由：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -i &quot;http://127.0.0.1:9180/apisix/admin/routes&quot; -H &#x27;X-API-KEY: edd1c9f034335f136f87ad84b625c8f1&#x27; -X PUT -d &#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;id&quot;: &quot;getting-started-ip&quot;,</span><br><span class="line">  &quot;uri&quot;: &quot;/ip&quot;,</span><br><span class="line">  &quot;upstream&quot;: &#123;</span><br><span class="line">    &quot;type&quot;: &quot;roundrobin&quot;,</span><br><span class="line">    &quot;nodes&quot;: &#123;</span><br><span class="line">      &quot;httpbin.org:80&quot;: 1</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;&#x27;</span><br><span class="line"></span><br><span class="line">curl http://127.0.0.1:9080/ip</span><br></pre></td></tr></table></figure>

<p><img data-src="/apache-apisix/image-20240115154121792.png" alt="image-20240115154121792"></p>
<p>调用 &#x2F;ip 接口测试源地址：</p>
<p><img data-src="/apache-apisix/image-20240115154156600.png" alt="image-20240115154156600"></p>
<h2 id="（可选）APISIX-联动雷池-Safeline"><a href="#（可选）APISIX-联动雷池-Safeline" class="headerlink" title="-（可选）APISIX 联动雷池 Safeline"></a>-（可选）APISIX 联动雷池 Safeline</h2><p>雷池是由长亭科技开发的 WAF 系统，提供对 HTTP 请求的安全请求，提供完整的 API 管理和防护能力。</p>
<p>自 APISIX 3.5.0 之后的版本将内置长亭雷池 WAF 插件，在启用 chaitin-waf 插件后，流量将被转发给长亭 WAF 服务，用以检测和防止各种 Web 应用程序攻击，以保护应用程序和用户数据的安全。</p>
<h2 id="安装雷池"><a href="#安装雷池" class="headerlink" title="安装雷池"></a>安装雷池</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">bash -c &quot;$(curl -fsSLk https://waf-ce.chaitin.cn/release/latest/setup.sh)&quot;</span><br></pre></td></tr></table></figure>

<h2 id="修改雷池检测引擎的工作模式"><a href="#修改雷池检测引擎的工作模式" class="headerlink" title="修改雷池检测引擎的工作模式"></a>修改雷池检测引擎的工作模式</h2><p>社区版雷池的检测引擎默认以 unix socket 的方式提供服务，我们需要把他修改为 tcp 方式，供 APISIX 调用。</p>
<p>进入雷池检测引擎的配置目录：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /data/safeline/resources/detector/</span><br></pre></td></tr></table></figure>

<p>用文本编辑器打开目录里的 detector.yml 文件，我们需要将 bind 方式从 unix socket 改为 tcp，添加如下配置：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">bind_addr: 0.0.0.0</span><br><span class="line">listen_port: 8000</span><br></pre></td></tr></table></figure>

<p>detector配置的属性值将覆盖容器内默认配置文件的同名属性值。这样我们就把雷池引擎的服务监听到了 8000 端口，现在只需要把容器内的 8000 端口映射到宿主机即可。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /data/safeline/compose.yaml</span><br></pre></td></tr></table></figure>

<p>为 detector 容器增加 ports 字段，暴露其 8000端口，参考如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">......</span><br><span class="line"></span><br><span class="line">detect:</span><br><span class="line">    ......</span><br><span class="line">    ports:</span><br><span class="line">    - 8000:8000</span><br><span class="line"></span><br><span class="line">......</span><br></pre></td></tr></table></figure>

<p>重启雷池生效：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker compose down</span><br><span class="line">docker compose up -d</span><br></pre></td></tr></table></figure>

<h2 id="修改雷池默认端口"><a href="#修改雷池默认端口" class="headerlink" title="修改雷池默认端口"></a>修改雷池默认端口</h2><p>雷池和 apisix 默认都监听 9443 端口，如果在同一台机器上安装，需要修改雷池的默认端口。</p>
<p>在雷池的安装目录下，有一个名为 .env 的隐藏文件，其中的 MGT_PORT 字段，修改这里后使用上面的方法再重启雷池即可生效。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /data/safeline</span><br><span class="line">vim .env</span><br></pre></td></tr></table></figure>

<h2 id="在APISIX中绑定雷池"><a href="#在APISIX中绑定雷池" class="headerlink" title="在APISIX中绑定雷池"></a>在APISIX中绑定雷池</h2><p>调用 apisix 的 api，设置雷池检测引擎的地址，供 apisix 调用，参考以下请求：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl &lt;http://127.0.0.1:9180/apisix/admin/plugin_metadata/chaitin-waf&gt; -H &#x27;X-API-KEY: edd1c9f034335f136f87ad84b625c8f1&#x27; -X PUT -d &#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;nodes&quot;:[</span><br><span class="line">     &#123;</span><br><span class="line">       &quot;host&quot;: &quot;127.0.0.1&quot;,</span><br><span class="line">       &quot;port&quot;: 8000</span><br><span class="line">     &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;&#x27;</span><br></pre></td></tr></table></figure>

<p>调用 apisix 的 api，设置一条路由，参考以下请求：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl &lt;http://127.0.0.1:9180/apisix/admin/routes/1&gt; -H &#x27;X-API-KEY: edd1c9f034335f136f87ad84b625c8f1&#x27; -X PUT -d &#x27;</span><br><span class="line">&#123;</span><br><span class="line">   &quot;uri&quot;: &quot;/*&quot;,</span><br><span class="line">   &quot;plugins&quot;: &#123;</span><br><span class="line">       &quot;chaitin-waf&quot;: &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">   &quot;upstream&quot;: &#123;</span><br><span class="line">       &quot;type&quot;: &quot;roundrobin&quot;,</span><br><span class="line">       &quot;nodes&quot;: &#123;</span><br><span class="line">           &quot;127.0.0.1:80&quot;: 1</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;&#x27;</span><br></pre></td></tr></table></figure>

<h2 id="测试防护效果"><a href="#测试防护效果" class="headerlink" title="测试防护效果"></a>测试防护效果</h2><p>在请求中加入注入攻击参数：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl &#x27;&lt;http://127.0.0.1:9080/&gt;&#x27; -d &#x27;a=1 and 1=1&#x27;</span><br></pre></td></tr></table></figure>

<p>得到结果：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;code&quot;: 403,</span><br><span class="line">  &quot;success&quot;: false,</span><br><span class="line">  &quot;message&quot;: &quot;blocked by Chaitin SafeLine Web Application Firewall&quot;,</span><br><span class="line">  &quot;event_id&quot;: &quot;18e0f220f7a94127acb21ad3c1b4ac47&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>打开雷池的控制台界面，可以看到雷池记录了完整的攻击信息。</p>
<h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>APISIX管理请求需密钥授权，在生产环境中使用时务必修改默认</p>
<p>‘X-API-KEY: edd1c9f034335f136f87ad84b625c8f1’</p>
<p>配置文件路径：</p>
<p>apisix-docker&#x2F;example&#x2F;apisix_conf&#x2F;conf.yaml</p>
]]></content>
      <categories>
        <category>网关</category>
      </categories>
      <tags>
        <tag>API</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>卸载macOS操作系统中的Nessus服务</title>
    <url>/Uninstall%20Nessus%20on%20macOS/</url>
    <content><![CDATA[<h1 id="卸载macOS操作系统中的Nessus服务"><a href="#卸载macOS操作系统中的Nessus服务" class="headerlink" title="卸载macOS操作系统中的Nessus服务"></a>卸载macOS操作系统中的Nessus服务</h1><h2 id="停止Nessus服务"><a href="#停止Nessus服务" class="headerlink" title="停止Nessus服务"></a>停止Nessus服务</h2><blockquote>
<ol>
<li><p>打开“系统设置”，点击“Nessus”图标；</p>
<p><img data-src="/Uninstall%20Nessus%20on%20macOS/image-20231221132838100.png" alt="image-20231221132838100"></p>
</li>
<li><p>点击锁按扭进行更改，输入管理员密码，点击“StopNessus”按扭；</p>
</li>
<li><p>等待服务停止。</p>
</li>
</ol>
</blockquote>
<h2 id="删除Nessus服务文件"><a href="#删除Nessus服务文件" class="headerlink" title="删除Nessus服务文件"></a>删除Nessus服务文件</h2><p>​	删除Nessus相关目录中的文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo rm /Library/Nessus </span><br><span class="line">sudo rm /Library/LaunchDaemons/com.tenablesecurity.nessusd.plist </span><br><span class="line">sudo rm /Library/PreferencePanes/Nessus Preferences.prefPane </span><br><span class="line">sudo rm /Applications/Nessus</span><br></pre></td></tr></table></figure>

<h2 id="移除Nessus服务"><a href="#移除Nessus服务" class="headerlink" title="移除Nessus服务"></a>移除Nessus服务</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo launchctl remove com.tenablesecurity.nessusd</span><br></pre></td></tr></table></figure>

<ul>
<li><p>移除“系统设置”中的Nessus按扭</p>
<p><img data-src="/Uninstall%20Nessus%20on%20macOS/image-20231221135722835.png" alt="image-20231221135722835"></p>
</li>
</ul>
<blockquote>
<p>参考链接：<a href="https://docs.tenable.com/nessus/Content/RemoveNessusMacOS.htm">https://docs.tenable.com/nessus/Content/RemoveNessusMacOS.htm</a></p>
</blockquote>
]]></content>
      <categories>
        <category>issue</category>
      </categories>
  </entry>
  <entry>
    <title>Docker初始化环境</title>
    <url>/dockerinit/</url>
    <content><![CDATA[<h1 id="Docker安装和使用"><a href="#Docker安装和使用" class="headerlink" title="Docker安装和使用"></a>Docker安装和使用</h1><h2 id="系统要求"><a href="#系统要求" class="headerlink" title="- 系统要求"></a>- 系统要求</h2><p>在开始安装Docker之前，请确保操作系统满足以下基本要求：</p>
<ul>
<li>64位Linux操作系统（以 Alibaba Cloud Linux3 为例）</li>
<li>至少2GB的RAM（推荐 4GB 或更多）</li>
</ul>
<p><img data-src="/dockerinit/systemversion.png" alt="systemversion"></p>
<p>*Alibaba Cloud Linux 3兼容CentOS 8、RHEL 8生态，默认搭载阿里云CLI。</p>
<h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="- 安装Docker"></a>- 安装Docker</h2><ul>
<li>设置Docker官方源：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo yum install -y yum-utils</span><br><span class="line">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure>

<p><img data-src="/dockerinit/source.png" alt="source"></p>
<ul>
<li>安装Docker Engine：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo yum install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br></pre></td></tr></table></figure>

<p><img data-src="/dockerinit/docker.png" alt="docker"></p>
<ul>
<li>查看已安装Docker版本：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker -v</span><br></pre></td></tr></table></figure>

<p><img data-src="/dockerinit/ver.png" alt="ver"></p>
<ul>
<li>启动Docker服务：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure>

<p><img data-src="/dockerinit/start.png" alt="start"></p>
<ul>
<li>注册Docker服务（开机启动）：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl enable docker</span><br></pre></td></tr></table></figure>

<ul>
<li>查看所有容器：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure>

<ul>
<li>拉取镜像：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull &lt;image&gt;:&lt;tag&gt;</span><br></pre></td></tr></table></figure>

<h2 id="（可选）安装Docker-Compose"><a href="#（可选）安装Docker-Compose" class="headerlink" title="- （可选）安装Docker Compose"></a>- （可选）安装Docker Compose</h2><p>上述步骤包含Docker Compose组件，如需单独安装，可执行以下命令。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo yum update</span><br><span class="line">sudo yum install docker-compose-plugin</span><br></pre></td></tr></table></figure>

<p><img data-src="/dockerinit/compose.png" alt="compose"></p>
<p>*Docker文档引用并描述Compose V2的功能。自2023年7月起，Compose V1停止接收更新，不再在新的Docker Desktop版本中。Compose V2已经取代了它，现在集成到所有当前的Docker Desktop版本中。</p>
<h2 id="（可选）使用阿里云提供的源安装Docker"><a href="#（可选）使用阿里云提供的源安装Docker" class="headerlink" title="- （可选）使用阿里云提供的源安装Docker"></a>- （可选）使用阿里云提供的源安装Docker</h2><ul>
<li><p>运行以下命令，添加docker-ce的dnf源。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo dnf config-manager --add-repo=https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure>
</li>
<li><p>运行以下命令，安装Alibaba Cloud Linux 3专用的dnf源兼容插件。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo dnf -y install dnf-plugin-releasever-adapter --repo alinux3-plus</span><br></pre></td></tr></table></figure>
</li>
<li><p>运行以下命令，安装Docker。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo dnf -y install docker-ce --nobest</span><br></pre></td></tr></table></figure>

<ul>
<li><p>如果执行命令时，出现类似如下的报错信息，需要执行<code>sudo dnf clean packages</code>清除软件包缓存后，重新安装docker-ce。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">(8-9/12): docker-ce-24.0.7-1.el8.x86_64.rpm 38% [================- ] 8.2 MB/s | 38 MB 00:07 ETA</span><br><span class="line">The downloaded packages were saved in cache until the next successful transaction.</span><br><span class="line">You can remove cached packages by executing &#x27;dnf clean packages&#x27;.</span><br><span class="line">Error: Error downloading packages:</span><br><span class="line">containerd.io-1.6.26-3.1.el8.x86_64: Cannot download, all mirrors were already tried without success</span><br></pre></td></tr></table></figure>
</li>
<li><p>如果执行命令时，出现类似下图的报错信息，您需要注释&#x2F;etc&#x2F;yum.repos.d下的CentOS源，注释后重新安装docker-ce。</p>
<p><img data-src="/dockerinit/p477222.png" alt="p477222"></p>
</li>
</ul>
</li>
<li><p>管理Docker守护进程</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl start docker     #运行Docker守护进程</span><br><span class="line">sudo systemctl stop docker      #停止Docker守护进程</span><br><span class="line">sudo systemctl restart docker   #重启Docker守护进程</span><br><span class="line">sudo systemctl enable docker    #设置Docker开机自启动</span><br><span class="line">sudo systemctl status docker    #查看Docker的运行状态</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改标签。如果镜像名称较长，您可以修改镜像标签以便记忆区分。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo docker tag registry.cn-hangzhou.aliyuncs.com/lxepoo/apache-php5:latest aliweb:v1</span><br></pre></td></tr></table></figure>
</li>
<li><p>查看已有镜像。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo docker images</span><br></pre></td></tr></table></figure>
</li>
<li><p>强制删除镜像。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo docker rmi -f registry.cn-hangzhou.aliyuncs.com/lxepoo/apache-php5</span><br></pre></td></tr></table></figure>
</li>
<li><p>将容器做成镜像。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo docker commit &lt;容器ID或容器名&gt; &lt;仓库名&gt;:&lt;标签&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>将镜像推送到镜像仓库，如DockerRegistry。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo docker push &lt;仓库名&gt;:&lt;标签&gt;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="（更新）Debian-Ubuntu环境下安装Docker"><a href="#（更新）Debian-Ubuntu环境下安装Docker" class="headerlink" title="- （更新）Debian&#x2F;Ubuntu环境下安装Docker"></a>- （更新）Debian&#x2F;Ubuntu环境下安装Docker</h2><ul>
<li>执行以下命令卸载旧版本&#x2F;冲突安装包，如podman、docker-compose（v1）。</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do sudo apt-get remove $pkg; done</span><br></pre></td></tr></table></figure>

<ul>
<li>设置apt源</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Add Docker<span class="string">&#x27;s official GPG key:</span></span></span><br><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get install ca-certificates curl gnupg</span><br><span class="line"></span><br><span class="line">sudo install -m 0755 -d /etc/apt/keyrings</span><br><span class="line"></span><br><span class="line">curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg</span><br><span class="line"></span><br><span class="line">sudo chmod a+r /etc/apt/keyrings/docker.gpg</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Add the repository to Apt sources:</span></span></span><br><span class="line">echo \</span><br><span class="line">  &quot;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \</span><br><span class="line"><span class="meta prompt_">  $</span><span class="language-bash"><span class="string">(. /etc/os-release &amp;&amp; echo &quot;$VERSION_CODENAME&quot;) stable&quot; | \</span></span></span><br><span class="line"><span class="string"><span class="language-bash">  sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span></span></span><br><span class="line">  </span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>

<ul>
<li>安装Docker</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>容器</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Python图像识别自动化脚本</title>
    <url>/pythoncvscript/</url>
    <content><![CDATA[<blockquote>
<ol>
<li>安装python3.4以上版本，并配置环境变量<br><a href="https://www.runoob.com/python3/python3-install.html">&gt;python安装教程&lt;</a></li>
<li>安装依赖包<br><code>pip install pyperclip  pip install xlrd  pip install pyautogui==0.9.50  pip install opencv-python  pip install pillow </code></li>
<li>把每一步要操作的图标、区域截图保存至本文件夹  png格式（注意如果同屏有多个相同图标，回默认找到最左上的一个，因此怎么截图，截多大的区域，是个学问，如输入框只截中间空白部分肯定是不行的，宗旨就是“唯一”）</li>
<li>在cmd.xls 的sheet1 中，配置每一步的指令，如指令类型1234  对应的内容填截图文件名，指令5对应的内容是等待时长（单位秒） 指令6对应的内容是滚轮滚动的距离，正数表示向上滚，负数表示向下滚</li>
<li>保存文件</li>
<li>双击waterRPA.py打开程序，按1表示excel中的指令执行一次，按2表示无限重复执行直到程序关闭</li>
</ol>
</blockquote>
<ul>
<li><!--nore--></li>
<li>如果报错不能运行用vscode运行看看报错内容</li>
<li>开始程序后请将程序框最小化，不然程序框挡住的区域是无法识别和操作的</li>
<li>如果程序开始后因为你选择了无限重复而鼠标被占用停不下来，alt+F4吧~<br><a href="https://blog.csdn.net/qingfengxd1/article/details/108270159">&gt;二次开发和优化参考pyautogui库用法&lt;</a></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pyautogui</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> xlrd</span><br><span class="line"><span class="keyword">import</span> pyperclip</span><br><span class="line"></span><br><span class="line">[[定义鼠标事件]]</span><br><span class="line">[[pyautogui库其他用法]] [https://blog.csdn.net/qingfengxd1/article/details/<span class="number">108270159</span>](https://blog.csdn.net/qingfengxd1/article/details/<span class="number">108270159</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mouseClick</span>(<span class="params">clickTimes,lOrR,img,reTry</span>):</span><br><span class="line">    <span class="keyword">if</span> reTry == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            location=pyautogui.locateCenterOnScreen(img,confidence=<span class="number">0.9</span>)</span><br><span class="line">            <span class="keyword">if</span> location <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">             pyautogui.click(location.x,location.y,clicks=clickTimes,interval=<span class="number">0.2</span>,duration=<span class="number">0.2</span>,button=lOrR)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;未找到匹配图片,0.1秒后重试&quot;</span>)</span><br><span class="line">            time.sleep(<span class="number">0.1</span>)</span><br><span class="line">    <span class="keyword">elif</span> reTry == -<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            location=pyautogui.locateCenterOnScreen(img,confidence=<span class="number">0.9</span>)</span><br><span class="line">            <span class="keyword">if</span> location <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:                pyautogui.click(location.x,location.y,clicks=clickTimes,interval=<span class="number">0.2</span>,duration=<span class="number">0.2</span>,button=lOrR)</span><br><span class="line">            time.sleep(<span class="number">0.1</span>)</span><br><span class="line">    <span class="keyword">elif</span> reTry &gt; <span class="number">1</span>:</span><br><span class="line">        i = <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; reTry + <span class="number">1</span>:</span><br><span class="line">            location=pyautogui.locateCenterOnScreen(img,confidence=<span class="number">0.9</span>)</span><br><span class="line">            <span class="keyword">if</span> location <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:               pyautogui.click(location.x,location.y,clicks=clickTimes,interval=<span class="number">0.2</span>,duration=<span class="number">0.2</span>,button=lOrR)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;重复&quot;</span>)</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            time.sleep(<span class="number">0.1</span>)</span><br><span class="line"><span class="comment"># 数据检查</span></span><br><span class="line"><span class="comment"># cmdType.value  1.0 左键单击    2.0 左键双击  3.0 右键单击  4.0 输入  5.0 等待  6.0 滚轮</span></span><br><span class="line"><span class="comment"># ctype     空：0</span></span><br><span class="line"><span class="comment">#           字符串：1</span></span><br><span class="line"><span class="comment">#           数字：2</span></span><br><span class="line"><span class="comment">#           日期：3</span></span><br><span class="line"><span class="comment">#           布尔：4</span></span><br><span class="line"><span class="comment">#           error：5</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dataCheck</span>(<span class="params">sheet1</span>):</span><br><span class="line">    checkCmd = <span class="literal">True</span></span><br><span class="line">    [[行数检查]]</span><br><span class="line">    <span class="keyword">if</span> sheet1.nrows&lt;<span class="number">2</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;没数据啊哥&quot;</span>)</span><br><span class="line">        checkCmd = <span class="literal">False</span></span><br><span class="line">    [[每行数据检查]]</span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; sheet1.nrows:</span><br><span class="line">        <span class="comment"># 第1列 操作类型检查</span></span><br><span class="line">        cmdType = sheet1.row(i)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">if</span> cmdType.ctype != <span class="number">2</span> <span class="keyword">or</span> (cmdType.value != <span class="number">1.0</span> <span class="keyword">and</span> cmdType.value != <span class="number">2.0</span> <span class="keyword">and</span> cmdType.value != <span class="number">3.0</span></span><br><span class="line">        <span class="keyword">and</span> cmdType.value != <span class="number">4.0</span> <span class="keyword">and</span> cmdType.value != <span class="number">5.0</span> <span class="keyword">and</span> cmdType.value != <span class="number">6.0</span>):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;第&#x27;</span>,i+<span class="number">1</span>,<span class="string">&quot;行,第1列数据有毛病&quot;</span>)</span><br><span class="line">            checkCmd = <span class="literal">False</span></span><br><span class="line">        <span class="comment"># 第2列 内容检查</span></span><br><span class="line">        cmdValue = sheet1.row(i)[<span class="number">1</span>]</span><br><span class="line">        <span class="comment"># 读图点击类型指令，内容必须为字符串类型</span></span><br><span class="line">        <span class="keyword">if</span> cmdType.value ==<span class="number">1.0</span> <span class="keyword">or</span> cmdType.value == <span class="number">2.0</span> <span class="keyword">or</span> cmdType.value == <span class="number">3.0</span>:</span><br><span class="line">            <span class="keyword">if</span> cmdValue.ctype != <span class="number">1</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;第&#x27;</span>,i+<span class="number">1</span>,<span class="string">&quot;行,第2列数据有毛病&quot;</span>)</span><br><span class="line">                checkCmd = <span class="literal">False</span></span><br><span class="line">        <span class="comment"># 输入类型，内容不能为空</span></span><br><span class="line">        <span class="keyword">if</span> cmdType.value == <span class="number">4.0</span>:</span><br><span class="line">            <span class="keyword">if</span> cmdValue.ctype == <span class="number">0</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;第&#x27;</span>,i+<span class="number">1</span>,<span class="string">&quot;行,第2列数据有毛病&quot;</span>)</span><br><span class="line">                checkCmd = <span class="literal">False</span></span><br><span class="line">        <span class="comment"># 等待类型，内容必须为数字</span></span><br><span class="line">        <span class="keyword">if</span> cmdType.value == <span class="number">5.0</span>:</span><br><span class="line">            <span class="keyword">if</span> cmdValue.ctype != <span class="number">2</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;第&#x27;</span>,i+<span class="number">1</span>,<span class="string">&quot;行,第2列数据有毛病&quot;</span>)</span><br><span class="line">                checkCmd = <span class="literal">False</span></span><br><span class="line">        <span class="comment"># 滚轮事件，内容必须为数字</span></span><br><span class="line">        <span class="keyword">if</span> cmdType.value == <span class="number">6.0</span>:</span><br><span class="line">            <span class="keyword">if</span> cmdValue.ctype != <span class="number">2</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;第&#x27;</span>,i+<span class="number">1</span>,<span class="string">&quot;行,第2列数据有毛病&quot;</span>)</span><br><span class="line">                checkCmd = <span class="literal">False</span></span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> checkCmd</span><br><span class="line">[[任务]]</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mainWork</span>(<span class="params">img</span>):</span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; sheet1.nrows:</span><br><span class="line">        [[取本行指令的操作类型]]</span><br><span class="line">        cmdType = sheet1.row(i)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">if</span> cmdType.value == <span class="number">1.0</span>:</span><br><span class="line">            [[取图片名称]]</span><br><span class="line">            img = sheet1.row(i)[<span class="number">1</span>].value</span><br><span class="line">            reTry = <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> sheet1.row(i)[<span class="number">2</span>].ctype == <span class="number">2</span> <span class="keyword">and</span> sheet1.row(i)[<span class="number">2</span>].value != <span class="number">0</span>:</span><br><span class="line">                reTry = sheet1.row(i)[<span class="number">2</span>].value</span><br><span class="line">            mouseClick(<span class="number">1</span>,<span class="string">&quot;left&quot;</span>,img,reTry)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;单击左键&quot;</span>,img)</span><br><span class="line">        [[<span class="number">2</span>代表双击左键]]</span><br><span class="line">        <span class="keyword">elif</span> cmdType.value == <span class="number">2.0</span>:</span><br><span class="line">            [[取图片名称]]</span><br><span class="line">            img = sheet1.row(i)[<span class="number">1</span>].value</span><br><span class="line">            [[取重试次数]]</span><br><span class="line">            reTry = <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> sheet1.row(i)[<span class="number">2</span>].ctype == <span class="number">2</span> <span class="keyword">and</span> sheet1.row(i)[<span class="number">2</span>].value != <span class="number">0</span>:</span><br><span class="line">                reTry = sheet1.row(i)[<span class="number">2</span>].value</span><br><span class="line">            mouseClick(<span class="number">2</span>,<span class="string">&quot;left&quot;</span>,img,reTry)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;双击左键&quot;</span>,img)</span><br><span class="line">        [[<span class="number">3</span>代表右键]]</span><br><span class="line">        <span class="keyword">elif</span> cmdType.value == <span class="number">3.0</span>:</span><br><span class="line">            [[取图片名称]]</span><br><span class="line">            img = sheet1.row(i)[<span class="number">1</span>].value</span><br><span class="line">            [[取重试次数]]</span><br><span class="line">            reTry = <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> sheet1.row(i)[<span class="number">2</span>].ctype == <span class="number">2</span> <span class="keyword">and</span> sheet1.row(i)[<span class="number">2</span>].value != <span class="number">0</span>:</span><br><span class="line">                reTry = sheet1.row(i)[<span class="number">2</span>].value</span><br><span class="line">            mouseClick(<span class="number">1</span>,<span class="string">&quot;right&quot;</span>,img,reTry)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;右键&quot;</span>,img)</span><br><span class="line">        [[<span class="number">4</span>代表输入]]</span><br><span class="line">        <span class="keyword">elif</span> cmdType.value == <span class="number">4.0</span>:</span><br><span class="line">            inputValue = sheet1.row(i)[<span class="number">1</span>].value</span><br><span class="line">            pyperclip.copy(inputValue)</span><br><span class="line">            pyautogui.hotkey(<span class="string">&#x27;ctrl&#x27;</span>,<span class="string">&#x27;v&#x27;</span>)</span><br><span class="line">            time.sleep(<span class="number">0.5</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;输入:&quot;</span>,inputValue)                                        </span><br><span class="line">        [[<span class="number">5</span>代表等待]]</span><br><span class="line">        <span class="keyword">elif</span> cmdType.value == <span class="number">5.0</span>:</span><br><span class="line">            [[取图片名称]]</span><br><span class="line">            waitTime = sheet1.row(i)[<span class="number">1</span>].value</span><br><span class="line">            time.sleep(waitTime)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;等待&quot;</span>,waitTime,<span class="string">&quot;秒&quot;</span>)</span><br><span class="line">        [[<span class="number">6</span>代表滚轮]]</span><br><span class="line">        <span class="keyword">elif</span> cmdType.value == <span class="number">6.0</span>:</span><br><span class="line">            [[取图片名称]]</span><br><span class="line">            scroll = sheet1.row(i)[<span class="number">1</span>].value</span><br><span class="line">            pyautogui.scroll(<span class="built_in">int</span>(scroll))</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;滚轮滑动&quot;</span>,<span class="built_in">int</span>(scroll),<span class="string">&quot;距离&quot;</span>)                      </span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    file = <span class="string">&#x27;cmd.xls&#x27;</span></span><br><span class="line">    [[打开文件]]</span><br><span class="line">    wb = xlrd.open_workbook(filename=file)</span><br><span class="line">    [[通过索引获取表格sheet页]]</span><br><span class="line">    sheet1 = wb.sheet_by_index(<span class="number">0</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;欢迎使用不高兴就喝水牌RPA~&#x27;</span>)</span><br><span class="line">    [[数据检查]]</span><br><span class="line">    checkCmd = dataCheck(sheet1)</span><br><span class="line">    <span class="keyword">if</span> checkCmd:</span><br><span class="line">        key=<span class="built_in">input</span>(<span class="string">&#x27;选择功能: 1.做一次 2.循环到死 \n&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> key==<span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            [[循环拿出每一行指令]]</span><br><span class="line">            mainWork(sheet1)</span><br><span class="line">        <span class="keyword">elif</span> key==<span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                mainWork(sheet1)</span><br><span class="line">                time.sleep(<span class="number">0.1</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;等待0.1秒&quot;</span>)    </span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;输入有误或者已经退出!&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p><img data-src="https://halo-bak.oss-cn-hangzhou.aliyuncs.com/yfsutlfv.jpg" alt="yfsutlfv.jpg"></p>
]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Pytorch天坑</title>
    <url>/pytorchcover/</url>
    <content><![CDATA[<h1 id="【错误】-Torch-not-compiled-with-CUDA-enabled解决方法"><a href="#【错误】-Torch-not-compiled-with-CUDA-enabled解决方法" class="headerlink" title="【错误】# Torch not compiled with CUDA enabled解决方法"></a>【错误】# Torch not compiled with CUDA enabled解决方法</h1><span id="more"></span>

<blockquote>
<p>1-测试是否有CUDA</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="built_in">print</span>（torch.__version__）</span><br><span class="line"><span class="built_in">print</span>(torch.cuda.is_available())</span><br></pre></td></tr></table></figure>

<blockquote>
<p>2-结果打印False，查看显卡驱动程序版本【右键- NVIDIA控制面板-系统信息-显示】</p>
</blockquote>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">nvcc <span class="literal">-v</span></span><br></pre></td></tr></table></figure>

<p><a href="https://developer.nvidia.com/cuda-toolkit-archive">&gt;下载CUDA&lt;</a></p>
<blockquote>
<p>3-测试Pytorch可用</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="built_in">print</span>(torch.__version__)</span><br><span class="line"><span class="built_in">print</span>(torch.cuda.is_available)</span><br></pre></td></tr></table></figure>

<p>*<em>注：若返回结果类似【2.0.1+cpu】，则安装PyTorch版本是CPU版，需要卸载重新安装</em></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">pip uninstall torch torchvision</span><br></pre></td></tr></table></figure>

<p>  <a href="https://pytorch.org/get-started/locally/#supported-windows-distributions">&gt;PyTorch&lt;</a></p>
]]></content>
      <categories>
        <category>issue</category>
      </categories>
      <tags>
        <tag>PyTorch</tag>
      </tags>
  </entry>
  <entry>
    <title>Typora的Markdown语法</title>
    <url>/typoraMarkdown/</url>
    <content><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p><strong>Markdown</strong> 由 <a href="http://daringfireball.net/">Daring Fireball</a> 创建，原始指南在 <a href="http://daringfireball.net/projects/markdown/syntax">这里</a>。但是，它的语法因不同的解析器或编辑器而异。<strong>Typora</strong>正在使用 <a href="https://help.github.com/articles/github-flavored-markdown/">GitHub Flavored Markdown</a>。</p>
<h2 id="块元素"><a href="#块元素" class="headerlink" title="块元素"></a>块元素</h2><h3 id="段落和换行符"><a href="#段落和换行符" class="headerlink" title="段落和换行符"></a>段落和换行符</h3><p>段落只是一行或多行连续的文本。在 markdown 源代码中，段落由多个空行分隔。在Typora中，您只需按下 <code>Return</code> 即可创建新段落。</p>
<p>按 <code>Shift</code> + <code>Return</code> 可创建单个换行符。但是，大多数 markdown 解析器将忽略单行中断，要使其他 markdown 解析器识别您的换行符，可以在行尾留下两个空格，或者插入 <code>&lt;br/&gt;</code>.</p>
<h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>标题在行的开头使用1-6个＃字符，对应于标题级别1-6。例如：</p>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line"># 这是一级标题</span><br><span class="line"></span><br><span class="line">## 这是二级标题</span><br><span class="line"></span><br><span class="line">###### 这是六级标题</span><br></pre></td></tr></table></figure>

<p>在typora中，输入’＃’后跟标题内容，按下 <code>Return</code> 键将创建标题。</p>
<h3 id="引用文字"><a href="#引用文字" class="headerlink" title="引用文字"></a>引用文字</h3><p>Markdown 使用电子邮件样式&gt;字符进行块引用。它们表示为：</p>
<figure class="highlight node-repl"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript">这是一个有两段的块引用。这是第一段。</span></span><br><span class="line"><span class="meta prompt_">&gt;</span></span><br><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript">这是第二段。<span class="title class_">Vestibulum</span> enim wisi, viverra nec, fringilla <span class="keyword">in</span>, laoreet vitae, risus.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript">这是另一个只有一个段落的块引用。有三个空行分隔两个块引用。</span></span><br></pre></td></tr></table></figure>

<p>在typora中，只需输入’&gt;’后跟引用内容即可生成块引用。Typora将为您插入正确的“&gt;”或换行符。通过添加额外级别的“&gt;”允许在块引用内嵌入另一个块引用。</p>
<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>输入 <code>* list item 1</code> 将创建一个无序列表，该 <code>*</code> 符号可以替换为 <code>+</code> 或 <code>-</code>.</p>
<p>输入 <code>1. list item 1</code> 将创建一个有序列表，其 markdown 源代码如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">## 无序列表</span></span><br><span class="line"><span class="bullet">*</span>   红色</span><br><span class="line"><span class="bullet">*</span>   绿色</span><br><span class="line"><span class="bullet">*</span>   蓝色</span><br><span class="line"></span><br><span class="line"><span class="section">## 有序列表</span></span><br><span class="line"><span class="bullet">1.</span>  红色</span><br><span class="line"><span class="bullet">2.</span> 	绿色</span><br><span class="line"><span class="bullet">3.</span>	蓝色</span><br></pre></td></tr></table></figure>



<h3 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h3><p>任务列表是标记为[ ]或[x]（未完成或完成）的项目的列表。例如：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">- <span class="selector-attr">[ ]</span> 这是一个任务列表项</span><br><span class="line">- <span class="selector-attr">[ ]</span> 需要在前面使用列表的语法</span><br><span class="line">- <span class="selector-attr">[ ]</span> <span class="attribute">normal</span> **formatting**, @mentions, <span class="number">#1234</span> refs</span><br><span class="line">- <span class="selector-attr">[ ]</span> 未完成</span><br><span class="line">- <span class="selector-attr">[x]</span> 完成</span><br></pre></td></tr></table></figure>

<p>您可以通过单击项目前面的复选框来更改完成&#x2F;未完成状态。</p>
<h3 id="（栅栏式）代码块"><a href="#（栅栏式）代码块" class="headerlink" title="（栅栏式）代码块"></a>（栅栏式）代码块</h3><p>Typora仅支持 Github Flavored Markdown 中的栅栏式代码块。不支持 markdown 中的原始代码块。</p>
<p>使用栅栏式代码块很简单：输入&#96;&#96;&#96;之后输入一个可选的语言标识符，然后按<code>return</code>键后输入代码，我们将通过语法高亮显示它：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">这是一个例子：</span><br><span class="line"></span><br><span class="line">```</span><br><span class="line">function test() &#123;</span><br><span class="line">  console.log(&quot;notice the blank line before this function?&quot;);</span><br><span class="line">&#125;</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">语法高亮：</span><br><span class="line">```ruby</span><br><span class="line">require &#x27;redcarpet&#x27;</span><br><span class="line">markdown = Redcarpet.new(&quot;Hello World!&quot;)</span><br><span class="line">puts markdown.to_html</span><br><span class="line">```</span><br></pre></td></tr></table></figure>



<h3 id="数学公式块"><a href="#数学公式块" class="headerlink" title="数学公式块"></a>数学公式块</h3><p>您可以使用 <strong>MathJax</strong> 渲染 <em>LaTeX</em> 数学表达式。</p>
<p>输入 <code>$$</code>, 然后按“return”键将触发一个接受<em>Tex &#x2F; LaTex</em>源代码的输入区域。以下是一个例子：<strong>V</strong>1×<strong>V</strong>2&#x3D;∣∣∣∣∣∣<strong>i</strong>∂X∂u∂X∂v<strong>j</strong>∂Y∂u∂Y∂v<strong>k</strong>00∣∣∣∣∣∣</p>
<p>在 markdown 源文件中，数学公式块是由’$$’标记包装的 <em>LaTeX</em> 表达式：</p>
<figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line"><span class="string">\mathbf&#123;V&#125;_1</span> <span class="string">\times</span> <span class="string">\mathbf&#123;V&#125;_2</span> =  <span class="string">\begin&#123;vmatrix&#125;</span> </span><br><span class="line"><span class="string">\mathbf&#123;i&#125;</span> &amp; <span class="string">\mathbf&#123;j&#125;</span> &amp; <span class="string">\mathbf&#123;k&#125;</span> <span class="string">\\</span></span><br><span class="line"><span class="string">\frac&#123;\partial</span> X&#125;&#123;<span class="string">\partial</span> u&#125; &amp;  <span class="string">\frac&#123;\partial</span> Y&#125;&#123;<span class="string">\partial</span> u&#125; &amp; <span class="number">0</span> <span class="string">\\</span></span><br><span class="line"><span class="string">\frac&#123;\partial</span> X&#125;&#123;<span class="string">\partial</span> v&#125; &amp;  <span class="string">\frac&#123;\partial</span> Y&#125;&#123;<span class="string">\partial</span> v&#125; &amp; <span class="number">0</span> <span class="string">\\</span></span><br><span class="line"><span class="string">\end&#123;vmatrix&#125;</span></span><br><span class="line">$$</span><br></pre></td></tr></table></figure>



<h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>输入 <code>| First Header | Second Header |</code> 并按下 <code>return</code> 键将创建一个包含两列的表。</p>
<p>创建表后，焦点在该表上将弹出一个表格工具栏，您可以在其中调整表格，对齐或删除表格。您还可以使用上下文菜单来复制和添加&#x2F;删除列&#x2F;行。</p>
<p>可以跳过以下描述，因为表格的 markdown 源代码是由typora自动生成的。</p>
<p>在 markdown 源代码中，它们看起来像这样：</p>
<figure class="highlight gherkin"><table><tr><td class="code"><pre><span class="line">|<span class="string"> First Header  </span>|<span class="string"> Second Header </span>|</span><br><span class="line">|<span class="string"> ------------- </span>|<span class="string"> ------------- </span>|</span><br><span class="line">|<span class="string"> Content Cell  </span>|<span class="string"> Content Cell  </span>|</span><br><span class="line">|<span class="string"> Content Cell  </span>|<span class="string"> Content Cell  </span>|</span><br></pre></td></tr></table></figure>

<p>您还可以在表格中包括内联 Markdown 语法，例如链接，粗体，斜体或删除线。</p>
<p>最后，通过在标题行中包含冒号：您可以将文本定义为左对齐，右对齐或居中对齐：</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">| <span class="title class_">Left</span>-<span class="title class_">Aligned</span>  | <span class="title class_">Center</span> <span class="title class_">Aligned</span>  | <span class="title class_">Right</span> <span class="title class_">Aligned</span> |</span><br><span class="line">| <span class="symbol">:------------</span> |<span class="symbol">:---------------</span><span class="symbol">:|</span> -----<span class="symbol">:|</span></span><br><span class="line">| col <span class="number">3</span> is      | some wordy text | <span class="variable">$1600</span> |</span><br><span class="line">| col <span class="number">2</span> is      | centered        |   <span class="variable">$12</span> |</span><br><span class="line">| zebra stripes | are neat        |    <span class="variable">$1</span> |</span><br></pre></td></tr></table></figure>

<p>最左侧的冒号表示左对齐的列; 最右侧的冒号表示右对齐的列; 两侧的冒号表示中心对齐的列。</p>
<h3 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h3><figure class="highlight prolog"><table><tr><td class="code"><pre><span class="line">您可以像这样创建脚注[^footnote].</span><br><span class="line"></span><br><span class="line">[^footnote]: <span class="symbol">Here</span> is the *text* of the **footnote**.</span><br></pre></td></tr></table></figure>

<p>将产生：</p>
<p>您可以像这样创建脚注<a href="https://support.typoraio.cn/zh/Markdown-Reference/#fn:footnote">1</a>.</p>
<p>鼠标移动到‘footnote’上标中查看脚注的内容。</p>
<h3 id="水平线"><a href="#水平线" class="headerlink" title="水平线"></a>水平线</h3><p>输入 <code>***</code> 或 <code>---</code> 在空行上按 <code>return</code> 键将绘制一条水平线。</p>
<hr>
<h3 id="YAML-Front-Matter"><a href="#YAML-Front-Matter" class="headerlink" title="YAML Front Matter"></a>YAML Front Matter</h3><p>Typora 现在支持 <a href="http://jekyllrb.com/docs/frontmatter/">YAML Front Matter</a> 。 在文章顶部输入 <code>---</code> 然后按 <code>Enter</code> 键将引入一个，或者从菜单中插入一个元数据块。</p>
<h3 id="目录-TOC"><a href="#目录-TOC" class="headerlink" title="目录 (TOC)"></a>目录 (TOC)</h3><p>输入 <code>[toc]</code> 然后按 <code>Return</code> 键将创建一个“目录”部分，自动从文档内容中提取所有标题，其内容会自动更新。</p>
<h3 id="图表-Sequence-Flowchart-and-Mermaid"><a href="#图表-Sequence-Flowchart-and-Mermaid" class="headerlink" title="图表 (Sequence, Flowchart and Mermaid)"></a>图表 (Sequence, Flowchart and Mermaid)</h3><p>Typora 支持, <a href="https://bramp.github.io/js-sequence-diagrams/">sequence</a>, <a href="http://flowchart.js.org/">flowchart</a> and <a href="https://knsv.github.io/mermaid/#mermaid">mermaid</a>, 使用前要先从偏好设置面板启用该功能。</p>
<p>详细信息请参阅此 <a href="http://support.typora.io/Draw-Diagrams-With-Markdown/">文档</a></p>
<h2 id="Span-元素"><a href="#Span-元素" class="headerlink" title="Span 元素"></a>Span 元素</h2><p>在您输入后Span元素会被立即解析并呈现。在这些span元素上移动光标会将这些元素扩展为markdown源代码。以下将解释这些span元素的语法。</p>
<h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>Markdown 支持两种类型的链接：内联和引用。</p>
<p>在这两种样式中，链接文本都写在[方括号]内。</p>
<p>要创建内联链接，请在链接文本的结束方括号后立即使用一组常规括号。在常规括号内，输入URL地址，以及可选的用引号括起来的链接标题。例如：</p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">This <span class="built_in">is</span> [an <span class="built_in">example</span>](http://<span class="built_in">example</span>.com/ <span class="string">&quot;Title&quot;</span>) inline link.</span><br><span class="line"></span><br><span class="line">[This link](http://<span class="built_in">example</span>.net/) has no <span class="built_in">title</span> attribute.</span><br></pre></td></tr></table></figure>

<p>将产生：</p>
<p>This is <a href="http://example.com/%22Title%22">an example</a> inline link. (<code>&lt;p&gt;This is &lt;a href=&quot;http://example.com/&quot; title=&quot;Title&quot;&gt;</code>)</p>
<p><a href="http://example.net/">This link</a> has no title attribute. (<code>&lt;p&gt;&lt;a href=&quot;http://example.net/&quot;&gt;This link&lt;/a&gt; has no</code>)</p>
<h4 id="内部链接"><a href="#内部链接" class="headerlink" title="内部链接"></a>内部链接</h4><p><strong>您可以将常规括号内的 href 设置为文档内的某一个标题</strong>，这将创建一个书签，允许您在单击后跳转到该部分。例如：</p>
<p>Command(在Windows上：Ctrl) + 单击 <a href="https://support.typoraio.cn/zh/Markdown-Reference/#%E5%9D%97%E5%85%83%E7%B4%A0">此链接</a> 将跳转到标题 <code>块元素</code>处。 要查看如何编写，请移动光标或按住 <code>⌘</code>键单击以将元素展开为 Markdown 源代码。</p>
<h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p>参考样式链接使用第二组方括号，在其中放置您选择的标签以标识链接：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">This is [an example][<span class="built_in">id</span>] reference-style <span class="built_in">link</span>.</span><br><span class="line"></span><br><span class="line">然后，在文档中的任何位置，您可以单独定义链接标签，如下所示：</span><br><span class="line"></span><br><span class="line">[<span class="built_in">id</span>]: http://example.com/  <span class="string">&quot;Optional Title Here&quot;</span></span><br></pre></td></tr></table></figure>

<p>在typora中，它们将呈现为：</p>
<p>This is <a href="http://example.com/">an example</a> reference-style link.</p>
<p>隐式链接名称快捷方式允许您省略链接的名称，在这种情况下，链接文本本身将用作名称。只需使用一组空的方括号，例如，将“Google”一词链接到google.com网站，您只需写下：</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-attr">[Google]</span><span class="selector-attr">[]</span></span><br><span class="line">然后定义链接：</span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[Google]</span>: <span class="selector-tag">http</span>:<span class="comment">//google.com/</span></span><br></pre></td></tr></table></figure>

<p>在typora中单击链接将其展开以进行编辑，command + 单击将在 Web 浏览器中打开超链接。</p>
<h3 id="URL网址"><a href="#URL网址" class="headerlink" title="URL网址"></a>URL网址</h3><p>Typora允许您将 URL 作为链接插入，用 <code>&lt;</code>括号括起来<code>&gt;</code>。</p>
<p><code>&lt;i@typora.io&gt;</code> 成为 <a href="mailto:i@typora.io">i@typora.io</a>.</p>
<p>Typora也将自动链接标准URL。例如： <a href="http://www.google.com/">www.google.com</a>.</p>
<h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>图像与链接类似， 但在链接语法之前需要添加额外的 <code>!</code> 字符。 图像语法如下所示：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">!<span class="selector-attr">[替代文字]</span>(/path/<span class="selector-tag">to</span>/<span class="selector-tag">img</span><span class="selector-class">.jpg</span>)</span><br><span class="line"></span><br><span class="line">!<span class="selector-attr">[替代文字]</span>(/path/<span class="selector-tag">to</span>/<span class="selector-tag">img</span><span class="selector-class">.jpg</span> &quot;可选标题&quot;)</span><br></pre></td></tr></table></figure>

<p>您可以使用拖放操作从图像文件或浏览器来插入图像。并通过单击图像修改 markdown 源代码。如果图像在拖放时与当前编辑文档位于同一目录或子目录中，则将使用相对路径。</p>
<p>有关图像的更多提示，请阅读 <a href="http://support.typora.io//Images/">http://support.typora.io//Images/</a></p>
<h3 id="强调（斜体）"><a href="#强调（斜体）" class="headerlink" title="强调（斜体）"></a>强调（斜体）</h3><p>Markdown 将星号 (<code>*</code>) 和下划线(<code>_</code>) 视为强调的指示。用一个 <code>*</code> or <code>_</code> 包裹文本将使用HTML <code>&lt;em&gt;</code> 标签包裹文本。例如：</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"><span class="strong">*单个星号*</span></span><br><span class="line"></span><br><span class="line"><span class="emphasis">_单个下划线_</span></span><br></pre></td></tr></table></figure>

<p>输出：</p>
<p><em>单个星号</em></p>
<p><em>单个下划线</em></p>
<p>GFM将忽略单词中的下划线，这通常用在代码和名称中，如下所示：</p>
<blockquote>
<p>wow_great_stuff</p>
<p>do_this_and_do_that_and_another_thing.</p>
</blockquote>
<p>要在用作强调分隔符的位置生成文字星号或下划线，可以用反斜杠转义：</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">\*这个文字被文字星号包围\*</span><br></pre></td></tr></table></figure>

<p>Typora建议使用 <code>*</code> 号.</p>
<h3 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a>粗体</h3><p>用两个 * 或 _ 包裹的文本将使用HTML <code>&lt;strong&gt;</code> 标签包裹，例如：</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"><span class="strong">**双星号**</span></span><br><span class="line"></span><br><span class="line"><span class="emphasis">__双重下划线__</span></span><br></pre></td></tr></table></figure>

<p>输出：</p>
<p><strong>双星号</strong></p>
<p><strong>双重下划线</strong></p>
<p>Typora 建议使用 <code>**</code> 号。</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>要指示代码范围，请使用反引号（&#96;）进行包裹。与预格式化的代码块不同，代码跨度表示正常段落中的代码。例如：</p>
<figure class="highlight autohotkey"><table><tr><td class="code"><pre><span class="line">使用`printf()`函数。</span><br></pre></td></tr></table></figure>

<p>将产生：</p>
<p>使用 <code>printf()</code> 函数。</p>
<h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><p>GFM通过添加语法来创建删除线文本，标准的Markdown中缺少该文本。</p>
<p><code>~~错误的文字。~~</code> 变成 <del>错误的文字。</del></p>
<h3 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h3><p>下划线由原始HTML提供支持。</p>
<p><code>&lt;u&gt;下划线&lt;/u&gt;</code> 变成 下划线</p>
<h3 id="表情符号-smile"><a href="#表情符号-smile" class="headerlink" title="表情符号 :smile:"></a>表情符号 :smile:</h3><p>输入表情符号的语法是 <code>:smile:</code></p>
<p>用户可以通过 <code>ESC</code> 按键触发表情符号的自动完成建议，或者在偏好设置面板里启用后自动触发表情符号。此外，还支持直接从 <code>Edit</code> -&gt; <code>Emoji &amp; Symbols</code> 菜单栏输入UTF8表情符号字符。</p>
<h3 id="内联数学公式"><a href="#内联数学公式" class="headerlink" title="内联数学公式"></a>内联数学公式</h3><p>要使用此功能，首先，请在 <code>偏好设置</code> 面板 -&gt; <code>Markdown扩展语法</code> 选项卡中启用它。然后使用 <code>$</code> 来包裹TeX命令，例如： <code>$\lim_&#123;x \to \infty&#125; \exp(-x) = 0$</code> 将呈现为LaTeX命令。</p>
<p>要触发内联公式的预览提示功能：输入“$”, 然后按 <code>ESC</code> 键, 然后输入TeX命令, 预览工具提示将如下所示：</p>
<p><img data-src="http://typora.io/img/inline-math.gif" alt="img"></p>
<h3 id="下标"><a href="#下标" class="headerlink" title="下标"></a>下标</h3><p>要使用此功能，首先，请在 <code>偏好设置</code> 面板 -&gt; <code>Markdown扩展语法</code> 选项卡中启用它。然后用 <code>~</code> 来包裹下标内容，例如： <code>H~2~O</code>, <code>X~long\ text~</code>&#x2F;</p>
<h3 id="上标"><a href="#上标" class="headerlink" title="上标"></a>上标</h3><p>要使用此功能，首先，请在 <code>偏好设置</code> 面板 -&gt; <code>Markdown扩展语法</code> 选项卡中启用它。然后用 <code>^</code> 来包裹上标内容，例如： <code>X^2^</code>。</p>
<h3 id="高亮"><a href="#高亮" class="headerlink" title="高亮"></a>高亮</h3><p>要使用此功能，首先，请在 <code>偏好设置</code> 面板 -&gt; <code>Markdown扩展语法</code> 选项卡中启用它。然后用 <code>==</code> 来包裹高亮内容，例如： <code>==highlight==</code>。</p>
<h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><p>您可以使用HTML来设置纯 Markdown 不支持的内容，例如， <code>&lt;span style=&quot;color:red&quot;&gt;this text is red&lt;/span&gt;</code> 用于添加红色文本。</p>
<h3 id="嵌入内容"><a href="#嵌入内容" class="headerlink" title="嵌入内容"></a>嵌入内容</h3><p>有些网站提供基于iframe的嵌入代码，您也可以将其粘贴到Typora中，例如：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">height</span>=<span class="string">&#x27;265&#x27;</span> <span class="attr">scrolling</span>=<span class="string">&#x27;no&#x27;</span> <span class="attr">title</span>=<span class="string">&#x27;Fancy Animated SVG Menu&#x27;</span> <span class="attr">src</span>=<span class="string">&#x27;http://codepen.io/jeangontijo/embed/OxVywj/?height=265&amp;theme-id=0&amp;default-tab=css,result&amp;embed-version=2&#x27;</span> <span class="attr">frameborder</span>=<span class="string">&#x27;no&#x27;</span> <span class="attr">allowtransparency</span>=<span class="string">&#x27;true&#x27;</span> <span class="attr">allowfullscreen</span>=<span class="string">&#x27;true&#x27;</span> <span class="attr">style</span>=<span class="string">&#x27;width: 100%;&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span></span><br></pre></td></tr></table></figure>



<h3 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h3><p>您可以使用 <code>&lt;video&gt;</code> HTML标记嵌入视频，例如：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;xxx.mp4&quot;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure>



<h3 id="其他-HTML-支持"><a href="#其他-HTML-支持" class="headerlink" title="其他 HTML 支持"></a>其他 HTML 支持</h3><p>你可以在 <a href="http://support.typora.io/HTML/">这里</a>找到细节。</p>
<ol>
<li>Here is the <em>text</em> of the <strong>footnote</strong>. <a href="https://support.typoraio.cn/zh/Markdown-Reference/#fnref:footnote">↩</a></li>
</ol>
<p><a href="https://typoraio.cn/">Get Typora</a> &#x2F; <a href="https://github.com/typora/wiki-website">Help Improve our documents</a></p>
]]></content>
      <categories>
        <category>语法分析</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
</search>
