<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ceobe&#39;s Fungimist</title>
  
  <subtitle>轻尘散尽,绪言终古,于无声处听惊雷.</subtitle>
  <link href="https://blog.ceobe.cn/atom.xml" rel="self"/>
  
  <link href="https://blog.ceobe.cn/"/>
  <updated>2024-02-23T08:44:52.349Z</updated>
  <id>https://blog.ceobe.cn/</id>
  
  <author>
    <name>Melt_Tscci</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用Dozzle审计容器日志</title>
    <link href="https://blog.ceobe.cn/dozzle/"/>
    <id>https://blog.ceobe.cn/dozzle/</id>
    <published>2024-02-23T06:52:55.000Z</published>
    <updated>2024-02-23T08:44:52.349Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用Dozzle审计容器日志"><a href="#使用Dozzle审计容器日志" class="headerlink" title="使用Dozzle审计容器日志"></a>使用Dozzle审计容器日志</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Dozzle是一个开源的日志查看器，主要用于监视和查看Docker容器的实时日志。它提供了一个基于Web的用户界面，允许用户实时查看Docker容器的日志，而不会存储任何日志文件。</p><h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><p>Dozzle的主要应用场景是在Docker环境中，帮助开发者或系统管理员快速查看和监控Docker容器的日志输出。这对于调试和排除Docker环境中运行的应用程序故障非常重要。</p><h2 id="关键特性和优势"><a href="#关键特性和优势" class="headerlink" title="关键特性和优势"></a>关键特性和优势</h2><p>Dozzle具有一些关键特性，如支持查看一个dockerd下面所有container的日志，支持查看多个dockerd下面container的日志，以及支持用户鉴权。这些特性使得Dozzle成为一个高效且用户友好的日志查看器。</p><p>根据最新的信息，Dozzle是由Docker OSS赞助的开源项目，并且正在积极维护中。它提供了实时日志流、过滤和搜索功能，用户可以快速轻松地访问Docker容器生成的日志。此外，Dozzle还支持带有智能颜色编码的JSON日志。</p><h2 id="Dozzle支持多种用户鉴权方式，具体如下："><a href="#Dozzle支持多种用户鉴权方式，具体如下：" class="headerlink" title="Dozzle支持多种用户鉴权方式，具体如下："></a>Dozzle支持多种用户鉴权方式，具体如下：</h2><ol><li><strong>Basic Authentication</strong>：这是一种最常见的用户鉴权方式，它要求用户提供用户名和密码以进行身份验证。。</li><li><strong>Token Authentication</strong>：在这种鉴权方式中，用户不需要提供用户名和密码，而是提供一个特定的令牌来进行身份验证。</li><li><strong>OpenID Connect</strong>：这是一种基于开放标准的鉴权协议，它允许用户使用他们的社交媒体或其他第三方服务帐户进行身份验证。</li><li><strong>OAuth 2.0</strong>：这是一种广泛使用的授权框架，它允许第三方应用在用户的授权下访问他们的资源。</li></ol><p>以上就是Dozzle支持的一些主要的用户鉴权方式，不同的方式可以根据实际需求选择使用。</p><h2 id="实体-关系模型"><a href="#实体-关系模型" class="headerlink" title="实体-关系模型"></a>实体-关系模型</h2><p>Dozzle支持对远程主机的容器日志收集，以实现集中审计，ER图如下：</p><p><img data-src="/dozzle/dozzle%E5%85%B3%E7%B3%BB%E6%A8%A1%E5%9E%8B.png" alt="dozzle关系模型"></p><h2 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h2><h3 id="业务端"><a href="#业务端" class="headerlink" title="- 业务端"></a>- 业务端</h3><h4 id="1、开启Docker-Remote-API"><a href="#1、开启Docker-Remote-API" class="headerlink" title="1、开启Docker Remote API"></a>1、开启Docker Remote API</h4><p>编辑&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;docker.service</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">the default is not to use systemd <span class="keyword">for</span> cgroups because the delegate issues still</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">exists and systemd currently does not support the cgroup feature <span class="built_in">set</span> required</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="keyword">for</span> containers run by docker</span></span><br><span class="line">ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock -H tcp://0.0.0.0:2376 # 添加2376端口</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>重载配置文件并重启Docker服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="2、生成证书"><a href="#2、生成证书" class="headerlink" title="2、生成证书"></a>2、生成证书</h4><p>生成CA（根证书）私钥和自签名证书：</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -x509 -nodes -newkey rsa:4096 -keyout <span class="keyword">ca</span>.key -<span class="keyword">out</span> <span class="keyword">ca</span>.pem -subj <span class="string">&quot;/CN=dozzle.site&quot;</span></span><br></pre></td></tr></table></figure><p>生成证书私钥：</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -<span class="keyword">out</span> <span class="keyword">key</span>.pem 4096</span><br></pre></td></tr></table></figure><p>创建证书签名请求（CSR）文件：</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -<span class="built_in">new</span> -<span class="built_in">key</span> <span class="built_in">key</span>.pem -out cert.csr -subj <span class="string">&quot;/CN=dozzle.site&quot;</span></span><br></pre></td></tr></table></figure><p>使用CA的私钥和自签名证书部署CSR文件，生成证书：</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -req -<span class="keyword">in</span> cert.csr -<span class="keyword">CA</span> <span class="keyword">ca</span>.pem -CAkey <span class="keyword">ca</span>.key -CAcreateserial -<span class="keyword">out</span> cert.pem -days 3650</span><br></pre></td></tr></table></figure><ul><li>ca.key和ca.pem：根证书和自签名证书</li><li>key.pem：生成的证书私钥</li><li>cert.pem：生成的证书</li></ul><h3 id="监控端"><a href="#监控端" class="headerlink" title="- 监控端"></a>- 监控端</h3><h4 id="1、存放远程主机证书"><a href="#1、存放远程主机证书" class="headerlink" title="1、存放远程主机证书"></a>1、存放远程主机证书</h4><p>将远程主机（业务端）生成的证书保存为<code> /certs/&#123;host&#125;/&#123;ca,cert,key&#125;.pem</code></p><p>多个远程主机使用逗号进行间隔，如：</p><p><code> DOZZLE_REMOTE_HOST: tcp://172.0.0.72:2376|node1.host,tcp://172.0.0.73:2376|node2.host</code></p><h4 id="2、用户管理"><a href="#2、用户管理" class="headerlink" title="2、用户管理"></a>2、用户管理</h4><p>Dozzle  用户配置文件保存路径： <code>/data/users.yml</code>.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">users:</span></span><br><span class="line">  <span class="comment"># &quot;admin&quot; here is username</span></span><br><span class="line">  <span class="attr">admin:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">&quot;Admin&quot;</span></span><br><span class="line">    <span class="comment"># Just sha-256 which can be computed with &quot;echo -n password | shasum -a 256&quot;</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">&quot;5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8&quot;</span></span><br><span class="line">    <span class="attr">email:</span> <span class="string">me@email.net</span></span><br></pre></td></tr></table></figure><ul><li>使用<code>echo -n &#39;secret-password&#39; | shasum -a 256` or `echo -n &#39;secret-password&#39; | sha256sum</code> 生成密码字符串的sha256哈希值。</li></ul><h4 id="3、启动Dozzle服务"><a href="#3、启动Dozzle服务" class="headerlink" title="3、启动Dozzle服务"></a>3、启动Dozzle服务</h4><ul><li>生成<code> compose.yml</code>文件</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">dozzle:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">amir20/dozzle</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./certs:/certs</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/data</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8080</span><span class="string">:8080</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">DOZZLE_AUTH_PROVIDER:</span> <span class="string">simple</span></span><br><span class="line">      <span class="attr">DOZZLE_HOSTNAME:</span> <span class="string">monitor.host</span></span><br><span class="line">      <span class="attr">DOZZLE_REMOTE_HOST:</span> <span class="string">tcp://172.0.0.72:2376|node1.host,tcp://172.0.0.73:2376|node.host</span></span><br><span class="line">    <span class="attr">healthcheck:</span></span><br><span class="line">      <span class="attr">test:</span> [<span class="string">&quot;CMD&quot;</span>, <span class="string">&quot;/dozzle&quot;</span>, <span class="string">&quot;healthcheck&quot;</span>]</span><br><span class="line">      <span class="attr">interval:</span> <span class="string">3s</span></span><br><span class="line">      <span class="attr">timeout:</span> <span class="string">30s</span></span><br><span class="line">      <span class="attr">retries:</span> <span class="number">5</span></span><br><span class="line">      <span class="attr">start_period:</span> <span class="string">30s</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure><ul><li>启动容器服务 <code>docker compose up -d</code></li></ul><p><img data-src="/dozzle/image-20240223164323001.png" alt="image-20240223164323001"></p><p><img data-src="/dozzle/image-20240223164305686.png" alt="image-20240223164305686"></p><p><img data-src="/dozzle/image-20240223164245112.png" alt="image-20240223164245112"></p>]]></content>
    
    
    <summary type="html">Dozzle是一个开源的日志查看器，主要用于监视和查看Docker容器的实时日志。它提供了一个基于Web的用户界面，允许用户实时查看Docker容器的日志，而不会存储任何日志文件。</summary>
    
    
    
    <category term="安全审计" scheme="https://blog.ceobe.cn/categories/%E5%AE%89%E5%85%A8%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="Docker" scheme="https://blog.ceobe.cn/tags/Docker/"/>
    
    <category term="日志查看" scheme="https://blog.ceobe.cn/tags/%E6%97%A5%E5%BF%97%E6%9F%A5%E7%9C%8B/"/>
    
    <category term="安全性" scheme="https://blog.ceobe.cn/tags/%E5%AE%89%E5%85%A8%E6%80%A7/"/>
    
    <category term="日志管理" scheme="https://blog.ceobe.cn/tags/%E6%97%A5%E5%BF%97%E7%AE%A1%E7%90%86/"/>
    
    <category term="文本高亮" scheme="https://blog.ceobe.cn/tags/%E6%96%87%E6%9C%AC%E9%AB%98%E4%BA%AE/"/>
    
    <category term="实时监控" scheme="https://blog.ceobe.cn/tags/%E5%AE%9E%E6%97%B6%E7%9B%91%E6%8E%A7/"/>
    
    <category term="访问控制" scheme="https://blog.ceobe.cn/tags/%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/"/>
    
    <category term="非持久存储" scheme="https://blog.ceobe.cn/tags/%E9%9D%9E%E6%8C%81%E4%B9%85%E5%AD%98%E5%82%A8/"/>
    
  </entry>
  
  <entry>
    <title>雷池Safeline&amp;HFish主动防御方案</title>
    <link href="https://blog.ceobe.cn/hfish-safeline/"/>
    <id>https://blog.ceobe.cn/hfish-safeline/</id>
    <published>2024-02-01T07:23:36.000Z</published>
    <updated>2024-02-01T07:23:10.862Z</updated>
    
    <content type="html"><![CDATA[<h1 id="雷池Safeline-HFish主动防御方案"><a href="#雷池Safeline-HFish主动防御方案" class="headerlink" title="雷池Safeline&amp;HFish主动防御方案"></a>雷池Safeline&amp;HFish主动防御方案</h1><h2 id="雷池Safeline简介"><a href="#雷池Safeline简介" class="headerlink" title="雷池Safeline简介"></a>雷池Safeline简介</h2><p>雷池Safeline是一个基于智能语义分析引擎的下一代Web应用防火墙（WAF）。由长亭科技开发，雷池Safeline旨在通过其创新的智能语义分析算法，提供对Web应用攻击的深度检测和防护，特别是在面对未知威胁和0day攻击时，显示出天然的优势和防护能力。<br>雷池Safeline的核心优势在于其语义分析技术，这种技术能够理解Web应用上下文中的数据含义，而不仅仅是单纯的字符串匹配。这样的分析能力使得雷池Safeline在检测和阻止恶意流量和攻击行为时更加精准和高效。它能够对Web应用的通信进行深度解析，从而识别并阻断那些使用传统规则防护无法应对的复杂攻击。<br>除了智能语义分析外，雷池Safeline还具备以下特点：</p><ul><li>高度可扩展性：雷池Safeline设计灵活，能够适应不断变化的网络威胁环境，可以通过更新和迭代不断强化其防护能力。</li><li>易用性：雷池Safeline提供简单易用的管理界面，使得配置和部署变得更加直观和简单。</li><li>性能优化：雷池Safeline考虑到性能对Web应用的重要性，因此在设计上优化了处理速度和资源消耗，确保在提供强大防护的同时，不会对Web应用的性能造成负面影响。</li><li>社区支持：雷池Safeline有一个活跃的社区，用户可以在这里获得技术支持、分享经验以及参与产品的未来发展。<br>雷池Safeline在安全行业获得了一定的认可，其商业版本受到了众多头部企业的信赖，而社区版则通过GitHub平台免费提供，使得更广泛的用户能够零成本体验其智能语义分析算法的能力。雷池Safeline的发布，体现了长亭科技在网络安全领域的创新精神和对开放合作的承诺。</li></ul><p><img data-src="/hfish-safeline/image-20240201150146817.png" alt="image-20240201150146817"></p><h2 id="安装雷池Safeline："><a href="#安装雷池Safeline：" class="headerlink" title="安装雷池Safeline："></a>安装雷池Safeline：</h2><h3 id="环境检测："><a href="#环境检测：" class="headerlink" title="环境检测："></a>环境检测：</h3><p>最低配置需求</p><ul><li>操作系统：Linux</li><li>指令架构：x86_64</li><li>软件依赖：Docker 20.10.14 版本以上</li><li>软件依赖：Docker Compose 2.0.0 版本以上</li><li>最小化环境：1 核 CPU &#x2F; 1 GB 内存 &#x2F; 5 GB 磁盘</li></ul><p>可以逐行执行以下命令来确认服务器配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">uname -m                                    # 查看指令架构</span><br><span class="line">docker version                              # 查看 Docker 版本</span><br><span class="line">docker compose version                      # 查看 Docker Compose 版本</span><br><span class="line">docker-compose version                      # 老版本查看Compose 版本</span><br><span class="line">cat /proc/cpuinfo| grep &quot;processor&quot;         # 查看 CPU 信息</span><br><span class="line">free -h                                     # 查看内存信息</span><br><span class="line">df -h                                       # 查看磁盘信息</span><br><span class="line">lscpu | grep ssse3                          # 确认CPU是否支持 ssse3 指令集</span><br></pre></td></tr></table></figure><h3 id="在线安装（推荐）"><a href="#在线安装（推荐）" class="headerlink" title="在线安装（推荐）"></a>在线安装（推荐）</h3><p>复制以下命令执行，即可完成安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c &quot;$(curl -fsSLk https://waf-ce.chaitin.cn/release/latest/setup.sh)&quot; </span><br></pre></td></tr></table></figure><p>如果需要使用华为云加速，可使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CDN=1 bash -c &quot;$(curl -fsSLk https://waf-ce.chaitin.cn/release/latest/setup.sh)&quot; </span><br></pre></td></tr></table></figure><p>如果需要安装最新版本流式检测模式，可使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">STREAM=1 bash -c &quot;$(curl -fsSLk https://waf-ce.chaitin.cn/release/latest/setup.sh)&quot; </span><br></pre></td></tr></table></figure><ul><li>若安装失败，请参考 <a href="#%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98">安装问题</a></li></ul><h3 id="离线安装"><a href="#离线安装" class="headerlink" title="离线安装"></a>离线安装</h3><ul><li>如果服务器不可以访问互联网环境，推荐使用该方式</li></ul><ol><li>下载 <a href="https://demo.waf-ce.chaitin.cn/image.tar.gz">雷池社区版镜像包</a> 并传输到需要安装雷池的服务器上，执行以下命令加载镜像</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat image.tar.gz | gzip -d | docker load</span><br></pre></td></tr></table></figure><ol start="2"><li>执行以下命令创建并进入雷池安装目录</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p safeline  &amp;&amp;  <span class="built_in">cd</span> safeline    <span class="comment"># 创建 safeline 目录并且进入</span></span><br></pre></td></tr></table></figure><ol start="3"><li><p>下载 <a href="https://waf-ce.chaitin.cn/release/latest/compose.yaml">编排脚本</a> 并传输到 safeline 目录中</p></li><li><p>复制执行以下命令，生成雷池运行所需的相关环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; .env &lt;&lt;EOF</span><br><span class="line">SAFELINE_DIR=$(pwd)</span><br><span class="line">IMAGE_TAG=latest</span><br><span class="line">MGT_PORT=9443</span><br><span class="line">POSTGRES_PASSWORD=$(LC_ALL=C tr -dc A-Za-z0-9 &lt;/dev/urandom | head -c 32)</span><br><span class="line">SUBNET_PREFIX=172.22.222</span><br><span class="line">IMAGE_PREFIX=chaitin</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>不要一行一行复制，一次性复制全部命令后执行</li></ul></li><li><p>执行以下命令启动雷池</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker compose up -d</span><br></pre></td></tr></table></figure><ul><li>若安装失败，请参考 <a href="#%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98">安装问题</a></li></ul></li></ol><h3 id="安装问题"><a href="#安装问题" class="headerlink" title="安装问题"></a>安装问题</h3><h4 id="在线安装失败"><a href="#在线安装失败" class="headerlink" title="在线安装失败"></a>在线安装失败</h4><ol><li>检查是否手动关闭防火墙</li><li>检测配置是否符合最低的配置要求</li></ol><blockquote><p>参考 <a href="#%E7%8E%AF%E5%A2%83%E6%A3%80%E6%B5%8B%EF%BC%9A">环境检测</a>方式</p></blockquote><ol><li>如果连接 Docker Hub 网络不稳，导致镜像下载失败（超时）:</li></ol><blockquote><p>docker hub 默认使用国外节点拉取镜像，可以自行搜索配置国内镜像加速源</p></blockquote><blockquote><p>采用 <a href="#%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85">离线安装</a> 方式</p></blockquote><h4 id="安装时遇到报错处理方法："><a href="#安装时遇到报错处理方法：" class="headerlink" title="安装时遇到报错处理方法："></a>安装时遇到报错处理方法：</h4><h5 id="报错：ERROR-Cannot-connect-to-the-Docker-daemon-at-unix-var-run-docker-sock-Is-the-docker-daemon-running"><a href="#报错：ERROR-Cannot-connect-to-the-Docker-daemon-at-unix-var-run-docker-sock-Is-the-docker-daemon-running" class="headerlink" title="* 报错：ERROR: Cannot connect to the Docker daemon at unix:&#x2F;&#x2F;&#x2F;var&#x2F;run&#x2F;docker.sock. Is the docker daemon running?"></a>* 报错：ERROR: Cannot connect to the Docker daemon at unix:&#x2F;&#x2F;&#x2F;var&#x2F;run&#x2F;docker.sock. Is the docker daemon running?</h5><p>需要安装 docker。尝试 <code>curl -fLsS https://get.docker.com/ | sh</code> 或者<a href="/dockerinit/" title="Docker初始化环境">Docker初始化环境</a>。</p><h5 id="报错：docker-not-found-unable-to-deploy"><a href="#报错：docker-not-found-unable-to-deploy" class="headerlink" title="* 报错：docker not found, unable to deploy"></a>* 报错：docker not found, unable to deploy</h5><p>failed to create network safeline-ce safeline-ce 是雷池部署时候创建的 network，出现类似报错，先重启下 dockerd 之后重试</p><p>需要启动 docker daemon 才能执行相关的命令。尝试 <code>systemctl start docker</code>。</p><h5 id="报错：docker-compose-v2-not-found-unable-to-deploy"><a href="#报错：docker-compose-v2-not-found-unable-to-deploy" class="headerlink" title="* 报错：docker compose v2 not found, unable to deploy"></a>* 报错：docker compose v2 not found, unable to deploy</h5><p>需要安装 docker compose v2。尝试 <a href="/dockerinit/" title="Docker初始化环境">Docker初始化环境</a>。</p><h5 id="报错：-failed-to-create-network-safeline-ce"><a href="#报错：-failed-to-create-network-safeline-ce" class="headerlink" title="* 报错： failed to create network safeline-ce"></a>* 报错： failed to create network safeline-ce</h5><p>safeline-ce 是雷池部署时候创建的 network，出现类似报错，先重启下 dockerd 之后重试。</p><h5 id="报错：-safeline-tengine-出现-Address-already-in-use"><a href="#报错：-safeline-tengine-出现-Address-already-in-use" class="headerlink" title="* 报错： safeline-tengine 出现 Address already in use"></a>* 报错： safeline-tengine 出现 Address already in use</h5><p><code>docker logs -f safeline-tengine</code> 容器日志中看到 “Address already in use”信息。</p><p>端口冲突，根据报错信息中的端口号，排查是哪个服务占用了，手动处理冲突。</p><h5 id="报错：safelint-mgt-api-出现-Operation-not-permitted"><a href="#报错：safelint-mgt-api-出现-Operation-not-permitted" class="headerlink" title="* 报错：safelint-mgt-api 出现 Operation not permitted"></a>* 报错：safelint-mgt-api 出现 Operation not permitted</h5><p><code>docker logs -f safelint-mgt-api</code> 容器日志中看到 “runtime&#x2F;cgo: pthread_create failed: Operation not permitted” 报错，这个错误一般会在 docker 20.10.9 及以下发生。</p><ul><li><p>最推荐的方式是升级 docker 到最新版本尝试解决这个问题。</p></li><li><p>或您的系统支持配置 seccomp （执行 <code>grep CONFIG_SECCOMP= /boot/config-$(uname -r)</code> 输出 “ CONFIG_SECCOMP&#x3D;y ” 则为支持）, 则可以在雷池工作目录下载 <a href="https://waf-ce.chaitin.cn/release/latest/seccomp.json">seccomp</a> 并且编辑 compose.yaml 文件， 在 management 下加入如下配置项，然后执行 <code>docker compose down &amp;&amp; docker compose up -d</code> 来尝试解决这个问题:</p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">security_opt</span><span class="punctuation">:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">seccomp=./seccomp.json</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure></li></ul><h5 id="报错：safeline-pg-出现-Operation-not-permitted"><a href="#报错：safeline-pg-出现-Operation-not-permitted" class="headerlink" title="* 报错：safeline-pg 出现 Operation not permitted"></a>* 报错：safeline-pg 出现 Operation not permitted</h5><p><code>docker logs -f safeline-pg</code> 容器日志中看到 “Operation not permitted” 报错。</p><p>可能是您的 docker 版本过低，升级 docker 到最新版本尝试一下。</p><h5 id="其他奇怪的报错比如：It-does-not-belong-to-any-of-this-network’s-subnets…等等"><a href="#其他奇怪的报错比如：It-does-not-belong-to-any-of-this-network’s-subnets…等等" class="headerlink" title="* 其他奇怪的报错比如：It does not belong to any of this network’s subnets…等等"></a>* 其他奇怪的报错比如：It does not belong to any of this network’s subnets…等等</h5><p>查看<a href="#%E5%A6%82%E4%BD%95%E5%8D%B8%E8%BD%BD">如何卸载</a> ，卸载以后重新安装一次</p><h5 id="如何自定义-SafeLine-安装路径？"><a href="#如何自定义-SafeLine-安装路径？" class="headerlink" title="* 如何自定义 SafeLine 安装路径？"></a>* 如何自定义 SafeLine 安装路径？</h5><p>基于最新的 “compose.yaml”，你可以手动修改 “.env” 文件的 <SAFELINE_DIR> 变量。</p><h5 id="雷池和业务服务可以部署到同一台机器中吗？"><a href="#雷池和业务服务可以部署到同一台机器中吗？" class="headerlink" title="* 雷池和业务服务可以部署到同一台机器中吗？"></a>* 雷池和业务服务可以部署到同一台机器中吗？</h5><p>可以，但是不建议，机器负载将高于分开部署。</p><h5 id="MacOS-Windows-是否支持安装雷池"><a href="#MacOS-Windows-是否支持安装雷池" class="headerlink" title="* MacOS&#x2F;Windows 是否支持安装雷池"></a>* MacOS&#x2F;Windows 是否支持安装雷池</h5><p>社区版暂不支持，如有需求咨询企业版。</p><h5 id="docker-compose-还是-docker-compose？"><a href="#docker-compose-还是-docker-compose？" class="headerlink" title="* docker compose 还是 docker-compose？"></a>* docker compose 还是 docker-compose？</h5><p>属于两个版本，推荐使用 docker compose</p><h5 id="如何修改-SafeLine-后台管理的默认端口？比如：本机-“-9443”已经被别的服务占用"><a href="#如何修改-SafeLine-后台管理的默认端口？比如：本机-“-9443”已经被别的服务占用" class="headerlink" title="* 如何修改 SafeLine 后台管理的默认端口？比如：本机 “:9443”已经被别的服务占用"></a>* 如何修改 SafeLine 后台管理的默认端口？比如：本机 “:9443”已经被别的服务占用</h5><p>使用 <code>ss -antp|grep LISTEN</code> 确认端口使用情况，找到未被占用端口</p><p>修改在安装目录(默认 safeline)下的隐藏文件<code>.env</code> 文件，你可以手动添加 <code>MGT_PORT</code> 变量到 <code>.env</code> 文件。</p><p>文件修改后，需要等重启才会生效。</p><p>在安装目录(默认 safeline)下执行 <code>docker compose down &amp;&amp; docker compose up -d</code></p><h5 id="如何卸载"><a href="#如何卸载" class="headerlink" title="* 如何卸载"></a>* 如何卸载</h5><p>在安装目录(默认 safeline)下</p><p>根据本地的compose版本，执行 <code>docker compose down</code> 或者 <code>docker-compose down</code></p><h5 id="问题无法解决"><a href="#问题无法解决" class="headerlink" title="* 问题无法解决"></a>* 问题无法解决</h5><ol><li>通过右上角搜索检索其他页面</li><li>通过社群（官网首页加入微信讨论组）寻求帮助或者 Github issue 提交反馈，并附上排查的过程和截图</li></ol><h2 id="HFish简介"><a href="#HFish简介" class="headerlink" title="HFish简介"></a>HFish简介</h2><p>HFish是一款社区型免费蜜罐，侧重企业安全场景，从内网失陷检测、外网威胁感知、威胁情报生产三个场景出发，为用户提供可独立操作且实用的功能，通过安全、敏捷、可靠的中低交互蜜罐增加用户在失陷感知和威胁情报领域的能力。</p><p>HFish支持基本网络 服务、OA系统、CRM系统、NAS存储系统、Web服务器、运维平台、安全产品、无线AP、交换机&#x2F;路由器、邮件系统、IoT设备等90多种蜜罐服务、支持用户制作自定义Web蜜罐、支持流量牵引到免费云蜜网、支持可开关的全端口扫描感知能力、支持可自定义的蜜饵配置、一键部署、跨平台多架构，支持Linux x32&#x2F;x64&#x2F;ARM、Windows x32&#x2F;x64平台和多种国产操作系统、支持龙芯、海光、飞腾、鲲鹏、腾云、兆芯等国产CPU、极低的性能要求、邮件&#x2F;syslog&#x2F;webhook&#x2F;企业微信&#x2F;钉钉&#x2F;飞书告警等多项特性，帮助用户降低运维成本，提升运营效率。</p><p><img data-src="/hfish-safeline/image-20240201150100393.png" alt="image-20240201150100393"></p><h2 id="安装HFish"><a href="#安装HFish" class="headerlink" title="安装HFish"></a>安装HFish</h2><blockquote><h5 id="CentOS-是HFish团队主力开发和测试系统，推荐选用CentOS系统部署管理端"><a href="#CentOS-是HFish团队主力开发和测试系统，推荐选用CentOS系统部署管理端" class="headerlink" title="CentOS 是HFish团队主力开发和测试系统，推荐选用CentOS系统部署管理端"></a>CentOS 是HFish团队主力开发和测试系统，推荐选用CentOS系统部署管理端</h5></blockquote><p>​如果部署的环境为Linux，且可以访问互联网，强烈建议使用一键部署脚本进行安装和配置，在使用一键脚本前，请先配置防火墙。</p><p>​蜜罐节点暴露在互联网，可能会出现TCP连接超过最大1024个连接数限制，导致其他连接被拒绝的情况，可手动放开机器TCP最大连接数。</p><ul><li><p>第一步，修改&#x2F;etc&#x2F;security&#x2F;limits.conf文件，在文件中添加如下行(*指代系统用户名)，修改Linux系统对用户的关于打开文件数的软限制和硬限制：</p></li><li><pre><code>soft nofile 65535hard nofile 65535<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 第二步，修改/etc/pam.d/login文件，在文件中添加如下行：</span><br><span class="line"></span><br><span class="line">　　　　session required /lib/security/pam_limits<span class="selector-class">.so</span></span><br><span class="line"></span><br><span class="line">　　　　如果是<span class="number">64</span>bit系统的话，应该为 :</span><br><span class="line">　　　　session required /lib64/security/pam_limits<span class="selector-class">.so</span></span><br><span class="line"></span><br><span class="line">- 第三步，修改/etc/sysctl.conf文件，在文件中(清楚文件原始内容)添加如下行（修改网络内核对TCP连接的有关限制）：</span><br><span class="line"></span><br><span class="line">- ```</span><br><span class="line">  net<span class="selector-class">.ipv4</span><span class="selector-class">.ip_local_port_range</span> = <span class="number">1024</span> <span class="number">65535</span></span><br><span class="line">  </span><br><span class="line">  net<span class="selector-class">.core</span>.rmem_max=<span class="number">16777216</span></span><br><span class="line">  </span><br><span class="line">  net<span class="selector-class">.core</span>.wmem_max=<span class="number">16777216</span></span><br><span class="line">  </span><br><span class="line">  net<span class="selector-class">.ipv4</span>.tcp_rmem=<span class="number">4096</span> <span class="number">87380</span> <span class="number">16777216</span></span><br><span class="line">  </span><br><span class="line">  net<span class="selector-class">.ipv4</span>.tcp_wmem=<span class="number">4096</span> <span class="number">65536</span> <span class="number">16777216</span></span><br><span class="line">  </span><br><span class="line">  net<span class="selector-class">.ipv4</span><span class="selector-class">.tcp_fin_timeout</span> = <span class="number">10</span></span><br><span class="line">  </span><br><span class="line">  net<span class="selector-class">.ipv4</span><span class="selector-class">.tcp_tw_recycle</span> = <span class="number">1</span></span><br><span class="line">  </span><br><span class="line">  net<span class="selector-class">.ipv4</span><span class="selector-class">.tcp_timestamps</span> = <span class="number">0</span></span><br><span class="line">  </span><br><span class="line">  net<span class="selector-class">.ipv4</span><span class="selector-class">.tcp_window_scaling</span> = <span class="number">0</span></span><br><span class="line">  </span><br><span class="line">  net<span class="selector-class">.ipv4</span><span class="selector-class">.tcp_sack</span> = <span class="number">0</span></span><br><span class="line">  </span><br><span class="line">  net<span class="selector-class">.core</span><span class="selector-class">.netdev_max_backlog</span> = <span class="number">30000</span></span><br><span class="line">  </span><br><span class="line">  net<span class="selector-class">.ipv4</span>.tcp_no_metrics_save=<span class="number">1</span></span><br><span class="line">  </span><br><span class="line">  net<span class="selector-class">.core</span><span class="selector-class">.somaxconn</span> = <span class="number">262144</span></span><br><span class="line">  </span><br><span class="line">  net<span class="selector-class">.ipv4</span><span class="selector-class">.tcp_syncookies</span> = <span class="number">0</span></span><br><span class="line">  </span><br><span class="line">  net<span class="selector-class">.ipv4</span><span class="selector-class">.tcp_max_orphans</span> = <span class="number">262144</span></span><br><span class="line">  </span><br><span class="line">  net<span class="selector-class">.ipv4</span><span class="selector-class">.tcp_max_syn_backlog</span> = <span class="number">262144</span></span><br><span class="line">  </span><br><span class="line">  net<span class="selector-class">.ipv4</span><span class="selector-class">.tcp_synack_retries</span> = <span class="number">2</span></span><br><span class="line">  </span><br><span class="line">  net<span class="selector-class">.ipv4</span><span class="selector-class">.tcp_syn_retries</span> = <span class="number">2</span></span><br></pre></td></tr></table></figure></code></pre></li><li><p>第四步，执行如下命令（使上述设置生效）：</p></li><li><pre><code>/sbin/sysctl -p /etc/sysctl.conf/sbin/sysctl -w net.ipv4.route.flush=1<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 第五步，执行如下命令（linux系统优化完网络必须调高系统允许打开的文件数才能支持大的并发，默认1024是远远不够的）：</span><br><span class="line"></span><br><span class="line">- ```shell</span><br><span class="line">  <span class="built_in">echo</span> <span class="built_in">ulimit</span> -HSn 65536 &gt;&gt; /etc/rc.local</span><br><span class="line">  </span><br><span class="line">  　<span class="built_in">echo</span> <span class="built_in">ulimit</span> -HSn 65536 &gt;&gt;/root/.bash_profile</span><br><span class="line">  </span><br><span class="line">  　<span class="built_in">ulimit</span> -HSn 65536</span><br></pre></td></tr></table></figure></code></pre></li><li><p>第六步，重启机器。通过修改，tcp可以达到20000个连接完全没有问题。</p></li></ul><h5 id="以root权限运行以下命令，确保配置防火墙开启TCP-4433、TCP-4434"><a href="#以root权限运行以下命令，确保配置防火墙开启TCP-4433、TCP-4434" class="headerlink" title="以root权限运行以下命令，确保配置防火墙开启TCP&#x2F;4433、TCP&#x2F;4434"></a>以root权限运行以下命令，确保配置防火墙开启TCP&#x2F;4433、TCP&#x2F;4434</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --add-port=4433/tcp --permanent   #（用于web界面启动）</span><br><span class="line">firewall-cmd --add-port=4434/tcp --permanent   #（用于节点与管理端通信）</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>如之后蜜罐服务需要占用其他端口，可使用相同命令打开</p><h5 id="以root权限运行以下一键部署命令"><a href="#以root权限运行以下一键部署命令" class="headerlink" title="以root权限运行以下一键部署命令"></a>以root权限运行以下一键部署命令</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -sS -L https://hfish.net/webinstall.sh)</span><br></pre></td></tr></table></figure><blockquote><h5 id="完成安装后，通过以下网址、账号密码登录"><a href="#完成安装后，通过以下网址、账号密码登录" class="headerlink" title="完成安装后，通过以下网址、账号密码登录"></a>完成安装后，通过以下网址、账号密码登录</h5></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">登陆链接：https://[ip]:4433/web/</span><br><span class="line">账号：admin</span><br><span class="line">密码：HFish2021复制失败成功</span><br></pre></td></tr></table></figure><p>如果管理端的IP是192.168.1.1，则登陆链接为：<a href="https://192.168.1.1:4433/web/">https://192.168.1.1:4433/web/</a></p><ul><li>URL中&#x2F;web&#x2F;路径不能少</li></ul><h4 id="数据库选择"><a href="#数据库选择" class="headerlink" title="数据库选择"></a>数据库选择</h4><p>除非性能极度紧张或环境所限，否则<strong>强烈建议使用MySQL&#x2F;MariaDB数据库</strong>。</p><p>经过实战测评，MySQL&#x2F;MariaDB数据库可以适应目前绝大多数场景，其数据处理和并发兼容能力都要优于SQLite。</p><blockquote><h5 id="关于SQLite"><a href="#关于SQLite" class="headerlink" title="关于SQLite"></a>关于SQLite</h5></blockquote><p>出于开箱即用考虑，HFish系统默认使用的SQLite数据库，自带的已经初始化好的db具体路径为&#x2F;usr&#x2F;share&#x2F;db&#x2F;hfish.db</p><p>SQLite数据库仅适用于功能预览、小规模内网环境失陷感知等有限场景。</p><blockquote><h5 id="SQLite更换为MySQL-MariaDB数据库"><a href="#SQLite更换为MySQL-MariaDB数据库" class="headerlink" title="SQLite更换为MySQL&#x2F;MariaDB数据库"></a>SQLite更换为MySQL&#x2F;MariaDB数据库</h5></blockquote><p>HFish提供两种更换数据库的机会：</p><p>1、在首次安装时，用户可以选择使用SQLite或MySQL&#x2F;MariaDB数据库</p><p>2、如果已经选择了SQLite，以管理员身份登录后，在「数据库配置」页面，根据指南可快速更换数据库</p><ul><li>HFish只支持SQLite向MySQL&#x2F;MariaDB数据库迁移，不支持反向迁移。</li></ul><h4 id="主动联网要求"><a href="#主动联网要求" class="headerlink" title="主动联网要求"></a>主动联网要求</h4><blockquote><h5 id="安全声明"><a href="#安全声明" class="headerlink" title="安全声明"></a>安全声明</h5></blockquote><p>HFish使用100% Golang语言开发，本地采用低交互蜜罐，本地模拟的所有网络服务都是由HFish构架的虚假服务，攻击者看似可以登录进入MySQL、Redis等蜜罐服务，但实际上那是完全用Golang开发的MySQL、Redis部分能力，用于迷惑攻击者。用户完全不需要担心HFish模拟服务被击穿的风险。</p><blockquote><h5 id="HFish管理端主动访问如下网络域名"><a href="#HFish管理端主动访问如下网络域名" class="headerlink" title="HFish管理端主动访问如下网络域名"></a>HFish管理端主动访问如下网络域名</h5></blockquote><p>HFish支持IPv4和IPv6网络环境，可以在完全隔离互联网的内部网络工作，但为了最大限度感知真实威胁、对接云端高交互情报、对接消费云端威胁情报和自动化升级，强烈建议客户允许HFish管理端主动访问有限互联网地址，管理端<strong>永远不会</strong>主动访问节点，管理端仅负责生成一个配置，等待节点每60秒尝试连接管理端拉取。</p><p>为兼顾安全性和服务可用性，建议用户设置ACL仅允许HFish管理端主动访问如下网络域名、地址和端口：</p><table><thead><tr><th>开放IP</th><th>对应开放域名</th><th>协议&#x2F;端口</th><th>访问目的</th></tr></thead><tbody><tr><td>106.75.31.212、106.75.71.108</td><td>api.hfish.net（已经禁止ping）</td><td>TCP&#x2F;443</td><td>用于官网升级与攻击数据拉取，建议开启</td></tr><tr><td>106.75.5.50、106.75.15.34</td><td>zoo.hfish.net（已经禁止ping）</td><td>TCP&#x2F;22222（高交互ssh端口）、TCP&#x2F;22223（高交互Telnet端口)</td><td>用于与云端高交互蜜罐通信，建议开启</td></tr><tr><td>43.227.197.203、43.227.197.42</td><td>hfish.cn-bj.ufileos.com</td><td>TCP&#x2F;443</td><td>用于分发安装和升级包</td></tr><tr><td>106.75.36.224、123.59.51.113、123.59.72.253、106.75.36.226</td><td>api.threatbook.cn</td><td>TCP&#x2F;443</td><td>用于威胁情报查询，如果未启用该功能，无需开放</td></tr><tr><td>（无法罗列，建议按域名开通）</td><td>open.feishu.cn</td><td>TCP&#x2F;443</td><td>用于飞书告警功能，如果未使用该功能，无需开放</td></tr><tr><td>（无法罗列，建议按域名开通）</td><td>oapi.dingtalk.com</td><td>TCP&#x2F;443</td><td>用于钉钉告警功能，如果未使用该功能，无需开放</td></tr><tr><td>（无法罗列，建议按域名开通）</td><td>qyapi.weixin.qq.com</td><td>TCP&#x2F;443</td><td>用于企业微信告警功能，如果未使用该功能，无需开放</td></tr></tbody></table><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">注意：</span><br><span class="line"><span class="bullet">1.</span> 基于安全考虑，不建议用户将HFish管理端Web管理端口TCP/4433暴露在互联网；</span><br><span class="line"><span class="bullet">2.</span> 如果使用邮件通知，请开启相应邮件服务器的访问权限；</span><br><span class="line"><span class="bullet">3.</span> HFish支持最多 5 路syslog日志发送，便于与安全设备联动，请根据实际情况开放权限；复制失败成功</span><br></pre></td></tr></table></figure><blockquote><h5 id="HFish客户端主动访问如下网络域名"><a href="#HFish客户端主动访问如下网络域名" class="headerlink" title="HFish客户端主动访问如下网络域名"></a>HFish客户端主动访问如下网络域名</h5></blockquote><p>HFish客户端不会主动访问除管理端外任何地址。</p><h4 id="安全配置"><a href="#安全配置" class="headerlink" title="安全配置"></a>安全配置</h4><blockquote><h5 id="管理端安全要求"><a href="#管理端安全要求" class="headerlink" title="管理端安全要求"></a>管理端安全要求</h5></blockquote><p>管理端应部署在安全区，只向少部分有网络管理权限和安全分析能力工作的人员和设备开放Web和SSH端口。</p><p>管理端用于配置管理的Web页面开启了HTTPS，默认访问端口为TCP&#x2F;4433，虽然官方不推荐，但是用户可以在config.ini中自行修改Web管理端口和登录URL。</p><p>此外，管理端还会开放TCP&#x2F;4434用于节点和管理端进行通讯，该端口不可改变，且必须保证该端口可被所有节点联通。</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">注意：</span><br><span class="line"><span class="bullet">- </span>TCP/4433端口和TCP/22端口 “只能”被安全区的管理设备访问；</span><br><span class="line"><span class="bullet">- </span>TCP/4434端口“必须能”被蜜罐节点访问;复制失败成功</span><br></pre></td></tr></table></figure><blockquote><h5 id="节点端安全要求"><a href="#节点端安全要求" class="headerlink" title="节点端安全要求"></a>节点端安全要求</h5></blockquote><p>蜜罐节点直接面对攻击者，建议遵循以下安全配置：</p><ol><li>如果用户同时有外网和内部需求，强烈建议用户分别在外网和内网部署完全独立的两套管理端和节点端；</li><li>如果有节点需要能被外网访问，建议把节点和管理端部署在DMZ区；</li><li>外网节点除了能访问管理端的TCP&#x2F;4434端口外，不能有权限访问内网中的任何资产；</li><li>内网节点除了开放蜜罐服务相应端口外，其它任何端口都不应该在网络中能被用户访问到；</li><li>考虑安全区设备有维护节点主机的需求，可以向有限的设备开放SSH端口；</li></ol><h3 id="忘记密码"><a href="#忘记密码" class="headerlink" title="忘记密码"></a>忘记密码</h3><p>如果用户不慎忘记HFish Web管理端admin密码，可以按照如下步骤强行重置。</p><ol><li>进入HFish管理端安装目录，执行.&#x2F;tools -mode resetpwd</li><li>kill hfish-server 等待几秒钟，进程会被自动拉起</li><li>使用默认账号密码：admin&#x2F;HFish2021进行登录</li></ol><h3 id="卸载HFish"><a href="#卸载HFish" class="headerlink" title="卸载HFish"></a>卸载HFish</h3><h4 id="删除Linux管理端"><a href="#删除Linux管理端" class="headerlink" title="删除Linux管理端"></a>删除Linux管理端</h4><blockquote><h5 id="删除计划任务进程"><a href="#删除计划任务进程" class="headerlink" title="删除计划任务进程"></a>删除计划任务进程</h5></blockquote><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 打开计划任务，删除带有hfish字样的行</span></span><br><span class="line">root<span class="symbol">@HFish</span>~<span class="meta"># crontab -e复制失败成功</span></span><br></pre></td></tr></table></figure><blockquote><h5 id="结束管理端进程"><a href="#结束管理端进程" class="headerlink" title="结束管理端进程"></a>结束管理端进程</h5></blockquote><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 结束hfish和hfish-server的进程</span></span><br><span class="line"><span class="attribute">root</span>@HFish~# ps ax | grep ./hfish | grep -v grep</span><br><span class="line"><span class="attribute">8435</span> ?        Sl    <span class="number">97</span>:<span class="number">59</span> ./hfish</span><br><span class="line"><span class="attribute">8436</span> ?        Sl    <span class="number">97</span>:<span class="number">59</span> ./hfish-server</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attribute">root</span>@HFish:~# kill -<span class="number">9</span> <span class="number">8435</span></span><br><span class="line"><span class="attribute">root</span>@HFish:~# kill -<span class="number">9</span> <span class="number">8436</span>复制失败成功</span><br></pre></td></tr></table></figure><blockquote><h5 id="删除文件夹"><a href="#删除文件夹" class="headerlink" title="删除文件夹"></a>删除文件夹</h5></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用install.sh安装的HFish会被部署到/opt/hfish目标，将整个删除即可</span></span><br><span class="line"><span class="meta prompt_">root@HFish~# </span><span class="language-bash"><span class="built_in">rm</span> -rf /opt/hfish复制失败成功</span></span><br></pre></td></tr></table></figure><blockquote><h5 id="清理所有配置（如果后续还要安装，建议不要删除，否则下次使用需要完全重新配置）"><a href="#清理所有配置（如果后续还要安装，建议不要删除，否则下次使用需要完全重新配置）" class="headerlink" title="清理所有配置（如果后续还要安装，建议不要删除，否则下次使用需要完全重新配置）"></a>清理所有配置（如果后续还要安装，建议不要删除，否则下次使用需要完全重新配置）</h5></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用install.sh安装的HFish会在/usr/share/hfish下建立全局变量</span></span><br><span class="line"><span class="meta prompt_">root@HFish~# </span><span class="language-bash"><span class="built_in">rm</span> -rf /usr/share/hfish复制失败成功</span></span><br></pre></td></tr></table></figure><blockquote><h5 id="删除MySQL数据库配置（SQLite可忽略）"><a href="#删除MySQL数据库配置（SQLite可忽略）" class="headerlink" title="删除MySQL数据库配置（SQLite可忽略）"></a>删除MySQL数据库配置（SQLite可忽略）</h5></blockquote><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除HFish数据库</span></span><br><span class="line">root<span class="variable">@HFish</span><span class="symbol">:~</span><span class="comment"># mysql -h127.0.0.1 -uroot -p</span></span><br><span class="line"><span class="title class_">Enter</span> <span class="symbol">password:</span>*******（默认密码详见config.ini配置文件）</span><br><span class="line">mysql&gt; <span class="title class_">DROP</span> <span class="title class_">DATABASE</span> hfish;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止MySQL服务</span></span><br><span class="line">root<span class="variable">@HFish</span><span class="symbol">:~</span><span class="comment"># systemctl stop mysqld</span></span><br><span class="line">root<span class="variable">@HFish</span><span class="symbol">:~</span><span class="comment"># systemctl disable mysqld复制失败成功</span></span><br></pre></td></tr></table></figure><blockquote><h5 id="还原SSH和Firewall配置"><a href="#还原SSH和Firewall配置" class="headerlink" title="还原SSH和Firewall配置"></a>还原SSH和Firewall配置</h5></blockquote><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 清除SSH config内对于访问来源的限制</span></span><br><span class="line">root@HFish~<span class="comment"># vi /etc/ssh/sshd_config</span></span><br><span class="line">注释掉以 AllowUsers root@ 开头的行</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启SSH服务</span></span><br><span class="line">root@HFish~<span class="comment"># systemctl restart sshd</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 清除Firewall服务的规则（请根据实际情况删除！）</span></span><br><span class="line">root@HFish~<span class="comment"># firewall-cmd --permanent --list-all | grep ports | head -n 1 | \</span></span><br><span class="line">cut -d: -f2 | <span class="keyword">tr</span> <span class="string">&#x27; &#x27;</span> <span class="string">&#x27;\n&#x27;</span> | xargs -I &#123;&#125; firewall-cmd --permanent --remove-port=&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启Firewall服务</span></span><br><span class="line">root@HFish~<span class="comment"># systemctl restart firewalld复制失败成功</span></span><br></pre></td></tr></table></figure><h4 id="卸载Linux节点"><a href="#卸载Linux节点" class="headerlink" title="卸载Linux节点"></a>卸载Linux节点</h4><blockquote><h5 id="删除计划任务"><a href="#删除计划任务" class="headerlink" title="删除计划任务"></a>删除计划任务</h5></blockquote><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 打开计划任务，删除带有hfish字样的行</span></span><br><span class="line">root<span class="symbol">@HFish</span>~<span class="meta"># crontab -e复制失败成功</span></span><br></pre></td></tr></table></figure><blockquote><h5 id="结束client进程"><a href="#结束client进程" class="headerlink" title="结束client进程"></a>结束client进程</h5></blockquote><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root<span class="variable">@HFish</span>~<span class="comment"># ps ax | grep ./client | grep -v grep</span></span><br><span class="line"><span class="number">8435</span> ?        <span class="title class_">Sl</span>    <span class="number">97</span><span class="symbol">:</span><span class="number">59</span> ./client</span><br><span class="line"></span><br><span class="line">root<span class="variable">@HFish</span><span class="symbol">:~</span><span class="comment"># kill -9 8435复制失败成功</span></span><br></pre></td></tr></table></figure><blockquote><h5 id="删除client文件夹"><a href="#删除client文件夹" class="headerlink" title="删除client文件夹"></a>删除client文件夹</h5></blockquote><p>文件夹路径为按照自己的安装路径，client端没有全局配置，删除安装文件夹即可</p><h2 id="E-R模型："><a href="#E-R模型：" class="headerlink" title="E-R模型："></a>E-R模型：</h2><p><img data-src="/hfish-safeline/er.png" alt="er"></p><p>​互联网环境部署，HFish管理端和雷池Safeline位于同一区域内相互隔离的VPC中，HFish节点端位于不同区域VPC。HFish用于配置web蜜罐以及收集互联网威胁情报，调用微步在线威胁分析与情报共享社区的IP信誉接口，将收集到的外网攻击数据存储在RDS云数据库中，数据库定时执行任务，抽取HFish数据库中的IP地址，清洗后存储到高危地址库，服务器定时执行推送任务，将IP地址表发布到托管平台，雷池Safeline自带IP组订阅功能，每天更新高危IP地址，实现web应用黑名单同步更新，主动拦截黑名单地址的web服务请求。</p><p><img data-src="/hfish-safeline/image-20240201143147891.png" alt="image-20240201143147891"></p><ul><li><p>IP地址表同步：</p><p>将hfish库的ipaddress表中的ip、国家、威胁等级、标签、更新时间值同步到dataset库的threatips表中，ip地址唯一，威胁等级大于2（中威胁度及以上）。</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dataset.threatips (ip, country, threat_level, labels_cn, update_time)</span><br><span class="line"><span class="keyword">SELECT</span> ip, country, threat_level, labels_cn, update_time</span><br><span class="line"><span class="keyword">FROM</span> hfish.ipaddress</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> (</span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">FROM</span> sync.threatips</span><br><span class="line"><span class="keyword">WHERE</span> threatips.ip <span class="operator">=</span> hfish.ipaddress.ip</span><br><span class="line">)</span><br><span class="line"><span class="keyword">AND</span> hfish.ipaddress.threat_level <span class="operator">&gt;</span> <span class="number">2</span>;</span><br></pre></td></tr></table></figure><ul><li><p>值同步</p><p>IP地址同步后，执行值同步任务，更新dataset表中更新时间、标签、威胁等级、国家的值。</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> threatips</span><br><span class="line"><span class="keyword">SET</span> <span class="operator">&lt;</span>update_time<span class="operator">&gt;</span> <span class="operator">=</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="operator">&lt;</span>update_time<span class="operator">&gt;</span></span><br><span class="line">    <span class="keyword">FROM</span> hfish.ipaddress</span><br><span class="line">    <span class="keyword">WHERE</span> threatips.ip <span class="operator">=</span> ipaddress.ip</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>拉取IP地址</li></ul><p>​编写shell脚本定时从数据库拉取IP地址，输出txt文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 编辑数据库信息</span></span><br><span class="line">DB_USER=<span class="string">&quot;username&quot;</span></span><br><span class="line">DB_PASSWORD=<span class="string">&quot;password&quot;</span></span><br><span class="line">DB_NAME=<span class="string">&quot;dataset&quot;</span></span><br><span class="line">TABLE_NAME=<span class="string">&quot;threatips&quot;</span></span><br><span class="line">COLUMN_NAME=<span class="string">&quot;ip&quot;</span></span><br><span class="line">HOST=<span class="string">&quot;dbhost:3306&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 目标文件夹</span></span><br><span class="line">EXPORT_DIR=<span class="string">&quot;/opt/output&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查目录是否存在</span></span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="string">&quot;<span class="variable">$EXPORT_DIR</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出文件名&lt;数据表_ip_日期&gt;.txt</span></span><br><span class="line">OUTPUT_FILE=<span class="string">&quot;<span class="variable">$EXPORT_DIR</span>/<span class="variable">$&#123;TABLE_NAME&#125;</span>_<span class="variable">$&#123;COLUMN_NAME&#125;</span>_<span class="subst">$(date +%Y-%m-%d)</span>.txt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接到MySQL数据库</span></span><br><span class="line">mysql -h<span class="string">&quot;<span class="variable">$HOST</span>&quot;</span> -u<span class="string">&quot;<span class="variable">$DB_USER</span>&quot;</span> -p<span class="string">&quot;<span class="variable">$DB_PASSWORD</span>&quot;</span> <span class="string">&quot;<span class="variable">$DB_NAME</span>&quot;</span> -e <span class="string">&quot;SELECT \`<span class="variable">$COLUMN_NAME</span>\` FROM \`<span class="variable">$TABLE_NAME</span>\`&quot;</span> &gt; <span class="string">&quot;<span class="variable">$OUTPUT_FILE</span>&quot;</span></span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&#x27;1d&#x27;</span> <span class="variable">$OUTPUT_FILE</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Column \`<span class="variable">$COLUMN_NAME</span>\` from table \`<span class="variable">$TABLE_NAME</span>\` has been exported to <span class="variable">$OUTPUT_FILE</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> <span class="string">&quot;<span class="variable">$OUTPUT_FILE</span>&quot;</span> <span class="variable">$EXPORT_DIR</span>/threatips.txt</span><br></pre></td></tr></table></figure><ul><li><p>定时推送</p><p>根据部署情况选择Github、OSS、MinIO对象存储等途径上传threatips.txt文件，使用脚本定时推送更新即可。</p></li></ul><h2 id="防御效果："><a href="#防御效果：" class="headerlink" title="防御效果："></a>防御效果：</h2><p><img data-src="/hfish-safeline/image-20240201150403087.png" alt="image-20240201150403087"></p><p><img data-src="/hfish-safeline/image-20240201150428430.png" alt="image-20240201150428430"></p><p><img data-src="/hfish-safeline/image-20240201150331151.png" alt="image-20240201150331151"></p>]]></content>
    
    
    <summary type="html">雷池Safeline是一个基于智能语义分析引擎的下一代Web应用防火墙（WAF）。HFish是一款社区型免费蜜罐，侧重企业安全场景，从内网失陷检测、外网威胁感知、威胁情报生产三个场景出发，为用户提供可独立操作且实用的功能，通过安全、敏捷、可靠的中低交互蜜罐增加用户在失陷感知和威胁情报领域的能力。本篇将通过结合WAF与蜜罐实现对互联网攻击的主动防范。</summary>
    
    
    
    <category term="网关" scheme="https://blog.ceobe.cn/categories/%E7%BD%91%E5%85%B3/"/>
    
    <category term="Web应用防火墙" scheme="https://blog.ceobe.cn/categories/%E7%BD%91%E5%85%B3/Web%E5%BA%94%E7%94%A8%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    
    
    <category term="安全合规" scheme="https://blog.ceobe.cn/tags/%E5%AE%89%E5%85%A8%E5%90%88%E8%A7%84/"/>
    
    <category term="WAF" scheme="https://blog.ceobe.cn/tags/WAF/"/>
    
    <category term="蜜罐技术" scheme="https://blog.ceobe.cn/tags/%E8%9C%9C%E7%BD%90%E6%8A%80%E6%9C%AF/"/>
    
    <category term="主动防御" scheme="https://blog.ceobe.cn/tags/%E4%B8%BB%E5%8A%A8%E9%98%B2%E5%BE%A1/"/>
    
    <category term="事件响应" scheme="https://blog.ceobe.cn/tags/%E4%BA%8B%E4%BB%B6%E5%93%8D%E5%BA%94/"/>
    
    <category term="防火墙" scheme="https://blog.ceobe.cn/tags/%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    
    <category term="应用程序安全" scheme="https://blog.ceobe.cn/tags/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%AE%89%E5%85%A8/"/>
    
    <category term="风险评估" scheme="https://blog.ceobe.cn/tags/%E9%A3%8E%E9%99%A9%E8%AF%84%E4%BC%B0/"/>
    
    <category term="网络安全" scheme="https://blog.ceobe.cn/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    <category term="钓鱼攻击" scheme="https://blog.ceobe.cn/tags/%E9%92%93%E9%B1%BC%E6%94%BB%E5%87%BB/"/>
    
    <category term="恶意软件" scheme="https://blog.ceobe.cn/tags/%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6/"/>
    
    <category term="威胁情报" scheme="https://blog.ceobe.cn/tags/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/"/>
    
  </entry>
  
  <entry>
    <title>数据仓库&amp;镜像漏洞扫描器安装部署</title>
    <link href="https://blog.ceobe.cn/harbor-trivy/"/>
    <id>https://blog.ceobe.cn/harbor-trivy/</id>
    <published>2024-01-26T00:53:17.000Z</published>
    <updated>2024-02-01T05:35:51.588Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据仓库-镜像漏洞扫描器安装部署"><a href="#数据仓库-镜像漏洞扫描器安装部署" class="headerlink" title="数据仓库&amp;镜像漏洞扫描器安装部署"></a>数据仓库&amp;镜像漏洞扫描器安装部署</h1><p>Harbor是一个开源的企业级Docker Registry服务，由VMware公司中国团队设计，旨在为企业用户提供一个私有、安全的Docker镜像仓库解决方案。Harbor在Docker官方的Registry基础上增加了诸如权限管理、LDAP认证、审计、管理界面、高可用性（HA）等企业级必需的功能，并且针对中国市场和用户需求，设计了镜像复制和中文支持等特点。 </p><h3 id="Harbor的主要功能和特点包括："><a href="#Harbor的主要功能和特点包括：" class="headerlink" title="Harbor的主要功能和特点包括："></a>Harbor的主要功能和特点包括：</h3><ol><li><strong>基于角色的访问控制</strong>：用户和Docker镜像仓库之间通过项目进行组织管理，一个用户可以对多个镜像仓库在同一命名空间（project）里有不同的权限。</li><li><strong>镜像复制策略</strong>：支持在多个Harbor实例之间复制镜像，适用于负载均衡、高可用、混合云和多云的场景。</li><li><strong>图形化用户界面</strong>：通过浏览器可以轻松管理镜像仓库，包括浏览、检索当前Docker镜像仓库，以及管理项目和命名空间。</li><li><strong>支持LDAP认证</strong>：Harbor可以集成企业内部已存在的AD&#x2F;LDAP用户认证系统，实现统一的身份管理。</li><li><strong>审计管理</strong>：所有对镜像仓库的操作都被记录下来，便于审计和追踪。</li><li><strong>API操作支持</strong>：管理员可以通过API调用接口，与其他程序进行集成。</li></ol><h3 id="Harbor的架构包括几个关键组件："><a href="#Harbor的架构包括几个关键组件：" class="headerlink" title="Harbor的架构包括几个关键组件："></a>Harbor的架构包括几个关键组件：</h3><ul><li><strong>Proxy</strong>：Harbor自动生成一个nginx容器，作为前端代理，负责将请求转发到后端不同的应用。</li><li><strong>Registry</strong>：负责存储Docker镜像，处理Docker pull&#x2F;push命令，以及访问控制等。</li></ul><h3 id="硬件要求"><a href="#硬件要求" class="headerlink" title="- 硬件要求"></a>- 硬件要求</h3><table><thead><tr><th>资源名称</th><th>最低配置</th><th>推荐配置</th></tr></thead><tbody><tr><td>CPU</td><td>2 CPU</td><td>4 CPU</td></tr><tr><td>内存</td><td>4GB</td><td>8GB</td></tr><tr><td>磁盘</td><td>40GB</td><td>160GB</td></tr></tbody></table><h3 id="软件要求"><a href="#软件要求" class="headerlink" title="- 软件要求"></a>- 软件要求</h3><table><thead><tr><th>软件名称</th><th>版本</th></tr></thead><tbody><tr><td>Docker Engine</td><td>Version 20.10.10-ce+或更高</td></tr><tr><td>Docker Compose</td><td>docker-compose (v1.18.0+) 或 docker compose v2 (docker-compose-plugin)</td></tr><tr><td>OpenSSL</td><td>用于生成证书与密钥，推荐最新版本</td></tr></tbody></table><h3 id="网络要求"><a href="#网络要求" class="headerlink" title="- 网络要求"></a>- 网络要求</h3><table><thead><tr><th>端口</th><th>协议</th></tr></thead><tbody><tr><td>443</td><td>HTTPS</td></tr><tr><td>4443</td><td>HTTPS</td></tr><tr><td>80</td><td>HTTP</td></tr></tbody></table><h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><ul><li>参考文章 <a href="/dockerinit/" title="Docker初始化环境">Docker初始化环境</a></li></ul><h2 id="安装Harbor"><a href="#安装Harbor" class="headerlink" title="安装Harbor"></a>安装Harbor</h2><ol><li>下载官方安装文件：<a href="https://github.com/goharbor/harbor/releases">Harbor Official Releases</a><ul><li>网盘共享安装文件：<a href="https://zfile.ceobe.cn/1/Harbor%E5%9C%A8%E7%BA%BF%26%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85%E6%96%87%E4%BB%B6">Haror在线&amp;离线安装文件</a></li></ul></li></ol><ul><li>在线安装方式（Online installer）：在线安装文件从Docker Hub下载Harbor镜像，体积最小。</li><li>离线安装方式（Offline installer）：离线安装文件包含预先构建好的Harbor镜像。</li></ul><ol start="2"><li><p>使用<code>tar</code>解压安装文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar xzvf harbor-online-installer-v2.10.0.tgz</span><br><span class="line">tar xzvf harbor-offline-installer-v2.10.0.tgz</span><br></pre></td></tr></table></figure></li><li><p>执行安装脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash  ./install.sh</span><br></pre></td></tr></table></figure><p>修改Harbor配置文件 <code> Harbor.yml</code></p><table><thead><tr><th>参数</th><th>参考值</th></tr></thead><tbody><tr><td>hostname</td><td>&lt;域名&gt;</td></tr><tr><td>http</td><td>80</td></tr><tr><td>https</td><td>443</td></tr><tr><td>certificate</td><td>SSL证书(.pem)</td></tr><tr><td>private_key</td><td>SSL私钥(.key)</td></tr><tr><td>harbor_admin_password</td><td>admin用户密码</td></tr></tbody></table></li><li><p>停止&amp;启动Harbor服务：</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker compose down</span><br><span class="line">docker compose -f docker-compose.yml up -d</span><br></pre></td></tr></table></figure><p>​</p><p><img data-src="/harbor-trivy/image-20240201103429965.png" alt="image-20240201103429965"></p><h2 id="Trivy主要功能和特点："><a href="#Trivy主要功能和特点：" class="headerlink" title="Trivy主要功能和特点："></a>Trivy主要功能和特点：</h2><p>​Trivy是一个开源的漏洞扫描器，由Aqua Security开发。它主要用于扫描容器镜像、文件系统、Git仓库以及Kubernetes集群和资源中的安全漏洞。Trivy的检测范围包括操作系统包、特定语言的包以及基础设施即代码（IaC）文件，如Terraform和Kubernetes。<br>Trivy的特点如下：</p><ol><li><p><strong>多功能性</strong>：Trivy可以扫描多种工件，包括容器镜像、文件系统、Git仓库和Kubernetes资源，满足不同的安全检测需求。</p></li><li><p><strong>快速性</strong>：Trivy的第一次扫描可能需要10秒钟左右，之后的扫描只需要几秒钟，这使得它非常适合CI&#x2F;CD管道中的自动化安全检查。</p></li><li><p><strong>无状态设计</strong>：Trivy是无状态的，不需要维护漏洞数据库，这减少了维护工作并保证了扫描结果的及时性。</p></li><li><p><strong>支持多种安装方式</strong>：Trivy可以通过多种方式安装，包括二进制文件、APT、YUM、Homebrew、Docker和源码编译等，方便不同环境的部署。</p></li><li><p><strong>集成与自动化</strong>：Trivy支持CI&#x2F;CD集成，可以与Jenkins、Travis CI、CircleCI、GitLab CI等流行的CI&#x2F;CD工具集成，实现自动化安全扫描。</p></li><li><p><strong>社区支持</strong>：Trivy有一个活跃的开源社区，不断更新和改进，用户可以获得技术支持、报告问题和贡献代码。</p></li></ol><p>  ​Trivy的使用非常简单，通常只需要指定要扫描的目标，如容器的图像名称，Trivy就会自动进行扫描并输出结果。扫描结果包括漏洞的详细信息和修复建议，帮助用户及时发现和修复潜在的安全风险。<br>  ​在持续集成（CI）环境中，Trivy常用于在部署前扫描工件，确保只有安全和合规的工件被部署到生产环境中。Trivy Operator是一个Kubernetes Operator，它可以自动扫描集群中的容器镜像，并提供持续的安全监控。</p><h2 id="安装Trivy"><a href="#安装Trivy" class="headerlink" title="安装Trivy"></a>安装Trivy</h2><p>使用包管理工具安装：</p><ul><li><p>RHEL&#x2F;CentOS：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">RELEASE_VERSION=$(grep -Po &#x27;(?&lt;=VERSION_ID=&quot;)[0-9]&#x27; /etc/os-release)</span><br><span class="line">cat &lt;&lt; EOF | sudo tee -a /etc/yum.repos.d/trivy.repo</span><br><span class="line">[trivy]</span><br><span class="line">name=Trivy repository</span><br><span class="line">baseurl=https://aquasecurity.github.io/trivy-repo/rpm/releases/$RELEASE_VERSION/\$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://aquasecurity.github.io/trivy-repo/rpm/public.key</span><br><span class="line">EOF</span><br><span class="line">sudo yum -y update</span><br><span class="line">sudo yum -y install trivy</span><br></pre></td></tr></table></figure></li><li><p>Debian&#x2F;Ubuntu</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install wget apt-transport-https gnupg lsb-release</span><br><span class="line">wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg &gt; /dev/null</span><br><span class="line">echo &quot;deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main&quot; | sudo tee -a /etc/apt/sources.list.d/trivy.list</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install trivy</span><br></pre></td></tr></table></figure></li><li><p>Homebrew</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install trivy</span><br></pre></td></tr></table></figure></li><li><p>Arch Linux</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S trivy</span><br></pre></td></tr></table></figure></li><li><p>MacPorts</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo port install trivy</span><br></pre></td></tr></table></figure></li></ul><p><img data-src="/harbor-trivy/image-20240201103518122.png" alt="image-20240201103518122"></p><h2 id="Harbor-Scanner-Adapter-for-Trivy集成使用"><a href="#Harbor-Scanner-Adapter-for-Trivy集成使用" class="headerlink" title="Harbor Scanner Adapter for Trivy集成使用"></a>Harbor Scanner Adapter for Trivy集成使用</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">docker run --name trivy-adapter -d --rm \</span><br><span class="line">-p 8181:8181 \</span><br><span class="line">--env HTTP_PROXY=&#x27;&lt;http://proxy:port&gt;&#x27; \ </span><br><span class="line">--env HTTPS_PROXY=&#x27;&lt;http://proxy:port&gt;&#x27; \</span><br><span class="line">--env NO_PROXY=&#x27;.local,portal,clair-adapter,chartmuseum,trivy-adapter,core,redis&#x27; \</span><br><span class="line">-e &quot;SCANNER_LOG_LEVEL=trace&quot; \</span><br><span class="line">-e &quot;SCANNER_TRIVY_DEBUG_MODE=true&quot; \</span><br><span class="line">-e &quot;TRIVY_NON_SSL=true&quot; \</span><br><span class="line">-e &quot;SCANNER_API_SERVER_ADDR=:8181&quot; \</span><br><span class="line">-e &quot;SCANNER_REDIS_URL=redis://redis:6379&quot; \</span><br><span class="line">--network harbor_harbor \</span><br><span class="line">aquasec/harbor-scanner-trivy:0.30.21</span><br></pre></td></tr></table></figure><ul><li>trivy使用git下载漏洞库，所以需要配置代理，连接不到github就会扫描失败。</li></ul><p>​系统管理 -&gt; 审查服务 -&gt; 新建扫描器 -&gt; 地址：ip:8181</p><p><img data-src="/harbor-trivy/image-20240201103817289.png" alt="image-20240201103817289"></p><p><img data-src="/harbor-trivy/image-20240201104022268.png" alt="image-20240201104022268"></p>]]></content>
    
    
    <summary type="html">Harbor是一个开源的企业级Docker Registry服务，由VMware公司中国团队设计，旨在为企业用户提供一个私有、安全的Docker镜像仓库解决方案。Harbor在Docker官方的Registry基础上增加了诸如权限管理、LDAP认证、审计、管理界面、高可用性（HA）等企业级必需的功能，并且针对中国市场和用户需求，设计了镜像复制和中文支持等特点。</summary>
    
    
    
    <category term="镜像仓库" scheme="https://blog.ceobe.cn/categories/%E9%95%9C%E5%83%8F%E4%BB%93%E5%BA%93/"/>
    
    <category term="漏洞扫描" scheme="https://blog.ceobe.cn/categories/%E9%95%9C%E5%83%8F%E4%BB%93%E5%BA%93/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F/"/>
    
    
    <category term="Harbor" scheme="https://blog.ceobe.cn/tags/Harbor/"/>
    
    <category term="Trivy" scheme="https://blog.ceobe.cn/tags/Trivy/"/>
    
    <category term="开源镜像仓库" scheme="https://blog.ceobe.cn/tags/%E5%BC%80%E6%BA%90%E9%95%9C%E5%83%8F%E4%BB%93%E5%BA%93/"/>
    
    <category term="安全扫描" scheme="https://blog.ceobe.cn/tags/%E5%AE%89%E5%85%A8%E6%89%AB%E6%8F%8F/"/>
    
    <category term="自动化构建" scheme="https://blog.ceobe.cn/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9E%84%E5%BB%BA/"/>
    
    <category term="合规检查" scheme="https://blog.ceobe.cn/tags/%E5%90%88%E8%A7%84%E6%A3%80%E6%9F%A5/"/>
    
    <category term="容器安全" scheme="https://blog.ceobe.cn/tags/%E5%AE%B9%E5%99%A8%E5%AE%89%E5%85%A8/"/>
    
    <category term="版本控制" scheme="https://blog.ceobe.cn/tags/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>为网页添加『Sakana！』石蒜模拟器</title>
    <link href="https://blog.ceobe.cn/Sakana/"/>
    <id>https://blog.ceobe.cn/Sakana/</id>
    <published>2024-01-15T13:24:00.000Z</published>
    <updated>2024-02-01T02:58:56.898Z</updated>
    
    <content type="html"><![CDATA[<h1 id="石蒜模拟器"><a href="#石蒜模拟器" class="headerlink" title="石蒜模拟器"></a>石蒜模拟器</h1><h2 id="项目地址：https-github-com-itorr-sakana"><a href="#项目地址：https-github-com-itorr-sakana" class="headerlink" title="- 项目地址：https://github.com/itorr/sakana/"></a>- 项目地址：<a href="https://github.com/itorr/sakana/">https://github.com/itorr/sakana/</a></h2><h2 id="Demo：-https-lab-magiconch-com-sakana"><a href="#Demo：-https-lab-magiconch-com-sakana" class="headerlink" title="- Demo： https://lab.magiconch.com/sakana/"></a>- Demo： <a href="https://lab.magiconch.com/sakana/">https://lab.magiconch.com/sakana/</a></h2><h2 id="效果："><a href="#效果：" class="headerlink" title="- 效果："></a>- 效果：</h2><p><img data-src="/Sakana/image-20240115213244643.png" alt="image-20240115213244643"></p><p><img data-src="/Sakana/image-20240115213312229.png" alt="image-20240115213312229"></p><h2 id="安装环境："><a href="#安装环境：" class="headerlink" title="- 安装环境："></a>- 安装环境：</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">hexo-site@0.0.0 </span><br><span class="line">├── @waline/hexo-next@3.0.1</span><br><span class="line">├── disqusjs@3.0.3-canary.1</span><br><span class="line">├── hexo-bilibili-bangumi@1.8.9</span><br><span class="line">├── hexo-deployer-ali-oss@1.0.0</span><br><span class="line">├── hexo-deployer-git@4.0.0</span><br><span class="line">├── hexo-generator-archive@2.0.0</span><br><span class="line">├── hexo-generator-baidu-sitemap@0.1.9</span><br><span class="line">├── hexo-generator-category@2.0.0</span><br><span class="line">├── hexo-generator-feed@3.0.0</span><br><span class="line">├── hexo-generator-index@3.0.0</span><br><span class="line">├── hexo-generator-searchdb@1.4.1</span><br><span class="line">├── hexo-generator-sitemap@3.0.1</span><br><span class="line">├── hexo-generator-tag@2.0.0</span><br><span class="line">├── hexo-next-darkmode@0.1.11</span><br><span class="line">├── hexo-next-valine@1.0.0</span><br><span class="line">├── hexo-renderer-ejs@2.0.0</span><br><span class="line">├── hexo-renderer-marked@6.2.0</span><br><span class="line">├── hexo-renderer-stylus@2.1.0</span><br><span class="line">├── hexo-server@3.0.0</span><br><span class="line">├── hexo-symbols-count-time@0.7.1</span><br><span class="line">├── hexo-tag-cloud@2.1.2</span><br><span class="line">├── hexo-theme-landscape@1.0.0</span><br><span class="line">├── hexo-theme-next@8.19.1</span><br><span class="line">├── hexo@6.3.0</span><br><span class="line">└── sakana@1.0.8</span><br></pre></td></tr></table></figure><ul><li>NPM安装与引入</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i sakana -d</span><br></pre></td></tr></table></figure><ul><li>NexT 主题 _config.next.yml配置文件-自定义文件路径：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Define custom file paths.</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Create your custom files <span class="keyword">in</span> site directory `<span class="built_in">source</span>/_data` and uncomment needed files below.</span></span><br><span class="line">custom_file_path:</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash"><span class="built_in">head</span>: <span class="built_in">source</span>/_data/head.njk</span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">header: <span class="built_in">source</span>/_data/header.njk</span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">sidebar: <span class="built_in">source</span>/_data/sidebar.njk</span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">postMeta: <span class="built_in">source</span>/_data/post-meta.njk</span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">postBodyStart: <span class="built_in">source</span>/_data/post-body-start.njk</span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">postBodyEnd: <span class="built_in">source</span>/_data/post-body-end.njk</span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">footer: <span class="built_in">source</span>/_data/footer.njk</span></span><br><span class="line">  bodyEnd: source/_data/body-end.njk</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">variable: <span class="built_in">source</span>/_data/variables.styl</span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">mixin: <span class="built_in">source</span>/_data/mixins.styl</span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">style: <span class="built_in">source</span>/_data/styles.styl</span></span><br></pre></td></tr></table></figure><ul><li>在&#x2F;source&#x2F;_data 路径下创建 body-end.njk 文件，修改注入内容：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">html .sakana-box&#123;</span><br><span class="line">  position: fixed;</span><br><span class="line">  right: 0;</span><br><span class="line">  bottom: 0;</span><br><span class="line">  </span><br><span class="line">  transform-origin: 100% 100%; /* 从右下开始变换 */</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class=&quot;sakana-box&quot;&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script src=&quot;https://cdn.jsdelivr.net/npm/sakana@1.0.8&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">// 取消静音</span><br><span class="line">Sakana.setMute(true);</span><br><span class="line"></span><br><span class="line">// 启动</span><br><span class="line">Sakana.init(&#123;</span><br><span class="line">  el:         &#x27;.sakana-box&#x27;,     // 启动元素 node 或 选择器</span><br><span class="line">  scale:      .5,                // 缩放倍数</span><br><span class="line">  canSwitchCharacter: true,      // 允许换角色</span><br><span class="line">  scale:      0.425,             // 缩放倍数</span><br><span class="line">  character:  &#x27;takina&#x27;,          // 启动角色 &#x27;chisato&#x27;,&#x27;takina&#x27; </span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>重建站点测试效果</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s -g </span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">为网页添加『Sakana！』 石蒜模拟器。</summary>
    
    
    
    <category term="Blog" scheme="https://blog.ceobe.cn/categories/Blog/"/>
    
    
    <category term="Plugin" scheme="https://blog.ceobe.cn/tags/Plugin/"/>
    
    <category term="NPM" scheme="https://blog.ceobe.cn/tags/NPM/"/>
    
    <category term="Github" scheme="https://blog.ceobe.cn/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>高性能API网关 Apache APISIX部署</title>
    <link href="https://blog.ceobe.cn/apache-apisix/"/>
    <id>https://blog.ceobe.cn/apache-apisix/</id>
    <published>2024-01-15T06:45:56.000Z</published>
    <updated>2024-02-01T02:54:58.813Z</updated>
    
    <content type="html"><![CDATA[<h1 id="高性能API网关-Apache-APISIX部署"><a href="#高性能API网关-Apache-APISIX部署" class="headerlink" title="高性能API网关 Apache APISIX部署"></a>高性能API网关 Apache APISIX部署</h1><p>Apache APISIX 是一个开源的、动态的、实时的高性能云原生 API 网关，由 Apache 软件基金会支持。它设计用于处理服务之间的东西向流量（即微服务间的通信）以及传统的南北向流量（客户端到服务端请求）。APISIX 提供了诸如负载均衡、动态上游、金丝雀发布、服务熔断、身份认证和可观测性等丰富的流量管理功能。此外，APISIX 还支持作为 K8s Ingress Controller 使用，能够处理进入 Kubernetes 集群的流量。<br>APISIX 的主要特点包括：</p><ol><li><strong>全动态能力</strong>：支持热加载，允许在不重启服务的情况下更新配置。</li><li><strong>多平台支持</strong>：可以在多种环境中运行，包括裸机、Kubernetes，以及与 AWS Lambda、Azure Function、Lua 函数和 Apache OpenWhisk 等云服务集成。</li><li><strong>精细化路由</strong>：使用 NGINX 内置变量作为路由匹配条件，支持自定义匹配函数。</li><li><strong>运维友好</strong>：可以与多种工具和平台集成，如 HashiCorp Vault、Zipkin、Apache SkyWalking、Consul、Nacos 和 Eureka。APISIX Dashboard 提供了一个直观友好的 UI，用于配置 APISIX。</li><li><strong>多语言插件支持</strong>：支持多种编程语言开发插件，方便开发者根据需求进行自定义。<br>APISIX 的架构设计使其能够高效地处理大量流量，同时保持扩展性和灵活性。其内部使用 Nginx 和 LuaJIT 作为基础架构，这使得 APISIX 能够充分利用 Nginx 的高性能处理能力。<br>在安全性方面，APISIX 支持多种身份认证机制，包括但不限于 OAuth2、JWT、 basic authentication 等，确保 API 的安全性。<br>APISIX 社区活跃，不断有新的特性和插件被开发和贡献。社区周报是了解 APISIX 最新进展的一个好渠道。此外，APISIX 还提供了详细的文档，帮助用户了解如何安装、配置和使用 APISIX。<br>对于开发人员而言，APISIX 提供了一个易于使用的开发框架，可以方便地创建和定制插件来扩展网关的功能。APISIX 的插件机制非常灵活，插件可以处理路由、限流、熔断、响应处理等各种场景。<br>在运维方面，APISIX 提供了便捷的运维工具，例如可以通过简单的命令进行服务的启动、停止和重启。同时，APISIX 也支持通过 Dashboard 对网关进行配置管理，提高了运维的效率和便利性。<br>综上所述，Apache APISIX 是一个功能全面、灵活性高、易于集成和部署的 API 网关解决方案，适用于各种规模的企业和开发者，特别是在微服务架构和云原生环境中。</li></ol><h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><ul><li>参考文章 <a href="/dockerinit/" title="Docker初始化环境">Docker初始化环境</a></li></ul><h2 id="安装APISIX"><a href="#安装APISIX" class="headerlink" title="安装APISIX"></a>安装APISIX</h2><ul><li>下载 <a href='https://zfile.ceobe.cn/1/高性能API网关 Apache APISIX部署'> Git项目文件 apisix-docker.zip </a>至运行环境</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://zfile.ceobe.cn/s/e21haz -O apisix-docker.zip</span><br></pre></td></tr></table></figure><p>** 短链存在有效期，请自行获取并替换 **</p><p><img data-src="/apache-apisix/image-20240115160144787.png" alt="image-20240115160144787"></p><ul><li>解压缩文件：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip apisix-docker.zip</span><br></pre></td></tr></table></figure><ul><li>使用Docker Compose自行编排容器：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd apisix-docker/example</span><br><span class="line">docker compose -f docker-compose.yml up -d</span><br></pre></td></tr></table></figure><p><img data-src="/apache-apisix/image-20240115152109914.png" alt="image-20240115152109914"></p><ul><li>验证 APISIX 服务：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl &quot;http://127.0.0.1:9080&quot; --head | grep Server</span><br></pre></td></tr></table></figure><p><img data-src="/apache-apisix/image-20240115152320421.png" alt="image-20240115152320421"></p><h2 id="系统界面"><a href="#系统界面" class="headerlink" title="系统界面"></a>系统界面</h2><ul><li>图形界面 APISIX Dashboard：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:9000/</span><br></pre></td></tr></table></figure><p>默认帐号：admin</p><p>默认密码： admin</p><p>配置文件路径： apisix-docker&#x2F;example&#x2F;dashboard_conf&#x2F;conf.yaml</p><p><img data-src="/apache-apisix/image-20240115152841419.png" alt="image-20240115152841419"></p><ul><li>图形界面 Grafana：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:3000</span><br></pre></td></tr></table></figure><p>默认帐号： admin</p><p>默认密码： admin（首次登录时要求修改）</p><p><img data-src="/apache-apisix/image-20240115153140700.png" alt="image-20240115153140700"></p><ul><li>监控告警系统 Prometheus：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:9090</span><br></pre></td></tr></table></figure><p>配置文件路径： apisix-docker&#x2F;example&#x2F;prometheus_conf&#x2F;prometheus.yml</p><p><img data-src="/apache-apisix/image-20240115153513965.png" alt="image-20240115153513965"></p><ul><li>APISIX 管理后台 &amp; 前端：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:9180</span><br><span class="line">http://127.0.0.1:9080</span><br></pre></td></tr></table></figure><p>创建测试路由：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">curl -i &quot;http://127.0.0.1:9180/apisix/admin/routes&quot; -H &#x27;X-API-KEY: edd1c9f034335f136f87ad84b625c8f1&#x27; -X PUT -d &#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;id&quot;: &quot;getting-started-ip&quot;,</span><br><span class="line">  &quot;uri&quot;: &quot;/ip&quot;,</span><br><span class="line">  &quot;upstream&quot;: &#123;</span><br><span class="line">    &quot;type&quot;: &quot;roundrobin&quot;,</span><br><span class="line">    &quot;nodes&quot;: &#123;</span><br><span class="line">      &quot;httpbin.org:80&quot;: 1</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;&#x27;</span><br><span class="line"></span><br><span class="line">curl http://127.0.0.1:9080/ip</span><br></pre></td></tr></table></figure><p><img data-src="/apache-apisix/image-20240115154121792.png" alt="image-20240115154121792"></p><p>调用 &#x2F;ip 接口测试源地址：</p><p><img data-src="/apache-apisix/image-20240115154156600.png" alt="image-20240115154156600"></p><h2 id="（可选）APISIX-联动雷池-Safeline"><a href="#（可选）APISIX-联动雷池-Safeline" class="headerlink" title="-（可选）APISIX 联动雷池 Safeline"></a>-（可选）APISIX 联动雷池 Safeline</h2><p>雷池是由长亭科技开发的 WAF 系统，提供对 HTTP 请求的安全请求，提供完整的 API 管理和防护能力。</p><p>自 APISIX 3.5.0 之后的版本将内置长亭雷池 WAF 插件，在启用 chaitin-waf 插件后，流量将被转发给长亭 WAF 服务，用以检测和防止各种 Web 应用程序攻击，以保护应用程序和用户数据的安全。</p><h2 id="安装雷池"><a href="#安装雷池" class="headerlink" title="安装雷池"></a>安装雷池</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c &quot;$(curl -fsSLk https://waf-ce.chaitin.cn/release/latest/setup.sh)&quot;</span><br></pre></td></tr></table></figure><h2 id="修改雷池检测引擎的工作模式"><a href="#修改雷池检测引擎的工作模式" class="headerlink" title="修改雷池检测引擎的工作模式"></a>修改雷池检测引擎的工作模式</h2><p>社区版雷池的检测引擎默认以 unix socket 的方式提供服务，我们需要把他修改为 tcp 方式，供 APISIX 调用。</p><p>进入雷池检测引擎的配置目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /data/safeline/resources/detector/</span><br></pre></td></tr></table></figure><p>用文本编辑器打开目录里的 detector.yml 文件，我们需要将 bind 方式从 unix socket 改为 tcp，添加如下配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bind_addr: 0.0.0.0</span><br><span class="line">listen_port: 8000</span><br></pre></td></tr></table></figure><p>detector配置的属性值将覆盖容器内默认配置文件的同名属性值。这样我们就把雷池引擎的服务监听到了 8000 端口，现在只需要把容器内的 8000 端口映射到宿主机即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /data/safeline/compose.yaml</span><br></pre></td></tr></table></figure><p>为 detector 容器增加 ports 字段，暴露其 8000端口，参考如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">......</span><br><span class="line"></span><br><span class="line">detect:</span><br><span class="line">    ......</span><br><span class="line">    ports:</span><br><span class="line">    - 8000:8000</span><br><span class="line"></span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>重启雷池生效：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker compose down</span><br><span class="line">docker compose up -d</span><br></pre></td></tr></table></figure><h2 id="修改雷池默认端口"><a href="#修改雷池默认端口" class="headerlink" title="修改雷池默认端口"></a>修改雷池默认端口</h2><p>雷池和 apisix 默认都监听 9443 端口，如果在同一台机器上安装，需要修改雷池的默认端口。</p><p>在雷池的安装目录下，有一个名为 .env 的隐藏文件，其中的 MGT_PORT 字段，修改这里后使用上面的方法再重启雷池即可生效。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /data/safeline</span><br><span class="line">vim .env</span><br></pre></td></tr></table></figure><h2 id="在APISIX中绑定雷池"><a href="#在APISIX中绑定雷池" class="headerlink" title="在APISIX中绑定雷池"></a>在APISIX中绑定雷池</h2><p>调用 apisix 的 api，设置雷池检测引擎的地址，供 apisix 调用，参考以下请求：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">curl &lt;http://127.0.0.1:9180/apisix/admin/plugin_metadata/chaitin-waf&gt; -H &#x27;X-API-KEY: edd1c9f034335f136f87ad84b625c8f1&#x27; -X PUT -d &#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;nodes&quot;:[</span><br><span class="line">     &#123;</span><br><span class="line">       &quot;host&quot;: &quot;127.0.0.1&quot;,</span><br><span class="line">       &quot;port&quot;: 8000</span><br><span class="line">     &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;&#x27;</span><br></pre></td></tr></table></figure><p>调用 apisix 的 api，设置一条路由，参考以下请求：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">curl &lt;http://127.0.0.1:9180/apisix/admin/routes/1&gt; -H &#x27;X-API-KEY: edd1c9f034335f136f87ad84b625c8f1&#x27; -X PUT -d &#x27;</span><br><span class="line">&#123;</span><br><span class="line">   &quot;uri&quot;: &quot;/*&quot;,</span><br><span class="line">   &quot;plugins&quot;: &#123;</span><br><span class="line">       &quot;chaitin-waf&quot;: &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">   &quot;upstream&quot;: &#123;</span><br><span class="line">       &quot;type&quot;: &quot;roundrobin&quot;,</span><br><span class="line">       &quot;nodes&quot;: &#123;</span><br><span class="line">           &quot;127.0.0.1:80&quot;: 1</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;&#x27;</span><br></pre></td></tr></table></figure><h2 id="测试防护效果"><a href="#测试防护效果" class="headerlink" title="测试防护效果"></a>测试防护效果</h2><p>在请求中加入注入攻击参数：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl &#x27;&lt;http://127.0.0.1:9080/&gt;&#x27; -d &#x27;a=1 and 1=1&#x27;</span><br></pre></td></tr></table></figure><p>得到结果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;code&quot;: 403,</span><br><span class="line">  &quot;success&quot;: false,</span><br><span class="line">  &quot;message&quot;: &quot;blocked by Chaitin SafeLine Web Application Firewall&quot;,</span><br><span class="line">  &quot;event_id&quot;: &quot;18e0f220f7a94127acb21ad3c1b4ac47&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打开雷池的控制台界面，可以看到雷池记录了完整的攻击信息。</p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>APISIX管理请求需密钥授权，在生产环境中使用时务必修改默认</p><p>‘X-API-KEY: edd1c9f034335f136f87ad84b625c8f1’</p><p>配置文件路径：</p><p>apisix-docker&#x2F;example&#x2F;apisix_conf&#x2F;conf.yaml</p>]]></content>
    
    
    <summary type="html">Apache APISIX 是一个开源的、动态的、实时的高性能云原生 API 网关，由 Apache 软件基金会支持。它设计用于处理服务之间的东西向流量（即微服务间的通信）以及传统的南北向流量（客户端到服务端请求）。APISIX 提供了诸如负载均衡、动态上游、金丝雀发布、服务熔断、身份认证和可观测性等丰富的流量管理功能。此外，APISIX 还支持作为 K8s Ingress Controller 使用，能够处理进入 Kubernetes 集群的流量。</summary>
    
    
    
    <category term="网关" scheme="https://blog.ceobe.cn/categories/%E7%BD%91%E5%85%B3/"/>
    
    
    <category term="API网关" scheme="https://blog.ceobe.cn/tags/API%E7%BD%91%E5%85%B3/"/>
    
    <category term="Docker" scheme="https://blog.ceobe.cn/tags/Docker/"/>
    
    <category term="API路由" scheme="https://blog.ceobe.cn/tags/API%E8%B7%AF%E7%94%B1/"/>
    
    <category term="负载均衡" scheme="https://blog.ceobe.cn/tags/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    
    <category term="服务熔断" scheme="https://blog.ceobe.cn/tags/%E6%9C%8D%E5%8A%A1%E7%86%94%E6%96%AD/"/>
    
    <category term="健康检查" scheme="https://blog.ceobe.cn/tags/%E5%81%A5%E5%BA%B7%E6%A3%80%E6%9F%A5/"/>
    
    <category term="插件化架构" scheme="https://blog.ceobe.cn/tags/%E6%8F%92%E4%BB%B6%E5%8C%96%E6%9E%B6%E6%9E%84/"/>
    
    <category term="动态配置" scheme="https://blog.ceobe.cn/tags/%E5%8A%A8%E6%80%81%E9%85%8D%E7%BD%AE/"/>
    
    <category term="OAuth" scheme="https://blog.ceobe.cn/tags/OAuth/"/>
    
    <category term="API性能分析" scheme="https://blog.ceobe.cn/tags/API%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/"/>
    
    <category term="分布式追踪" scheme="https://blog.ceobe.cn/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E8%BF%BD%E8%B8%AA/"/>
    
    <category term="服务发现" scheme="https://blog.ceobe.cn/tags/%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>卸载macOS操作系统中的Nessus服务</title>
    <link href="https://blog.ceobe.cn/Uninstall%20Nessus%20on%20macOS/"/>
    <id>https://blog.ceobe.cn/Uninstall%20Nessus%20on%20macOS/</id>
    <published>2023-12-21T07:38:14.000Z</published>
    <updated>2024-02-01T02:58:28.862Z</updated>
    
    <content type="html"><![CDATA[<h1 id="卸载macOS操作系统中的Nessus服务"><a href="#卸载macOS操作系统中的Nessus服务" class="headerlink" title="卸载macOS操作系统中的Nessus服务"></a>卸载macOS操作系统中的Nessus服务</h1><h2 id="停止Nessus服务"><a href="#停止Nessus服务" class="headerlink" title="停止Nessus服务"></a>停止Nessus服务</h2><blockquote><ol><li><p>打开“系统设置”，点击“Nessus”图标；</p><p><img data-src="/Uninstall%20Nessus%20on%20macOS/image-20231221132838100.png" alt="image-20231221132838100"></p></li><li><p>点击锁按扭进行更改，输入管理员密码，点击“StopNessus”按扭；</p></li><li><p>等待服务停止。</p></li></ol></blockquote><h2 id="删除Nessus服务文件"><a href="#删除Nessus服务文件" class="headerlink" title="删除Nessus服务文件"></a>删除Nessus服务文件</h2><p>​删除Nessus相关目录中的文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo rm /Library/Nessus </span><br><span class="line">sudo rm /Library/LaunchDaemons/com.tenablesecurity.nessusd.plist </span><br><span class="line">sudo rm /Library/PreferencePanes/Nessus Preferences.prefPane </span><br><span class="line">sudo rm /Applications/Nessus</span><br></pre></td></tr></table></figure><h2 id="移除Nessus服务"><a href="#移除Nessus服务" class="headerlink" title="移除Nessus服务"></a>移除Nessus服务</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo launchctl remove com.tenablesecurity.nessusd</span><br></pre></td></tr></table></figure><ul><li><p>移除“系统设置”中的Nessus按扭</p><p><img data-src="/Uninstall%20Nessus%20on%20macOS/image-20231221135722835.png" alt="image-20231221135722835"></p></li></ul><blockquote><p>参考链接：<a href="https://docs.tenable.com/nessus/Content/RemoveNessusMacOS.htm">https://docs.tenable.com/nessus/Content/RemoveNessusMacOS.htm</a></p></blockquote>]]></content>
    
    
    <summary type="html">执行以下步骤停止并删除macOS中的Nessus服务。</summary>
    
    
    
    <category term="issue" scheme="https://blog.ceobe.cn/categories/issue/"/>
    
    
    <category term="Nessus" scheme="https://blog.ceobe.cn/tags/Nessus/"/>
    
    <category term="漏洞扫描" scheme="https://blog.ceobe.cn/tags/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F/"/>
    
    <category term="安全合规" scheme="https://blog.ceobe.cn/tags/%E5%AE%89%E5%85%A8%E5%90%88%E8%A7%84/"/>
    
  </entry>
  
  <entry>
    <title>Docker初始化环境</title>
    <link href="https://blog.ceobe.cn/dockerinit/"/>
    <id>https://blog.ceobe.cn/dockerinit/</id>
    <published>2023-12-05T01:27:59.000Z</published>
    <updated>2024-02-01T02:56:43.121Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker安装和使用"><a href="#Docker安装和使用" class="headerlink" title="Docker安装和使用"></a>Docker安装和使用</h1><h2 id="系统要求"><a href="#系统要求" class="headerlink" title="- 系统要求"></a>- 系统要求</h2><p>在开始安装Docker之前，请确保操作系统满足以下基本要求：</p><ul><li>64位Linux操作系统（以 Alibaba Cloud Linux3 为例）</li><li>至少2GB的RAM（推荐 4GB 或更多）</li></ul><p><img data-src="/dockerinit/systemversion.png" alt="systemversion"></p><p>*Alibaba Cloud Linux 3兼容CentOS 8、RHEL 8生态，默认搭载阿里云CLI。</p><h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="- 安装Docker"></a>- 安装Docker</h2><ul><li>设置Docker官方源：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils</span><br><span class="line">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><p><img data-src="/dockerinit/source.png" alt="source"></p><ul><li>安装Docker Engine：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br></pre></td></tr></table></figure><p><img data-src="/dockerinit/docker.png" alt="docker"></p><ul><li>查看已安装Docker版本：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker -v</span><br></pre></td></tr></table></figure><p><img data-src="/dockerinit/ver.png" alt="ver"></p><ul><li>启动Docker服务：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><p><img data-src="/dockerinit/start.png" alt="start"></p><ul><li>注册Docker服务（开机启动）：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable docker</span><br></pre></td></tr></table></figure><ul><li>查看所有容器：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><ul><li>拉取镜像：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull &lt;image&gt;:&lt;tag&gt;</span><br></pre></td></tr></table></figure><h2 id="（可选）安装Docker-Compose"><a href="#（可选）安装Docker-Compose" class="headerlink" title="- （可选）安装Docker Compose"></a>- （可选）安装Docker Compose</h2><p>上述步骤包含Docker Compose组件，如需单独安装，可执行以下命令。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum update</span><br><span class="line">sudo yum install docker-compose-plugin</span><br></pre></td></tr></table></figure><p><img data-src="/dockerinit/compose.png" alt="compose"></p><p>*Docker文档引用并描述Compose V2的功能。自2023年7月起，Compose V1停止接收更新，不再在新的Docker Desktop版本中。Compose V2已经取代了它，现在集成到所有当前的Docker Desktop版本中。</p><h2 id="（可选）使用阿里云提供的源安装Docker"><a href="#（可选）使用阿里云提供的源安装Docker" class="headerlink" title="- （可选）使用阿里云提供的源安装Docker"></a>- （可选）使用阿里云提供的源安装Docker</h2><ul><li><p>运行以下命令，添加docker-ce的dnf源。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf config-manager --add-repo=https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure></li><li><p>运行以下命令，安装Alibaba Cloud Linux 3专用的dnf源兼容插件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf -y install dnf-plugin-releasever-adapter --repo alinux3-plus</span><br></pre></td></tr></table></figure></li><li><p>运行以下命令，安装Docker。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf -y install docker-ce --nobest</span><br></pre></td></tr></table></figure><ul><li><p>如果执行命令时，出现类似如下的报错信息，需要执行<code>sudo dnf clean packages</code>清除软件包缓存后，重新安装docker-ce。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(8-9/12): docker-ce-24.0.7-1.el8.x86_64.rpm 38% [================- ] 8.2 MB/s | 38 MB 00:07 ETA</span><br><span class="line">The downloaded packages were saved in cache until the next successful transaction.</span><br><span class="line">You can remove cached packages by executing &#x27;dnf clean packages&#x27;.</span><br><span class="line">Error: Error downloading packages:</span><br><span class="line">containerd.io-1.6.26-3.1.el8.x86_64: Cannot download, all mirrors were already tried without success</span><br></pre></td></tr></table></figure></li><li><p>如果执行命令时，出现类似下图的报错信息，您需要注释&#x2F;etc&#x2F;yum.repos.d下的CentOS源，注释后重新安装docker-ce。</p><p><img data-src="/dockerinit/p477222.png" alt="p477222"></p></li></ul></li><li><p>管理Docker守护进程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker     #运行Docker守护进程</span><br><span class="line">sudo systemctl stop docker      #停止Docker守护进程</span><br><span class="line">sudo systemctl restart docker   #重启Docker守护进程</span><br><span class="line">sudo systemctl enable docker    #设置Docker开机自启动</span><br><span class="line">sudo systemctl status docker    #查看Docker的运行状态</span><br></pre></td></tr></table></figure></li><li><p>修改标签。如果镜像名称较长，您可以修改镜像标签以便记忆区分。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker tag registry.cn-hangzhou.aliyuncs.com/lxepoo/apache-php5:latest aliweb:v1</span><br></pre></td></tr></table></figure></li><li><p>查看已有镜像。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker images</span><br></pre></td></tr></table></figure></li><li><p>强制删除镜像。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker rmi -f registry.cn-hangzhou.aliyuncs.com/lxepoo/apache-php5</span><br></pre></td></tr></table></figure></li><li><p>将容器做成镜像。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker commit &lt;容器ID或容器名&gt; &lt;仓库名&gt;:&lt;标签&gt;</span><br></pre></td></tr></table></figure></li><li><p>将镜像推送到镜像仓库，如DockerRegistry。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker push &lt;仓库名&gt;:&lt;标签&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="（更新）Debian-Ubuntu环境下安装Docker"><a href="#（更新）Debian-Ubuntu环境下安装Docker" class="headerlink" title="- （更新）Debian&#x2F;Ubuntu环境下安装Docker"></a>- （更新）Debian&#x2F;Ubuntu环境下安装Docker</h2><ul><li>执行以下命令卸载旧版本&#x2F;冲突安装包，如podman、docker-compose（v1）。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do sudo apt-get remove $pkg; done</span><br></pre></td></tr></table></figure><ul><li>设置apt源</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Add Docker<span class="string">&#x27;s official GPG key:</span></span></span><br><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get install ca-certificates curl gnupg</span><br><span class="line"></span><br><span class="line">sudo install -m 0755 -d /etc/apt/keyrings</span><br><span class="line"></span><br><span class="line">curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg</span><br><span class="line"></span><br><span class="line">sudo chmod a+r /etc/apt/keyrings/docker.gpg</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Add the repository to Apt sources:</span></span></span><br><span class="line">echo \</span><br><span class="line">  &quot;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \</span><br><span class="line"><span class="meta prompt_">  $</span><span class="language-bash"><span class="string">(. /etc/os-release &amp;&amp; echo &quot;$VERSION_CODENAME&quot;) stable&quot; | \</span></span></span><br><span class="line"><span class="string"><span class="language-bash">  sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span></span></span><br><span class="line">  </span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><ul><li>安装Docker</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Docker是一个开源的应用容器引擎，它允许开发者打包他们的应用以及应用的依赖包到一个可移植的容器中，然后发布到任何流行的Linux机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口（类似iPhone的app）而且更轻量级。Docker在云计算和DevOps领域非常受欢迎，因为它可以简化应用的部署和扩展。在这篇博客中，我将向您展示如何在您的系统上安装Docker。</summary>
    
    
    
    <category term="容器" scheme="https://blog.ceobe.cn/categories/%E5%AE%B9%E5%99%A8/"/>
    
    
    <category term="Docker" scheme="https://blog.ceobe.cn/tags/Docker/"/>
    
    <category term="容器编排" scheme="https://blog.ceobe.cn/tags/%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92/"/>
    
    <category term="微服务架构" scheme="https://blog.ceobe.cn/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/"/>
    
    <category term="镜像版本控制" scheme="https://blog.ceobe.cn/tags/%E9%95%9C%E5%83%8F%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
    <category term="虚拟化技术" scheme="https://blog.ceobe.cn/tags/%E8%99%9A%E6%8B%9F%E5%8C%96%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Dockerfile" scheme="https://blog.ceobe.cn/tags/Dockerfile/"/>
    
    <category term="Registry" scheme="https://blog.ceobe.cn/tags/Registry/"/>
    
    <category term="Compose" scheme="https://blog.ceobe.cn/tags/Compose/"/>
    
    <category term="Container" scheme="https://blog.ceobe.cn/tags/Container/"/>
    
    <category term="容器镜像推送" scheme="https://blog.ceobe.cn/tags/%E5%AE%B9%E5%99%A8%E9%95%9C%E5%83%8F%E6%8E%A8%E9%80%81/"/>
    
  </entry>
  
  <entry>
    <title>Python图像识别自动化脚本</title>
    <link href="https://blog.ceobe.cn/pythoncvscript/"/>
    <id>https://blog.ceobe.cn/pythoncvscript/</id>
    <published>2023-12-01T07:36:52.000Z</published>
    <updated>2024-02-01T03:00:06.528Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ol><li>安装python3.4以上版本，并配置环境变量<br><a href="https://www.runoob.com/python3/python3-install.html">&gt;python安装教程&lt;</a></li><li>安装依赖包<br><code>pip install pyperclip  pip install xlrd  pip install pyautogui==0.9.50  pip install opencv-python  pip install pillow </code></li><li>把每一步要操作的图标、区域截图保存至本文件夹  png格式（注意如果同屏有多个相同图标，回默认找到最左上的一个，因此怎么截图，截多大的区域，是个学问，如输入框只截中间空白部分肯定是不行的，宗旨就是“唯一”）</li><li>在cmd.xls 的sheet1 中，配置每一步的指令，如指令类型1234  对应的内容填截图文件名，指令5对应的内容是等待时长（单位秒） 指令6对应的内容是滚轮滚动的距离，正数表示向上滚，负数表示向下滚</li><li>保存文件</li><li>双击waterRPA.py打开程序，按1表示excel中的指令执行一次，按2表示无限重复执行直到程序关闭</li></ol></blockquote><ul><li><!--nore--></li><li>如果报错不能运行用vscode运行看看报错内容</li><li>开始程序后请将程序框最小化，不然程序框挡住的区域是无法识别和操作的</li><li>如果程序开始后因为你选择了无限重复而鼠标被占用停不下来，alt+F4吧~<br><a href="https://blog.csdn.net/qingfengxd1/article/details/108270159">&gt;二次开发和优化参考pyautogui库用法&lt;</a></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pyautogui</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> xlrd</span><br><span class="line"><span class="keyword">import</span> pyperclip</span><br><span class="line"></span><br><span class="line">[[定义鼠标事件]]</span><br><span class="line">[[pyautogui库其他用法]] [https://blog.csdn.net/qingfengxd1/article/details/<span class="number">108270159</span>](https://blog.csdn.net/qingfengxd1/article/details/<span class="number">108270159</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mouseClick</span>(<span class="params">clickTimes,lOrR,img,reTry</span>):</span><br><span class="line">    <span class="keyword">if</span> reTry == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            location=pyautogui.locateCenterOnScreen(img,confidence=<span class="number">0.9</span>)</span><br><span class="line">            <span class="keyword">if</span> location <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">             pyautogui.click(location.x,location.y,clicks=clickTimes,interval=<span class="number">0.2</span>,duration=<span class="number">0.2</span>,button=lOrR)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;未找到匹配图片,0.1秒后重试&quot;</span>)</span><br><span class="line">            time.sleep(<span class="number">0.1</span>)</span><br><span class="line">    <span class="keyword">elif</span> reTry == -<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            location=pyautogui.locateCenterOnScreen(img,confidence=<span class="number">0.9</span>)</span><br><span class="line">            <span class="keyword">if</span> location <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:                pyautogui.click(location.x,location.y,clicks=clickTimes,interval=<span class="number">0.2</span>,duration=<span class="number">0.2</span>,button=lOrR)</span><br><span class="line">            time.sleep(<span class="number">0.1</span>)</span><br><span class="line">    <span class="keyword">elif</span> reTry &gt; <span class="number">1</span>:</span><br><span class="line">        i = <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; reTry + <span class="number">1</span>:</span><br><span class="line">            location=pyautogui.locateCenterOnScreen(img,confidence=<span class="number">0.9</span>)</span><br><span class="line">            <span class="keyword">if</span> location <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:               pyautogui.click(location.x,location.y,clicks=clickTimes,interval=<span class="number">0.2</span>,duration=<span class="number">0.2</span>,button=lOrR)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;重复&quot;</span>)</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            time.sleep(<span class="number">0.1</span>)</span><br><span class="line"><span class="comment"># 数据检查</span></span><br><span class="line"><span class="comment"># cmdType.value  1.0 左键单击    2.0 左键双击  3.0 右键单击  4.0 输入  5.0 等待  6.0 滚轮</span></span><br><span class="line"><span class="comment"># ctype     空：0</span></span><br><span class="line"><span class="comment">#           字符串：1</span></span><br><span class="line"><span class="comment">#           数字：2</span></span><br><span class="line"><span class="comment">#           日期：3</span></span><br><span class="line"><span class="comment">#           布尔：4</span></span><br><span class="line"><span class="comment">#           error：5</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dataCheck</span>(<span class="params">sheet1</span>):</span><br><span class="line">    checkCmd = <span class="literal">True</span></span><br><span class="line">    [[行数检查]]</span><br><span class="line">    <span class="keyword">if</span> sheet1.nrows&lt;<span class="number">2</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;没数据啊哥&quot;</span>)</span><br><span class="line">        checkCmd = <span class="literal">False</span></span><br><span class="line">    [[每行数据检查]]</span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; sheet1.nrows:</span><br><span class="line">        <span class="comment"># 第1列 操作类型检查</span></span><br><span class="line">        cmdType = sheet1.row(i)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">if</span> cmdType.ctype != <span class="number">2</span> <span class="keyword">or</span> (cmdType.value != <span class="number">1.0</span> <span class="keyword">and</span> cmdType.value != <span class="number">2.0</span> <span class="keyword">and</span> cmdType.value != <span class="number">3.0</span></span><br><span class="line">        <span class="keyword">and</span> cmdType.value != <span class="number">4.0</span> <span class="keyword">and</span> cmdType.value != <span class="number">5.0</span> <span class="keyword">and</span> cmdType.value != <span class="number">6.0</span>):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;第&#x27;</span>,i+<span class="number">1</span>,<span class="string">&quot;行,第1列数据有毛病&quot;</span>)</span><br><span class="line">            checkCmd = <span class="literal">False</span></span><br><span class="line">        <span class="comment"># 第2列 内容检查</span></span><br><span class="line">        cmdValue = sheet1.row(i)[<span class="number">1</span>]</span><br><span class="line">        <span class="comment"># 读图点击类型指令，内容必须为字符串类型</span></span><br><span class="line">        <span class="keyword">if</span> cmdType.value ==<span class="number">1.0</span> <span class="keyword">or</span> cmdType.value == <span class="number">2.0</span> <span class="keyword">or</span> cmdType.value == <span class="number">3.0</span>:</span><br><span class="line">            <span class="keyword">if</span> cmdValue.ctype != <span class="number">1</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;第&#x27;</span>,i+<span class="number">1</span>,<span class="string">&quot;行,第2列数据有毛病&quot;</span>)</span><br><span class="line">                checkCmd = <span class="literal">False</span></span><br><span class="line">        <span class="comment"># 输入类型，内容不能为空</span></span><br><span class="line">        <span class="keyword">if</span> cmdType.value == <span class="number">4.0</span>:</span><br><span class="line">            <span class="keyword">if</span> cmdValue.ctype == <span class="number">0</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;第&#x27;</span>,i+<span class="number">1</span>,<span class="string">&quot;行,第2列数据有毛病&quot;</span>)</span><br><span class="line">                checkCmd = <span class="literal">False</span></span><br><span class="line">        <span class="comment"># 等待类型，内容必须为数字</span></span><br><span class="line">        <span class="keyword">if</span> cmdType.value == <span class="number">5.0</span>:</span><br><span class="line">            <span class="keyword">if</span> cmdValue.ctype != <span class="number">2</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;第&#x27;</span>,i+<span class="number">1</span>,<span class="string">&quot;行,第2列数据有毛病&quot;</span>)</span><br><span class="line">                checkCmd = <span class="literal">False</span></span><br><span class="line">        <span class="comment"># 滚轮事件，内容必须为数字</span></span><br><span class="line">        <span class="keyword">if</span> cmdType.value == <span class="number">6.0</span>:</span><br><span class="line">            <span class="keyword">if</span> cmdValue.ctype != <span class="number">2</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;第&#x27;</span>,i+<span class="number">1</span>,<span class="string">&quot;行,第2列数据有毛病&quot;</span>)</span><br><span class="line">                checkCmd = <span class="literal">False</span></span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> checkCmd</span><br><span class="line">[[任务]]</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mainWork</span>(<span class="params">img</span>):</span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; sheet1.nrows:</span><br><span class="line">        [[取本行指令的操作类型]]</span><br><span class="line">        cmdType = sheet1.row(i)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">if</span> cmdType.value == <span class="number">1.0</span>:</span><br><span class="line">            [[取图片名称]]</span><br><span class="line">            img = sheet1.row(i)[<span class="number">1</span>].value</span><br><span class="line">            reTry = <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> sheet1.row(i)[<span class="number">2</span>].ctype == <span class="number">2</span> <span class="keyword">and</span> sheet1.row(i)[<span class="number">2</span>].value != <span class="number">0</span>:</span><br><span class="line">                reTry = sheet1.row(i)[<span class="number">2</span>].value</span><br><span class="line">            mouseClick(<span class="number">1</span>,<span class="string">&quot;left&quot;</span>,img,reTry)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;单击左键&quot;</span>,img)</span><br><span class="line">        [[<span class="number">2</span>代表双击左键]]</span><br><span class="line">        <span class="keyword">elif</span> cmdType.value == <span class="number">2.0</span>:</span><br><span class="line">            [[取图片名称]]</span><br><span class="line">            img = sheet1.row(i)[<span class="number">1</span>].value</span><br><span class="line">            [[取重试次数]]</span><br><span class="line">            reTry = <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> sheet1.row(i)[<span class="number">2</span>].ctype == <span class="number">2</span> <span class="keyword">and</span> sheet1.row(i)[<span class="number">2</span>].value != <span class="number">0</span>:</span><br><span class="line">                reTry = sheet1.row(i)[<span class="number">2</span>].value</span><br><span class="line">            mouseClick(<span class="number">2</span>,<span class="string">&quot;left&quot;</span>,img,reTry)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;双击左键&quot;</span>,img)</span><br><span class="line">        [[<span class="number">3</span>代表右键]]</span><br><span class="line">        <span class="keyword">elif</span> cmdType.value == <span class="number">3.0</span>:</span><br><span class="line">            [[取图片名称]]</span><br><span class="line">            img = sheet1.row(i)[<span class="number">1</span>].value</span><br><span class="line">            [[取重试次数]]</span><br><span class="line">            reTry = <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> sheet1.row(i)[<span class="number">2</span>].ctype == <span class="number">2</span> <span class="keyword">and</span> sheet1.row(i)[<span class="number">2</span>].value != <span class="number">0</span>:</span><br><span class="line">                reTry = sheet1.row(i)[<span class="number">2</span>].value</span><br><span class="line">            mouseClick(<span class="number">1</span>,<span class="string">&quot;right&quot;</span>,img,reTry)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;右键&quot;</span>,img)</span><br><span class="line">        [[<span class="number">4</span>代表输入]]</span><br><span class="line">        <span class="keyword">elif</span> cmdType.value == <span class="number">4.0</span>:</span><br><span class="line">            inputValue = sheet1.row(i)[<span class="number">1</span>].value</span><br><span class="line">            pyperclip.copy(inputValue)</span><br><span class="line">            pyautogui.hotkey(<span class="string">&#x27;ctrl&#x27;</span>,<span class="string">&#x27;v&#x27;</span>)</span><br><span class="line">            time.sleep(<span class="number">0.5</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;输入:&quot;</span>,inputValue)                                        </span><br><span class="line">        [[<span class="number">5</span>代表等待]]</span><br><span class="line">        <span class="keyword">elif</span> cmdType.value == <span class="number">5.0</span>:</span><br><span class="line">            [[取图片名称]]</span><br><span class="line">            waitTime = sheet1.row(i)[<span class="number">1</span>].value</span><br><span class="line">            time.sleep(waitTime)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;等待&quot;</span>,waitTime,<span class="string">&quot;秒&quot;</span>)</span><br><span class="line">        [[<span class="number">6</span>代表滚轮]]</span><br><span class="line">        <span class="keyword">elif</span> cmdType.value == <span class="number">6.0</span>:</span><br><span class="line">            [[取图片名称]]</span><br><span class="line">            scroll = sheet1.row(i)[<span class="number">1</span>].value</span><br><span class="line">            pyautogui.scroll(<span class="built_in">int</span>(scroll))</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;滚轮滑动&quot;</span>,<span class="built_in">int</span>(scroll),<span class="string">&quot;距离&quot;</span>)                      </span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    file = <span class="string">&#x27;cmd.xls&#x27;</span></span><br><span class="line">    [[打开文件]]</span><br><span class="line">    wb = xlrd.open_workbook(filename=file)</span><br><span class="line">    [[通过索引获取表格sheet页]]</span><br><span class="line">    sheet1 = wb.sheet_by_index(<span class="number">0</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;欢迎使用不高兴就喝水牌RPA~&#x27;</span>)</span><br><span class="line">    [[数据检查]]</span><br><span class="line">    checkCmd = dataCheck(sheet1)</span><br><span class="line">    <span class="keyword">if</span> checkCmd:</span><br><span class="line">        key=<span class="built_in">input</span>(<span class="string">&#x27;选择功能: 1.做一次 2.循环到死 \n&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> key==<span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            [[循环拿出每一行指令]]</span><br><span class="line">            mainWork(sheet1)</span><br><span class="line">        <span class="keyword">elif</span> key==<span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                mainWork(sheet1)</span><br><span class="line">                time.sleep(<span class="number">0.1</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;等待0.1秒&quot;</span>)    </span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;输入有误或者已经退出!&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img data-src="https://halo-bak.oss-cn-hangzhou.aliyuncs.com/yfsutlfv.jpg" alt="yfsutlfv.jpg"></p>]]></content>
    
    
    <summary type="html">Python图像识别自动化脚本。</summary>
    
    
    
    
    <category term="Python" scheme="https://blog.ceobe.cn/tags/Python/"/>
    
    <category term="RPA" scheme="https://blog.ceobe.cn/tags/RPA/"/>
    
    <category term="waterRPA" scheme="https://blog.ceobe.cn/tags/waterRPA/"/>
    
    <category term="自动化" scheme="https://blog.ceobe.cn/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Pytorch天坑</title>
    <link href="https://blog.ceobe.cn/pytorchcover/"/>
    <id>https://blog.ceobe.cn/pytorchcover/</id>
    <published>2023-12-01T07:36:25.000Z</published>
    <updated>2024-02-01T02:59:25.272Z</updated>
    
    <content type="html"><![CDATA[<h1 id="【错误】-Torch-not-compiled-with-CUDA-enabled解决方法"><a href="#【错误】-Torch-not-compiled-with-CUDA-enabled解决方法" class="headerlink" title="【错误】# Torch not compiled with CUDA enabled解决方法"></a>【错误】# Torch not compiled with CUDA enabled解决方法</h1><span id="more"></span><blockquote><p>1-测试是否有CUDA</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="built_in">print</span>（torch.__version__）</span><br><span class="line"><span class="built_in">print</span>(torch.cuda.is_available())</span><br></pre></td></tr></table></figure><blockquote><p>2-结果打印False，查看显卡驱动程序版本【右键- NVIDIA控制面板-系统信息-显示】</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvcc <span class="literal">-v</span></span><br></pre></td></tr></table></figure><p><a href="https://developer.nvidia.com/cuda-toolkit-archive">&gt;下载CUDA&lt;</a></p><blockquote><p>3-测试Pytorch可用</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="built_in">print</span>(torch.__version__)</span><br><span class="line"><span class="built_in">print</span>(torch.cuda.is_available)</span><br></pre></td></tr></table></figure><p>*<em>注：若返回结果类似【2.0.1+cpu】，则安装PyTorch版本是CPU版，需要卸载重新安装</em></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip uninstall torch torchvision</span><br></pre></td></tr></table></figure><p>  <a href="https://pytorch.org/get-started/locally/#supported-windows-distributions">&gt;PyTorch&lt;</a></p>]]></content>
    
    
    <summary type="html">Torch not compiled with CUDA enabled解决方法</summary>
    
    
    
    <category term="issue" scheme="https://blog.ceobe.cn/categories/issue/"/>
    
    
    <category term="Python" scheme="https://blog.ceobe.cn/tags/Python/"/>
    
    <category term="PyTorch" scheme="https://blog.ceobe.cn/tags/PyTorch/"/>
    
    <category term="CUDA" scheme="https://blog.ceobe.cn/tags/CUDA/"/>
    
  </entry>
  
  <entry>
    <title>Typora的Markdown语法</title>
    <link href="https://blog.ceobe.cn/typoraMarkdown/"/>
    <id>https://blog.ceobe.cn/typoraMarkdown/</id>
    <published>2023-12-01T07:35:16.000Z</published>
    <updated>2024-02-01T02:58:03.756Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p><strong>Markdown</strong> 由 <a href="http://daringfireball.net/">Daring Fireball</a> 创建，原始指南在 <a href="http://daringfireball.net/projects/markdown/syntax">这里</a>。但是，它的语法因不同的解析器或编辑器而异。<strong>Typora</strong>正在使用 <a href="https://help.github.com/articles/github-flavored-markdown/">GitHub Flavored Markdown</a>。</p><h2 id="块元素"><a href="#块元素" class="headerlink" title="块元素"></a>块元素</h2><h3 id="段落和换行符"><a href="#段落和换行符" class="headerlink" title="段落和换行符"></a>段落和换行符</h3><p>段落只是一行或多行连续的文本。在 markdown 源代码中，段落由多个空行分隔。在Typora中，您只需按下 <code>Return</code> 即可创建新段落。</p><p>按 <code>Shift</code> + <code>Return</code> 可创建单个换行符。但是，大多数 markdown 解析器将忽略单行中断，要使其他 markdown 解析器识别您的换行符，可以在行尾留下两个空格，或者插入 <code>&lt;br/&gt;</code>.</p><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>标题在行的开头使用1-6个＃字符，对应于标题级别1-6。例如：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 这是一级标题</span><br><span class="line"></span><br><span class="line">## 这是二级标题</span><br><span class="line"></span><br><span class="line">###### 这是六级标题</span><br></pre></td></tr></table></figure><p>在typora中，输入’＃’后跟标题内容，按下 <code>Return</code> 键将创建标题。</p><h3 id="引用文字"><a href="#引用文字" class="headerlink" title="引用文字"></a>引用文字</h3><p>Markdown 使用电子邮件样式&gt;字符进行块引用。它们表示为：</p><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript">这是一个有两段的块引用。这是第一段。</span></span><br><span class="line"><span class="meta prompt_">&gt;</span></span><br><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript">这是第二段。<span class="title class_">Vestibulum</span> enim wisi, viverra nec, fringilla <span class="keyword">in</span>, laoreet vitae, risus.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript">这是另一个只有一个段落的块引用。有三个空行分隔两个块引用。</span></span><br></pre></td></tr></table></figure><p>在typora中，只需输入’&gt;’后跟引用内容即可生成块引用。Typora将为您插入正确的“&gt;”或换行符。通过添加额外级别的“&gt;”允许在块引用内嵌入另一个块引用。</p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>输入 <code>* list item 1</code> 将创建一个无序列表，该 <code>*</code> 符号可以替换为 <code>+</code> 或 <code>-</code>.</p><p>输入 <code>1. list item 1</code> 将创建一个有序列表，其 markdown 源代码如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">## 无序列表</span></span><br><span class="line"><span class="bullet">*</span>   红色</span><br><span class="line"><span class="bullet">*</span>   绿色</span><br><span class="line"><span class="bullet">*</span>   蓝色</span><br><span class="line"></span><br><span class="line"><span class="section">## 有序列表</span></span><br><span class="line"><span class="bullet">1.</span>  红色</span><br><span class="line"><span class="bullet">2.</span> 绿色</span><br><span class="line"><span class="bullet">3.</span>蓝色</span><br></pre></td></tr></table></figure><h3 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h3><p>任务列表是标记为[ ]或[x]（未完成或完成）的项目的列表。例如：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- <span class="selector-attr">[ ]</span> 这是一个任务列表项</span><br><span class="line">- <span class="selector-attr">[ ]</span> 需要在前面使用列表的语法</span><br><span class="line">- <span class="selector-attr">[ ]</span> <span class="attribute">normal</span> **formatting**, @mentions, <span class="number">#1234</span> refs</span><br><span class="line">- <span class="selector-attr">[ ]</span> 未完成</span><br><span class="line">- <span class="selector-attr">[x]</span> 完成</span><br></pre></td></tr></table></figure><p>您可以通过单击项目前面的复选框来更改完成&#x2F;未完成状态。</p><h3 id="（栅栏式）代码块"><a href="#（栅栏式）代码块" class="headerlink" title="（栅栏式）代码块"></a>（栅栏式）代码块</h3><p>Typora仅支持 Github Flavored Markdown 中的栅栏式代码块。不支持 markdown 中的原始代码块。</p><p>使用栅栏式代码块很简单：输入&#96;&#96;&#96;之后输入一个可选的语言标识符，然后按<code>return</code>键后输入代码，我们将通过语法高亮显示它：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">这是一个例子：</span><br><span class="line"></span><br><span class="line">```</span><br><span class="line">function test() &#123;</span><br><span class="line">  console.log(&quot;notice the blank line before this function?&quot;);</span><br><span class="line">&#125;</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">语法高亮：</span><br><span class="line">```ruby</span><br><span class="line">require &#x27;redcarpet&#x27;</span><br><span class="line">markdown = Redcarpet.new(&quot;Hello World!&quot;)</span><br><span class="line">puts markdown.to_html</span><br><span class="line">```</span><br></pre></td></tr></table></figure><h3 id="数学公式块"><a href="#数学公式块" class="headerlink" title="数学公式块"></a>数学公式块</h3><p>您可以使用 <strong>MathJax</strong> 渲染 <em>LaTeX</em> 数学表达式。</p><p>输入 <code>$$</code>, 然后按“return”键将触发一个接受<em>Tex &#x2F; LaTex</em>源代码的输入区域。以下是一个例子：<strong>V</strong>1×<strong>V</strong>2&#x3D;∣∣∣∣∣∣<strong>i</strong>∂X∂u∂X∂v<strong>j</strong>∂Y∂u∂Y∂v<strong>k</strong>00∣∣∣∣∣∣</p><p>在 markdown 源文件中，数学公式块是由’$$’标记包装的 <em>LaTeX</em> 表达式：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line"><span class="string">\mathbf&#123;V&#125;_1</span> <span class="string">\times</span> <span class="string">\mathbf&#123;V&#125;_2</span> =  <span class="string">\begin&#123;vmatrix&#125;</span> </span><br><span class="line"><span class="string">\mathbf&#123;i&#125;</span> &amp; <span class="string">\mathbf&#123;j&#125;</span> &amp; <span class="string">\mathbf&#123;k&#125;</span> <span class="string">\\</span></span><br><span class="line"><span class="string">\frac&#123;\partial</span> X&#125;&#123;<span class="string">\partial</span> u&#125; &amp;  <span class="string">\frac&#123;\partial</span> Y&#125;&#123;<span class="string">\partial</span> u&#125; &amp; <span class="number">0</span> <span class="string">\\</span></span><br><span class="line"><span class="string">\frac&#123;\partial</span> X&#125;&#123;<span class="string">\partial</span> v&#125; &amp;  <span class="string">\frac&#123;\partial</span> Y&#125;&#123;<span class="string">\partial</span> v&#125; &amp; <span class="number">0</span> <span class="string">\\</span></span><br><span class="line"><span class="string">\end&#123;vmatrix&#125;</span></span><br><span class="line">$$</span><br></pre></td></tr></table></figure><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>输入 <code>| First Header | Second Header |</code> 并按下 <code>return</code> 键将创建一个包含两列的表。</p><p>创建表后，焦点在该表上将弹出一个表格工具栏，您可以在其中调整表格，对齐或删除表格。您还可以使用上下文菜单来复制和添加&#x2F;删除列&#x2F;行。</p><p>可以跳过以下描述，因为表格的 markdown 源代码是由typora自动生成的。</p><p>在 markdown 源代码中，它们看起来像这样：</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|<span class="string"> First Header  </span>|<span class="string"> Second Header </span>|</span><br><span class="line">|<span class="string"> ------------- </span>|<span class="string"> ------------- </span>|</span><br><span class="line">|<span class="string"> Content Cell  </span>|<span class="string"> Content Cell  </span>|</span><br><span class="line">|<span class="string"> Content Cell  </span>|<span class="string"> Content Cell  </span>|</span><br></pre></td></tr></table></figure><p>您还可以在表格中包括内联 Markdown 语法，例如链接，粗体，斜体或删除线。</p><p>最后，通过在标题行中包含冒号：您可以将文本定义为左对齐，右对齐或居中对齐：</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| <span class="title class_">Left</span>-<span class="title class_">Aligned</span>  | <span class="title class_">Center</span> <span class="title class_">Aligned</span>  | <span class="title class_">Right</span> <span class="title class_">Aligned</span> |</span><br><span class="line">| <span class="symbol">:------------</span> |<span class="symbol">:---------------</span><span class="symbol">:|</span> -----<span class="symbol">:|</span></span><br><span class="line">| col <span class="number">3</span> is      | some wordy text | <span class="variable">$1600</span> |</span><br><span class="line">| col <span class="number">2</span> is      | centered        |   <span class="variable">$12</span> |</span><br><span class="line">| zebra stripes | are neat        |    <span class="variable">$1</span> |</span><br></pre></td></tr></table></figure><p>最左侧的冒号表示左对齐的列; 最右侧的冒号表示右对齐的列; 两侧的冒号表示中心对齐的列。</p><h3 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h3><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">您可以像这样创建脚注[^footnote].</span><br><span class="line"></span><br><span class="line">[^footnote]: <span class="symbol">Here</span> is the *text* of the **footnote**.</span><br></pre></td></tr></table></figure><p>将产生：</p><p>您可以像这样创建脚注<a href="https://support.typoraio.cn/zh/Markdown-Reference/#fn:footnote">1</a>.</p><p>鼠标移动到‘footnote’上标中查看脚注的内容。</p><h3 id="水平线"><a href="#水平线" class="headerlink" title="水平线"></a>水平线</h3><p>输入 <code>***</code> 或 <code>---</code> 在空行上按 <code>return</code> 键将绘制一条水平线。</p><hr><h3 id="YAML-Front-Matter"><a href="#YAML-Front-Matter" class="headerlink" title="YAML Front Matter"></a>YAML Front Matter</h3><p>Typora 现在支持 <a href="http://jekyllrb.com/docs/frontmatter/">YAML Front Matter</a> 。 在文章顶部输入 <code>---</code> 然后按 <code>Enter</code> 键将引入一个，或者从菜单中插入一个元数据块。</p><h3 id="目录-TOC"><a href="#目录-TOC" class="headerlink" title="目录 (TOC)"></a>目录 (TOC)</h3><p>输入 <code>[toc]</code> 然后按 <code>Return</code> 键将创建一个“目录”部分，自动从文档内容中提取所有标题，其内容会自动更新。</p><h3 id="图表-Sequence-Flowchart-and-Mermaid"><a href="#图表-Sequence-Flowchart-and-Mermaid" class="headerlink" title="图表 (Sequence, Flowchart and Mermaid)"></a>图表 (Sequence, Flowchart and Mermaid)</h3><p>Typora 支持, <a href="https://bramp.github.io/js-sequence-diagrams/">sequence</a>, <a href="http://flowchart.js.org/">flowchart</a> and <a href="https://knsv.github.io/mermaid/#mermaid">mermaid</a>, 使用前要先从偏好设置面板启用该功能。</p><p>详细信息请参阅此 <a href="http://support.typora.io/Draw-Diagrams-With-Markdown/">文档</a></p><h2 id="Span-元素"><a href="#Span-元素" class="headerlink" title="Span 元素"></a>Span 元素</h2><p>在您输入后Span元素会被立即解析并呈现。在这些span元素上移动光标会将这些元素扩展为markdown源代码。以下将解释这些span元素的语法。</p><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>Markdown 支持两种类型的链接：内联和引用。</p><p>在这两种样式中，链接文本都写在[方括号]内。</p><p>要创建内联链接，请在链接文本的结束方括号后立即使用一组常规括号。在常规括号内，输入URL地址，以及可选的用引号括起来的链接标题。例如：</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">This <span class="built_in">is</span> [an <span class="built_in">example</span>](http://<span class="built_in">example</span>.com/ <span class="string">&quot;Title&quot;</span>) inline link.</span><br><span class="line"></span><br><span class="line">[This link](http://<span class="built_in">example</span>.net/) has no <span class="built_in">title</span> attribute.</span><br></pre></td></tr></table></figure><p>将产生：</p><p>This is <a href="http://example.com/%22Title%22">an example</a> inline link. (<code>&lt;p&gt;This is &lt;a href=&quot;http://example.com/&quot; title=&quot;Title&quot;&gt;</code>)</p><p><a href="http://example.net/">This link</a> has no title attribute. (<code>&lt;p&gt;&lt;a href=&quot;http://example.net/&quot;&gt;This link&lt;/a&gt; has no</code>)</p><h4 id="内部链接"><a href="#内部链接" class="headerlink" title="内部链接"></a>内部链接</h4><p><strong>您可以将常规括号内的 href 设置为文档内的某一个标题</strong>，这将创建一个书签，允许您在单击后跳转到该部分。例如：</p><p>Command(在Windows上：Ctrl) + 单击 <a href="https://support.typoraio.cn/zh/Markdown-Reference/#%E5%9D%97%E5%85%83%E7%B4%A0">此链接</a> 将跳转到标题 <code>块元素</code>处。 要查看如何编写，请移动光标或按住 <code>⌘</code>键单击以将元素展开为 Markdown 源代码。</p><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p>参考样式链接使用第二组方括号，在其中放置您选择的标签以标识链接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">This is [an example][<span class="built_in">id</span>] reference-style <span class="built_in">link</span>.</span><br><span class="line"></span><br><span class="line">然后，在文档中的任何位置，您可以单独定义链接标签，如下所示：</span><br><span class="line"></span><br><span class="line">[<span class="built_in">id</span>]: http://example.com/  <span class="string">&quot;Optional Title Here&quot;</span></span><br></pre></td></tr></table></figure><p>在typora中，它们将呈现为：</p><p>This is <a href="http://example.com/">an example</a> reference-style link.</p><p>隐式链接名称快捷方式允许您省略链接的名称，在这种情况下，链接文本本身将用作名称。只需使用一组空的方括号，例如，将“Google”一词链接到google.com网站，您只需写下：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[Google]</span><span class="selector-attr">[]</span></span><br><span class="line">然后定义链接：</span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[Google]</span>: <span class="selector-tag">http</span>:<span class="comment">//google.com/</span></span><br></pre></td></tr></table></figure><p>在typora中单击链接将其展开以进行编辑，command + 单击将在 Web 浏览器中打开超链接。</p><h3 id="URL网址"><a href="#URL网址" class="headerlink" title="URL网址"></a>URL网址</h3><p>Typora允许您将 URL 作为链接插入，用 <code>&lt;</code>括号括起来<code>&gt;</code>。</p><p><code>&lt;i@typora.io&gt;</code> 成为 <a href="mailto:i@typora.io">i@typora.io</a>.</p><p>Typora也将自动链接标准URL。例如： <a href="http://www.google.com/">www.google.com</a>.</p><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>图像与链接类似， 但在链接语法之前需要添加额外的 <code>!</code> 字符。 图像语法如下所示：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">!<span class="selector-attr">[替代文字]</span>(/path/<span class="selector-tag">to</span>/<span class="selector-tag">img</span><span class="selector-class">.jpg</span>)</span><br><span class="line"></span><br><span class="line">!<span class="selector-attr">[替代文字]</span>(/path/<span class="selector-tag">to</span>/<span class="selector-tag">img</span><span class="selector-class">.jpg</span> &quot;可选标题&quot;)</span><br></pre></td></tr></table></figure><p>您可以使用拖放操作从图像文件或浏览器来插入图像。并通过单击图像修改 markdown 源代码。如果图像在拖放时与当前编辑文档位于同一目录或子目录中，则将使用相对路径。</p><p>有关图像的更多提示，请阅读 <a href="http://support.typora.io//Images/">http://support.typora.io//Images/</a></p><h3 id="强调（斜体）"><a href="#强调（斜体）" class="headerlink" title="强调（斜体）"></a>强调（斜体）</h3><p>Markdown 将星号 (<code>*</code>) 和下划线(<code>_</code>) 视为强调的指示。用一个 <code>*</code> or <code>_</code> 包裹文本将使用HTML <code>&lt;em&gt;</code> 标签包裹文本。例如：</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">*单个星号*</span></span><br><span class="line"></span><br><span class="line"><span class="emphasis">_单个下划线_</span></span><br></pre></td></tr></table></figure><p>输出：</p><p><em>单个星号</em></p><p><em>单个下划线</em></p><p>GFM将忽略单词中的下划线，这通常用在代码和名称中，如下所示：</p><blockquote><p>wow_great_stuff</p><p>do_this_and_do_that_and_another_thing.</p></blockquote><p>要在用作强调分隔符的位置生成文字星号或下划线，可以用反斜杠转义：</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\*这个文字被文字星号包围\*</span><br></pre></td></tr></table></figure><p>Typora建议使用 <code>*</code> 号.</p><h3 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a>粗体</h3><p>用两个 * 或 _ 包裹的文本将使用HTML <code>&lt;strong&gt;</code> 标签包裹，例如：</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**双星号**</span></span><br><span class="line"></span><br><span class="line"><span class="emphasis">__双重下划线__</span></span><br></pre></td></tr></table></figure><p>输出：</p><p><strong>双星号</strong></p><p><strong>双重下划线</strong></p><p>Typora 建议使用 <code>**</code> 号。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>要指示代码范围，请使用反引号（&#96;）进行包裹。与预格式化的代码块不同，代码跨度表示正常段落中的代码。例如：</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用`printf()`函数。</span><br></pre></td></tr></table></figure><p>将产生：</p><p>使用 <code>printf()</code> 函数。</p><h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><p>GFM通过添加语法来创建删除线文本，标准的Markdown中缺少该文本。</p><p><code>~~错误的文字。~~</code> 变成 <del>错误的文字。</del></p><h3 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h3><p>下划线由原始HTML提供支持。</p><p><code>&lt;u&gt;下划线&lt;/u&gt;</code> 变成 下划线</p><h3 id="表情符号-smile"><a href="#表情符号-smile" class="headerlink" title="表情符号 :smile:"></a>表情符号 :smile:</h3><p>输入表情符号的语法是 <code>:smile:</code></p><p>用户可以通过 <code>ESC</code> 按键触发表情符号的自动完成建议，或者在偏好设置面板里启用后自动触发表情符号。此外，还支持直接从 <code>Edit</code> -&gt; <code>Emoji &amp; Symbols</code> 菜单栏输入UTF8表情符号字符。</p><h3 id="内联数学公式"><a href="#内联数学公式" class="headerlink" title="内联数学公式"></a>内联数学公式</h3><p>要使用此功能，首先，请在 <code>偏好设置</code> 面板 -&gt; <code>Markdown扩展语法</code> 选项卡中启用它。然后使用 <code>$</code> 来包裹TeX命令，例如： <code>$\lim_&#123;x \to \infty&#125; \exp(-x) = 0$</code> 将呈现为LaTeX命令。</p><p>要触发内联公式的预览提示功能：输入“$”, 然后按 <code>ESC</code> 键, 然后输入TeX命令, 预览工具提示将如下所示：</p><p><img data-src="http://typora.io/img/inline-math.gif" alt="img"></p><h3 id="下标"><a href="#下标" class="headerlink" title="下标"></a>下标</h3><p>要使用此功能，首先，请在 <code>偏好设置</code> 面板 -&gt; <code>Markdown扩展语法</code> 选项卡中启用它。然后用 <code>~</code> 来包裹下标内容，例如： <code>H~2~O</code>, <code>X~long\ text~</code>&#x2F;</p><h3 id="上标"><a href="#上标" class="headerlink" title="上标"></a>上标</h3><p>要使用此功能，首先，请在 <code>偏好设置</code> 面板 -&gt; <code>Markdown扩展语法</code> 选项卡中启用它。然后用 <code>^</code> 来包裹上标内容，例如： <code>X^2^</code>。</p><h3 id="高亮"><a href="#高亮" class="headerlink" title="高亮"></a>高亮</h3><p>要使用此功能，首先，请在 <code>偏好设置</code> 面板 -&gt; <code>Markdown扩展语法</code> 选项卡中启用它。然后用 <code>==</code> 来包裹高亮内容，例如： <code>==highlight==</code>。</p><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><p>您可以使用HTML来设置纯 Markdown 不支持的内容，例如， <code>&lt;span style=&quot;color:red&quot;&gt;this text is red&lt;/span&gt;</code> 用于添加红色文本。</p><h3 id="嵌入内容"><a href="#嵌入内容" class="headerlink" title="嵌入内容"></a>嵌入内容</h3><p>有些网站提供基于iframe的嵌入代码，您也可以将其粘贴到Typora中，例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">height</span>=<span class="string">&#x27;265&#x27;</span> <span class="attr">scrolling</span>=<span class="string">&#x27;no&#x27;</span> <span class="attr">title</span>=<span class="string">&#x27;Fancy Animated SVG Menu&#x27;</span> <span class="attr">src</span>=<span class="string">&#x27;http://codepen.io/jeangontijo/embed/OxVywj/?height=265&amp;theme-id=0&amp;default-tab=css,result&amp;embed-version=2&#x27;</span> <span class="attr">frameborder</span>=<span class="string">&#x27;no&#x27;</span> <span class="attr">allowtransparency</span>=<span class="string">&#x27;true&#x27;</span> <span class="attr">allowfullscreen</span>=<span class="string">&#x27;true&#x27;</span> <span class="attr">style</span>=<span class="string">&#x27;width: 100%;&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h3><p>您可以使用 <code>&lt;video&gt;</code> HTML标记嵌入视频，例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;xxx.mp4&quot;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="其他-HTML-支持"><a href="#其他-HTML-支持" class="headerlink" title="其他 HTML 支持"></a>其他 HTML 支持</h3><p>你可以在 <a href="http://support.typora.io/HTML/">这里</a>找到细节。</p><ol><li>Here is the <em>text</em> of the <strong>footnote</strong>. <a href="https://support.typoraio.cn/zh/Markdown-Reference/#fnref:footnote">↩</a></li></ol><p><a href="https://typoraio.cn/">Get Typora</a> &#x2F; <a href="https://github.com/typora/wiki-website">Help Improve our documents</a></p>]]></content>
    
    
    <summary type="html">Typora是一款流行的Markdown编辑器，它支持Markdown语法，这是一种轻量级标记语言，用于格式化文本。Markdown语法易于学习，可读性强，使得Typora成为撰写和编辑文档的理想工具。</summary>
    
    
    
    <category term="语法分析" scheme="https://blog.ceobe.cn/categories/%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90/"/>
    
    
    <category term="Markdown" scheme="https://blog.ceobe.cn/tags/Markdown/"/>
    
    <category term="兼容性" scheme="https://blog.ceobe.cn/tags/%E5%85%BC%E5%AE%B9%E6%80%A7/"/>
    
    <category term="代码折叠" scheme="https://blog.ceobe.cn/tags/%E4%BB%A3%E7%A0%81%E6%8A%98%E5%8F%A0/"/>
    
    <category term="多语言支持" scheme="https://blog.ceobe.cn/tags/%E5%A4%9A%E8%AF%AD%E8%A8%80%E6%94%AF%E6%8C%81/"/>
    
    <category term="数学公式" scheme="https://blog.ceobe.cn/tags/%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/"/>
    
    <category term="流程图" scheme="https://blog.ceobe.cn/tags/%E6%B5%81%E7%A8%8B%E5%9B%BE/"/>
    
    <category term="甘特图" scheme="https://blog.ceobe.cn/tags/%E7%94%98%E7%89%B9%E5%9B%BE/"/>
    
    <category term="目录生成" scheme="https://blog.ceobe.cn/tags/%E7%9B%AE%E5%BD%95%E7%94%9F%E6%88%90/"/>
    
    <category term="任务列表" scheme="https://blog.ceobe.cn/tags/%E4%BB%BB%E5%8A%A1%E5%88%97%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>Syntax的Markdown语法</title>
    <link href="https://blog.ceobe.cn/MarkdownSyntax/"/>
    <id>https://blog.ceobe.cn/MarkdownSyntax/</id>
    <published>2023-12-01T07:33:37.000Z</published>
    <updated>2024-02-01T02:57:49.918Z</updated>
    
    <content type="html"><![CDATA[<h2 id="OVERVIEW"><a href="#OVERVIEW" class="headerlink" title="OVERVIEW"></a>OVERVIEW</h2><h3 id="PHILOSOPHY"><a href="#PHILOSOPHY" class="headerlink" title="PHILOSOPHY"></a>PHILOSOPHY</h3><p>Markdown is intended to be as easy-to-read and easy-to-write as is feasible.</p><p>Readability, however, is emphasized above all else. A Markdown-formatted document should be publishable as-is, as plain text, without looking like it’s been marked up with tags or formatting instructions. While Markdown’s syntax has been influenced by several existing text-to-HTML filters — including <a href="http://docutils.sourceforge.net/mirror/setext.html">Setext</a>, <a href="http://www.aaronsw.com/2002/atx/">atx</a>, <a href="https://web.archive.org/web/20021226035527/http://textism.com/tools/textile/">Textile</a>, <a href="http://docutils.sourceforge.net/rst.html">reStructuredText</a>, <a href="http://www.triptico.com/software/grutatxt.html">Grutatext</a>, and <a href="http://ettext.taint.org/doc/">EtText</a> — the single biggest source of inspiration for Markdown’s syntax is the format of plain text email.</p><p>To this end, Markdown’s syntax is comprised entirely of punctuation characters, which punctuation characters have been carefully chosen so as to look like what they mean. E.g., asterisks around a word actually look like <em>emphasis</em>. Markdown lists look like, well, lists. Even blockquotes look like quoted passages of text, assuming you’ve ever used email.</p><h3 id="INLINE-HTML"><a href="#INLINE-HTML" class="headerlink" title="INLINE HTML"></a>INLINE HTML</h3><p>Markdown’s syntax is intended for one purpose: to be used as a format for <em>writing</em> for the web.</p><p>Markdown is not a replacement for HTML, or even close to it. Its syntax is very small, corresponding only to a very small subset of HTML tags. The idea is <em>not</em> to create a syntax that makes it easier to insert HTML tags. In my opinion, HTML tags are already easy to insert. The idea for Markdown is to make it easy to read, write, and edit prose. HTML is a <em>publishing</em> format; Markdown is a <em>writing</em>format. Thus, Markdown’s formatting syntax only addresses issues that can be conveyed in plain text.</p><p>For any markup that is not covered by Markdown’s syntax, you simply use HTML itself. There’s no need to preface it or delimit it to indicate that you’re switching from Markdown to HTML; you just use the tags.</p><p>The only restrictions are that block-level HTML elements — e.g. <code>&lt;div&gt;</code>, <code>&lt;table&gt;</code>, <code>&lt;pre&gt;</code>, <code>&lt;p&gt;</code>, etc. — must be separated from surrounding content by blank lines, and the start and end tags of the block should not be indented with tabs or spaces. Markdown is smart enough not to add extra (unwanted) <code>&lt;p&gt;</code> tags around HTML block-level tags.</p><p>For example, to add an HTML table to a Markdown article:</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">This <span class="literal">is</span> a regular paragraph.</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span><span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        </span><span class="language-xml"><span class="tag">&lt;<span class="name">td</span>&gt;</span>Foo<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">This <span class="literal">is</span> another regular paragraph.</span><br></pre></td></tr></table></figure><p>Note that Markdown formatting syntax is not processed within block-level HTML tags. E.g., you can’t use Markdown-style <code>*emphasis*</code>inside an HTML block.</p><p>Span-level HTML tags — e.g. <code>&lt;span&gt;</code>, <code>&lt;cite&gt;</code>, or <code>&lt;del&gt;</code> — can be used anywhere in a Markdown paragraph, list item, or header. If you want, you can even use HTML tags instead of Markdown formatting; e.g. if you’d prefer to use HTML <code>&lt;a&gt;</code> or <code>&lt;img&gt;</code> tags instead of Markdown’s link or image syntax, go right ahead.</p><p>Unlike block-level HTML tags, Markdown syntax <em>is</em> processed within span-level tags.</p><h3 id="AUTOMATIC-ESCAPING-FOR-SPECIAL-CHARACTERS"><a href="#AUTOMATIC-ESCAPING-FOR-SPECIAL-CHARACTERS" class="headerlink" title="AUTOMATIC ESCAPING FOR SPECIAL CHARACTERS"></a>AUTOMATIC ESCAPING FOR SPECIAL CHARACTERS</h3><p>In HTML, there are two characters that demand special treatment: <code>&lt;</code>and <code>&amp;</code>. Left angle brackets are used to start tags; ampersands are used to denote HTML entities. If you want to use them as literal characters, you must escape them as entities, e.g. <code>&lt;</code>, and<code>&amp;</code>.</p><p>Ampersands in particular are bedeviling for web writers. If you want to write about ‘AT&amp;T’, you need to write ‘<code>AT&amp;T</code>’. You even need to escape ampersands within URLs. Thus, if you want to link to:</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">http:</span><span class="comment">//images.google.com/images?num=30&amp;q=larry+bird</span></span><br></pre></td></tr></table></figure><p>you need to encode the URL as:</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">http:</span><span class="comment">//images.google.com/images?num=30&amp;amp;q=larry+bird</span></span><br></pre></td></tr></table></figure><p>in your anchor tag <code>href</code> attribute. Needless to say, this is easy to forget, and is probably the single most common source of HTML validation errors in otherwise well-marked-up web sites.</p><p>Markdown allows you to use these characters naturally, taking care of all the necessary escaping for you. If you use an ampersand as part of an HTML entity, it remains unchanged; otherwise it will be translated into <code>&amp;</code>.</p><p>So, if you want to include a copyright symbol in your article, you can write:</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&amp;copy;</span></span><br></pre></td></tr></table></figure><p>and Markdown will leave it alone. But if you write:</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AT<span class="meta">&amp;T</span></span><br></pre></td></tr></table></figure><p>Markdown will translate it to:</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">AT</span>&amp;amp<span class="comment">;T</span></span><br></pre></td></tr></table></figure><p>Similarly, because Markdown supports <a href="https://daringfireball.net/projects/markdown/syntax#html">inline HTML</a>, if you use angle brackets as delimiters for HTML tags, Markdown will treat them as such. But if you write:</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">4 </span>&lt; <span class="number">5</span></span><br></pre></td></tr></table></figure><p>Markdown will translate it to:</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">4 </span>&amp;lt; <span class="number">5</span></span><br></pre></td></tr></table></figure><p>However, inside Markdown code spans and blocks, angle brackets and ampersands are <em>always</em> encoded automatically. This makes it easy to use Markdown to write about HTML code. (As opposed to raw HTML, which is a terrible format for writing about HTML syntax, because every single <code>&lt;</code> and <code>&amp;</code> in your example code needs to be escaped.)</p><hr><h2 id="BLOCK-ELEMENTS"><a href="#BLOCK-ELEMENTS" class="headerlink" title="BLOCK ELEMENTS"></a>BLOCK ELEMENTS</h2><h3 id="PARAGRAPHS-AND-LINE-BREAKS"><a href="#PARAGRAPHS-AND-LINE-BREAKS" class="headerlink" title="PARAGRAPHS AND LINE BREAKS"></a>PARAGRAPHS AND LINE BREAKS</h3><p>A paragraph is simply one or more consecutive lines of text, separated by one or more blank lines. (A blank line is any line that looks like a blank line — a line containing nothing but spaces or tabs is considered blank.) Normal paragraphs should not be indented with spaces or tabs.</p><p>The implication of the “one or more consecutive lines of text” rule is that Markdown supports “hard-wrapped” text paragraphs. This differs significantly from most other text-to-HTML formatters (including Movable Type’s “Convert Line Breaks” option) which translate every line break character in a paragraph into a <code>&lt;br /&gt;</code> tag.</p><p>When you <em>do</em> want to insert a <code>&lt;br /&gt;</code> break tag using Markdown, you end a line with two or more spaces, then type return.</p><p>Yes, this takes a tad more effort to create a <code>&lt;br /&gt;</code>, but a simplistic “every line break is a <code>&lt;br /&gt;</code>” rule wouldn’t work for Markdown. Markdown’s email-style <a href="https://daringfireball.net/projects/markdown/syntax#blockquote">blockquoting</a> and multi-paragraph <a href="https://daringfireball.net/projects/markdown/syntax#list">list items</a>work best — and look better — when you format them with hard breaks.</p><h3 id="HEADERS"><a href="#HEADERS" class="headerlink" title="HEADERS"></a>HEADERS</h3><p>Markdown supports two styles of headers, <a href="http://docutils.sourceforge.net/mirror/setext.html">Setext</a> and <a href="http://www.aaronsw.com/2002/atx/">atx</a>.</p><p>Setext-style headers are “underlined” using equal signs (for first-level headers) and dashes (for second-level headers). For example:</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">This is an H1</span></span><br><span class="line"><span class="section">=============</span></span><br><span class="line"></span><br><span class="line"><span class="section">This is an H2</span></span><br><span class="line"><span class="section">-------------</span></span><br></pre></td></tr></table></figure><p>Any number of underlining <code>=</code>’s or <code>-</code>’s will work.</p><p>Atx-style headers use 1-6 hash characters at the start of the line, corresponding to header levels 1-6. For example:</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># This is an H1</span><br><span class="line"></span><br><span class="line">## This is an H2</span><br><span class="line"></span><br><span class="line">###### This is an H6</span><br></pre></td></tr></table></figure><p>Optionally, you may “close” atx-style headers. This is purely cosmetic — you can use this if you think it looks better. The closing hashes don’t even need to match the number of hashes used to open the header. (The number of opening hashes determines the header level.) :</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># This is an H1 #</span><br><span class="line"></span><br><span class="line">## This is an H2 ##</span><br><span class="line"></span><br><span class="line">### This is an H3 ######</span><br></pre></td></tr></table></figure><h3 id="BLOCKQUOTES"><a href="#BLOCKQUOTES" class="headerlink" title="BLOCKQUOTES"></a>BLOCKQUOTES</h3><p>Markdown uses email-style <code>&gt;</code> characters for blockquoting. If you’re familiar with quoting passages of text in an email message, then you know how to create a blockquote in Markdown. It looks best if you hard wrap the text and put a <code>&gt;</code> before every line:</p><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript"><span class="title class_">This</span> is a blockquote <span class="keyword">with</span> two paragraphs. <span class="title class_">Lorem</span> ipsum dolor sit amet,</span></span><br><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript">consectetuer adipiscing elit. <span class="title class_">Aliquam</span> hendrerit mi posuere lectus.</span></span><br><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript"><span class="title class_">Vestibulum</span> enim wisi, viverra nec, fringilla <span class="keyword">in</span>, laoreet vitae, risus.</span></span><br><span class="line"><span class="meta prompt_">&gt;</span> </span><br><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript"><span class="title class_">Donec</span> sit amet nisl. <span class="title class_">Aliquam</span> semper ipsum sit amet velit. <span class="title class_">Suspendisse</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript">id sem consectetuer libero luctus adipiscing.</span></span><br></pre></td></tr></table></figure><p>Markdown allows you to be lazy and only put the <code>&gt;</code> before the first line of a hard-wrapped paragraph:</p><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript"><span class="title class_">This</span> is a blockquote <span class="keyword">with</span> two paragraphs. <span class="title class_">Lorem</span> ipsum dolor sit amet,</span></span><br><span class="line">consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.</span><br><span class="line">Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line"></span><br><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript"><span class="title class_">Donec</span> sit amet nisl. <span class="title class_">Aliquam</span> semper ipsum sit amet velit. <span class="title class_">Suspendisse</span></span></span><br><span class="line">id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) by adding additional levels of <code>&gt;</code>:</p><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript"><span class="title class_">This</span> is the first level <span class="keyword">of</span> quoting.</span></span><br><span class="line"><span class="meta prompt_">&gt;</span></span><br><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript">&gt; <span class="title class_">This</span> is nested blockquote.</span></span><br><span class="line"><span class="meta prompt_">&gt;</span></span><br><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript"><span class="title class_">Back</span> to the first level.</span></span><br></pre></td></tr></table></figure><p>Blockquotes can contain other Markdown elements, including headers, lists, and code blocks:</p><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript">## <span class="title class_">This</span> is a header.</span></span><br><span class="line"><span class="meta prompt_">&gt;</span> </span><br><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript"><span class="number">1.</span>   <span class="title class_">This</span> is the first list item.</span></span><br><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript"><span class="number">2.</span>   <span class="title class_">This</span> is the second list item.</span></span><br><span class="line"><span class="meta prompt_">&gt;</span> </span><br><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript"><span class="title class_">Here</span><span class="string">&#x27;s some example code:</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span> </span><br><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript"><span class="string">    return shell_exec(&quot;echo $input | $markdown_script&quot;);</span></span></span><br></pre></td></tr></table></figure><p>Any decent text editor should make email-style quoting easy. For example, with BBEdit, you can make a selection and choose Increase Quote Level from the Text menu.</p><h3 id="LISTS"><a href="#LISTS" class="headerlink" title="LISTS"></a>LISTS</h3><p>Markdown supports ordered (numbered) and unordered (bulleted) lists.</p><p>Unordered lists use asterisks, pluses, and hyphens — interchangably — as list markers:</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*   </span>Red</span><br><span class="line"><span class="bullet">*   </span>Green</span><br><span class="line"><span class="bullet">*   </span>Blue</span><br></pre></td></tr></table></figure><p>is equivalent to:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">+</span>   Red</span><br><span class="line"><span class="bullet">+</span>   Green</span><br><span class="line"><span class="bullet">+</span>   Blue</span><br></pre></td></tr></table></figure><p>and:</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-   </span>Red</span><br><span class="line"><span class="bullet">-   </span>Green</span><br><span class="line"><span class="bullet">-   </span>Blue</span><br></pre></td></tr></table></figure><p>Ordered lists use numbers followed by periods:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span>  Bird</span><br><span class="line"><span class="bullet">2.</span>  McHale</span><br><span class="line"><span class="bullet">3.</span>  Parish</span><br></pre></td></tr></table></figure><p>It’s important to note that the actual numbers you use to mark the list have no effect on the HTML output Markdown produces. The HTML Markdown produces from the above list is:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Bird<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>McHale<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Parish<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><p>If you instead wrote the list in Markdown like this:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span>  Bird</span><br><span class="line"><span class="bullet">1.</span>  McHale</span><br><span class="line"><span class="bullet">1.</span>  Parish</span><br></pre></td></tr></table></figure><p>or even:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">3.</span> Bird</span><br><span class="line"><span class="bullet">1.</span> McHale</span><br><span class="line"><span class="bullet">8.</span> Parish</span><br></pre></td></tr></table></figure><p>you’d get the exact same HTML output. The point is, if you want to, you can use ordinal numbers in your ordered Markdown lists, so that the numbers in your source match the numbers in your published HTML. But if you want to be lazy, you don’t have to.</p><p>If you do use lazy list numbering, however, you should still start the list with the number 1. At some point in the future, Markdown may support starting ordered lists at an arbitrary number.</p><p>List markers typically start at the left margin, but may be indented by up to three spaces. List markers must be followed by one or more spaces or a tab.</p><p>To make lists look nice, you can wrap items with hanging indents:</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</span></span><br><span class="line">    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,</span><br><span class="line">    viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line"><span class="comment">*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.</span></span><br><span class="line">    Suspendisse id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>But if you want to be lazy, you don’t have to:</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</span></span><br><span class="line">Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,</span><br><span class="line">viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line"><span class="comment">*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.</span></span><br><span class="line">Suspendisse id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>If list items are separated by blank lines, Markdown will wrap the items in <code>&lt;p&gt;</code> tags in the HTML output. For example, this input:</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*   </span>Bird</span><br><span class="line"><span class="bullet">*   </span>Magic</span><br></pre></td></tr></table></figure><p>will turn into:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Bird<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Magic<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>But this:</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*   </span>Bird</span><br><span class="line"></span><br><span class="line"><span class="bullet">*   </span>Magic</span><br></pre></td></tr></table></figure><p>will turn into:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>Bird<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>Magic<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>List items may consist of multiple paragraphs. Each subsequent paragraph in a list item must be indented by either 4 spaces or one tab:</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>  This <span class="keyword">is</span> a <span class="built_in">list</span> <span class="built_in">item</span> <span class="keyword">with</span> two <span class="built_in">paragraphs</span>. Lorem ipsum dolor</span><br><span class="line">    sit amet, consectetuer adipiscing elit. Aliquam hendrerit</span><br><span class="line">    mi posuere lectus.</span><br><span class="line"></span><br><span class="line">    Vestibulum enim wisi, viverra nec, fringilla <span class="keyword">in</span>, laoreet</span><br><span class="line">    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum</span><br><span class="line">    sit amet velit.</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>  Suspendisse <span class="built_in">id</span> sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>It looks nice if you indent every line of the subsequent paragraphs, but here again, Markdown will allow you to be lazy:</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">*   This <span class="keyword">is</span> a <span class="built_in">list</span> <span class="built_in">item</span> <span class="keyword">with</span> two <span class="built_in">paragraphs</span>.</span><br><span class="line"></span><br><span class="line">    This <span class="keyword">is</span> <span class="keyword">the</span> <span class="keyword">second</span> <span class="built_in">paragraph</span> <span class="keyword">in</span> <span class="keyword">the</span> <span class="built_in">list</span> <span class="built_in">item</span>. You&#x27;re</span><br><span class="line">only required <span class="keyword">to</span> indent <span class="keyword">the</span> <span class="keyword">first</span> line. Lorem ipsum dolor</span><br><span class="line">sit amet, consectetuer adipiscing elit.</span><br><span class="line"></span><br><span class="line">*   Another <span class="built_in">item</span> <span class="keyword">in</span> <span class="keyword">the</span> same <span class="built_in">list</span>.</span><br></pre></td></tr></table></figure><p>To put a blockquote within a list item, the blockquote’s <code>&gt;</code> delimiters need to be indented:</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*   <span class="selector-tag">A</span> <span class="selector-tag">list</span> <span class="selector-tag">item</span> <span class="selector-tag">with</span> <span class="selector-tag">a</span> <span class="selector-tag">blockquote</span>:</span><br><span class="line"></span><br><span class="line">    &gt; <span class="selector-tag">This</span> <span class="selector-tag">is</span> <span class="selector-tag">a</span> <span class="selector-tag">blockquote</span></span><br><span class="line">    &gt; <span class="selector-tag">inside</span> <span class="selector-tag">a</span> <span class="selector-tag">list</span> <span class="selector-tag">item</span>.</span><br></pre></td></tr></table></figure><p>To put a code block within a list item, the code block needs to be indented <em>twice</em> — 8 spaces or two tabs:</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*   A list item <span class="keyword">with</span> a <span class="keyword">code</span> block:</span><br><span class="line"></span><br><span class="line">        &lt;<span class="keyword">code</span> goes here&gt;</span><br></pre></td></tr></table></figure><p>It’s worth noting that it’s possible to trigger an ordered list by accident, by writing something like this:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1986</span>. What <span class="selector-tag">a</span> great season.</span><br></pre></td></tr></table></figure><p>In other words, a <em>number-period-space</em> sequence at the beginning of a line. To avoid this, you can backslash-escape the period:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1986</span>\. What <span class="selector-tag">a</span> great season.</span><br></pre></td></tr></table></figure><h3 id="CODE-BLOCKS"><a href="#CODE-BLOCKS" class="headerlink" title="CODE BLOCKS"></a>CODE BLOCKS</h3><p>Pre-formatted code blocks are used for writing about programming or markup source code. Rather than forming normal paragraphs, the lines of a code block are interpreted literally. Markdown wraps a code block in both <code>&lt;pre&gt;</code> and <code>&lt;code&gt;</code> tags.</p><p>To produce a code block in Markdown, simply indent every line of the block by at least 4 spaces or 1 tab. For example, given this input:</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">This is <span class="keyword">a</span> <span class="keyword">normal</span> <span class="keyword">paragraph</span>:</span><br><span class="line"></span><br><span class="line">    This is <span class="keyword">a</span> code block.</span><br></pre></td></tr></table></figure><p>Markdown will generate:</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">&lt;p&gt;</span>This <span class="keyword">is</span> <span class="keyword">a</span> <span class="keyword">normal</span> paragraph:&lt;/<span class="keyword">p</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="symbol">&lt;pre&gt;</span><span class="symbol">&lt;code&gt;</span>This <span class="keyword">is</span> <span class="keyword">a</span> code block.</span><br><span class="line">&lt;/code&gt;&lt;/<span class="keyword">pre</span>&gt;</span><br></pre></td></tr></table></figure><p>One level of indentation — 4 spaces or 1 tab — is removed from each line of the code block. For example, this:</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Here <span class="keyword">is</span> an example <span class="keyword">of</span> <span class="literal">AppleScript</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">tell</span> <span class="built_in">application</span> <span class="string">&quot;Foo&quot;</span></span><br><span class="line">        <span class="built_in">beep</span></span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">tell</span></span><br></pre></td></tr></table></figure><p>will turn into:</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;Here <span class="keyword">is</span> an example <span class="keyword">of</span> <span class="literal">AppleScript</span>:&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;pre&gt;&lt;code&gt;<span class="keyword">tell</span> <span class="built_in">application</span> <span class="string">&quot;Foo&quot;</span></span><br><span class="line">    <span class="built_in">beep</span></span><br><span class="line"><span class="keyword">end</span> <span class="keyword">tell</span></span><br><span class="line">&lt;/code&gt;&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p>A code block continues until it reaches a line that is not indented (or the end of the article).</p><p>Within a code block, ampersands (<code>&amp;</code>) and angle brackets (<code>&lt;</code> and <code>&gt;</code>) are automatically converted into HTML entities. This makes it very easy to include example HTML source code using Markdown — just paste it and indent it, and Markdown will handle the hassle of encoding the ampersands and angle brackets. For example, this:</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">&quot;footer&quot;</span>&gt;</span><br><span class="line">    &amp;<span class="keyword">copy</span>; <span class="number">2004</span> Foo Corporation</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure><p>will turn into:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span><span class="symbol">&amp;lt;</span>div class=&quot;footer&quot;<span class="symbol">&amp;gt;</span></span><br><span class="line">    <span class="symbol">&amp;amp;</span>copy; 2004 Foo Corporation</span><br><span class="line"><span class="symbol">&amp;lt;</span>/div<span class="symbol">&amp;gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Regular Markdown syntax is not processed within code blocks. E.g., asterisks are just literal asterisks within a code block. This means it’s also easy to use Markdown to write about Markdown’s own syntax.</p><h3 id="HORIZONTAL-RULES"><a href="#HORIZONTAL-RULES" class="headerlink" title="HORIZONTAL RULES"></a>HORIZONTAL RULES</h3><p>You can produce a horizontal rule tag (<code>&lt;hr /&gt;</code>) by placing three or more hyphens, asterisks, or underscores on a line by themselves. If you wish, you may use spaces between the hyphens or asterisks. Each of the following lines will produce a horizontal rule:</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">* * *</span></span><br><span class="line"></span><br><span class="line"><span class="comment">***</span></span><br><span class="line"></span><br><span class="line"><span class="comment">*****</span></span><br><span class="line"></span><br><span class="line">- - -</span><br><span class="line"></span><br><span class="line">---------------------------------------</span><br></pre></td></tr></table></figure><hr><h2 id="SPAN-ELEMENTS"><a href="#SPAN-ELEMENTS" class="headerlink" title="SPAN ELEMENTS"></a>SPAN ELEMENTS</h2><h3 id="LINKS"><a href="#LINKS" class="headerlink" title="LINKS"></a>LINKS</h3><p>Markdown supports two style of links: <em>inline</em> and <em>reference</em>.</p><p>In both styles, the link text is delimited by [square brackets].</p><p>To create an inline link, use a set of regular parentheses immediately after the link text’s closing square bracket. Inside the parentheses, put the URL where you want the link to point, along with an <em>optional</em>title for the link, surrounded in quotes. For example:</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">This <span class="built_in">is</span> [an <span class="built_in">example</span>](http://<span class="built_in">example</span>.com/ <span class="string">&quot;Title&quot;</span>) inline link.</span><br><span class="line"></span><br><span class="line">[This link](http://<span class="built_in">example</span>.net/) has no <span class="built_in">title</span> attribute.</span><br></pre></td></tr></table></figure><p>Will produce:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This is <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://example.com/&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Title&quot;</span>&gt;</span></span><br><span class="line">an example<span class="tag">&lt;/<span class="name">a</span>&gt;</span> inline link.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://example.net/&quot;</span>&gt;</span>This link<span class="tag">&lt;/<span class="name">a</span>&gt;</span> has no</span><br><span class="line">title attribute.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>If you’re referring to a local resource on the same server, you can use relative paths:</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">See <span class="keyword">my</span> [About](/<span class="keyword">about</span>/) page <span class="keyword">for</span> details.   </span><br></pre></td></tr></table></figure><p>Reference-style links use a second set of square brackets, inside which you place a label of your choosing to identify the link:</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This <span class="keyword">is</span> [an example][<span class="built_in">id</span>] <span class="keyword">reference</span>-style link.</span><br></pre></td></tr></table></figure><p>You can optionally use a space to separate the sets of brackets:</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This <span class="keyword">is</span> [an example] [<span class="built_in">id</span>] <span class="keyword">reference</span>-style link.</span><br></pre></td></tr></table></figure><p>Then, anywhere in the document, you define your link label like this, on a line by itself:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="built_in">id</span>]: http://example.com/  <span class="string">&quot;Optional Title Here&quot;</span></span><br></pre></td></tr></table></figure><p>That is:</p><ul><li>Square brackets containing the link identifier (optionally indented from the left margin using up to three spaces);</li><li>followed by a colon;</li><li>followed by one or more spaces (or tabs);</li><li>followed by the URL for the link;</li><li>optionally followed by a title attribute for the link, enclosed in double or single quotes, or enclosed in parentheses.</li></ul><p>The following three link definitions are equivalent:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">foo</span>]: <span class="link">http://example.com/  &quot;Optional Title Here&quot;</span></span><br><span class="line">[<span class="symbol">foo</span>]: <span class="link">http://example.com/  &#x27;Optional Title Here&#x27;</span></span><br><span class="line">[<span class="symbol">foo</span>]: <span class="link">http://example.com/  (Optional Title Here)</span></span><br></pre></td></tr></table></figure><p>NOTE: There is a known bug in Markdown.pl 1.0.1 which prevents single quotes from being used to delimit link titles.</p><p>The link URL may, optionally, be surrounded by angle brackets:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="built_in">id</span>]: &lt;http://example.com/&gt;  <span class="string">&quot;Optional Title Here&quot;</span></span><br></pre></td></tr></table></figure><p>You can put the title attribute on the next line and use extra spaces or tabs for padding, which tends to look better with longer URLs:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[id]: http:<span class="regexp">//</span>example.com<span class="regexp">/longish/</span>path<span class="regexp">/to/</span>resource/here</span><br><span class="line">    <span class="string">&quot;Optional Title Here&quot;</span></span><br></pre></td></tr></table></figure><p>Link definitions are only used for creating links during Markdown processing, and are stripped from your document in the HTML output.</p><p>Link definition names may consist of letters, numbers, spaces, and punctuation — but they are <em>not</em> case sensitive. E.g. these two links:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[link text]</span><span class="selector-attr">[a]</span></span><br><span class="line"><span class="selector-attr">[link text]</span><span class="selector-attr">[A]</span></span><br></pre></td></tr></table></figure><p>are equivalent.</p><p>The <em>implicit link name</em> shortcut allows you to omit the name of the link, in which case the link text itself is used as the name. Just use an empty set of square brackets — e.g., to link the word “Google” to the google.com web site, you could simply write:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[Google]</span><span class="selector-attr">[]</span></span><br></pre></td></tr></table></figure><p>And then define the link:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">Google</span>]: <span class="link">http://google.com/</span></span><br></pre></td></tr></table></figure><p>Because link names may contain spaces, this shortcut even works for multiple words in the link text:</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">Visit</span> [<span class="symbol">Daring</span> <span class="symbol">Fireball</span>][] for more information.</span><br></pre></td></tr></table></figure><p>And then define the link:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">Daring Fireball</span>]: <span class="link">http://daringfireball.net/</span></span><br></pre></td></tr></table></figure><p>Link definitions can be placed anywhere in your Markdown document. I tend to put them immediately after each paragraph in which they’re used, but if you want, you can put them all at the end of your document, sort of like footnotes.</p><p>Here’s an example of reference links in action:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">I</span> get <span class="number">10</span> times more traffic <span class="selector-tag">from</span> <span class="selector-attr">[Google]</span> <span class="selector-attr">[1]</span> than <span class="selector-tag">from</span></span><br><span class="line"><span class="selector-attr">[Yahoo]</span> <span class="selector-attr">[2]</span> or <span class="selector-attr">[MSN]</span> <span class="selector-attr">[3]</span>.</span><br><span class="line"></span><br><span class="line">  <span class="selector-attr">[1]</span>: http://google.com/        <span class="string">&quot;Google&quot;</span></span><br><span class="line">  [<span class="number">2</span>]: http://search.yahoo.com/  <span class="string">&quot;Yahoo Search&quot;</span></span><br><span class="line">  [<span class="number">3</span>]: http://search.msn.com/    <span class="string">&quot;MSN Search&quot;</span></span><br></pre></td></tr></table></figure><p>Using the implicit link name shortcut, you could instead write:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">I</span> get <span class="number">10</span> times more traffic <span class="selector-tag">from</span> <span class="selector-attr">[Google]</span><span class="selector-attr">[]</span> than <span class="selector-tag">from</span></span><br><span class="line"><span class="selector-attr">[Yahoo]</span><span class="selector-attr">[]</span> or <span class="selector-attr">[MSN]</span><span class="selector-attr">[]</span>.</span><br><span class="line"></span><br><span class="line">  <span class="selector-attr">[google]</span>: http://google.com/        <span class="string">&quot;Google&quot;</span></span><br><span class="line">  [yahoo]:  http://search.yahoo.com/  <span class="string">&quot;Yahoo Search&quot;</span></span><br><span class="line">  [msn]:    http://search.msn.com/    <span class="string">&quot;MSN Search&quot;</span></span><br></pre></td></tr></table></figure><p>Both of the above examples will produce the following HTML output:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;I <span class="built_in">get</span> 10 times more traffic <span class="keyword">from</span> &lt;a <span class="attribute">href</span>=<span class="string">&quot;http://google.com/&quot;</span></span><br><span class="line"><span class="attribute">title</span>=<span class="string">&quot;Google&quot;</span>&gt;Google&lt;/a&gt; than <span class="keyword">from</span></span><br><span class="line">&lt;a <span class="attribute">href</span>=<span class="string">&quot;http://search.yahoo.com/&quot;</span> <span class="attribute">title</span>=<span class="string">&quot;Yahoo Search&quot;</span>&gt;Yahoo&lt;/a&gt;</span><br><span class="line"><span class="keyword">or</span> &lt;a <span class="attribute">href</span>=<span class="string">&quot;http://search.msn.com/&quot;</span> <span class="attribute">title</span>=<span class="string">&quot;MSN Search&quot;</span>&gt;MSN&lt;/a&gt;.&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>For comparison, here is the same paragraph written using Markdown’s inline link style:</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">I <span class="built_in">get</span> <span class="number">10</span> times more traffic from [Google](http://google.<span class="keyword">com</span>/ <span class="string">&quot;Google&quot;</span>)</span><br><span class="line">than from [Yahoo](http://<span class="built_in">search</span>.yahoo.<span class="keyword">com</span>/ <span class="string">&quot;Yahoo Search&quot;</span>) <span class="built_in">or</span></span><br><span class="line">[MSN](http://<span class="built_in">search</span>.msn.<span class="keyword">com</span>/ <span class="string">&quot;MSN Search&quot;</span>).</span><br></pre></td></tr></table></figure><p>The point of reference-style links is not that they’re easier to write. The point is that with reference-style links, your document source is vastly more readable. Compare the above examples: using reference-style links, the paragraph itself is only 81 characters long; with inline-style links, it’s 176 characters; and as raw HTML, it’s 234 characters. In the raw HTML, there’s more markup than there is text.</p><p>With Markdown’s reference-style links, a source document much more closely resembles the final output, as rendered in a browser. By allowing you to move the markup-related metadata out of the paragraph, you can add links without interrupting the narrative flow of your prose.</p><h3 id="EMPHASIS"><a href="#EMPHASIS" class="headerlink" title="EMPHASIS"></a>EMPHASIS</h3><p>Markdown treats asterisks (<code>*</code>) and underscores (<code>_</code>) as indicators of emphasis. Text wrapped with one <code>*</code> or <code>_</code> will be wrapped with an HTML <code>&lt;em&gt;</code> tag; double <code>*</code>’s or <code>_</code>’s will be wrapped with an HTML<code>&lt;strong&gt;</code> tag. E.g., this input:</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">*single asterisks*</span></span><br><span class="line"></span><br><span class="line"><span class="emphasis">_single underscores_</span></span><br><span class="line"></span><br><span class="line"><span class="strong">**double asterisks**</span></span><br><span class="line"></span><br><span class="line"><span class="emphasis">__double underscores__</span></span><br></pre></td></tr></table></figure><p>will produce:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>single asterisks<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>single underscores<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>double asterisks<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>double underscores<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br></pre></td></tr></table></figure><p>You can use whichever style you prefer; the lone restriction is that the same character must be used to open and close an emphasis span.</p><p>Emphasis can be used in the middle of a word:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">un<span class="number">*f</span>rigging<span class="number">*be</span>lievable</span><br></pre></td></tr></table></figure><p>But if you surround an <code>*</code> or <code>_</code> with spaces, it’ll be treated as a literal asterisk or underscore.</p><p>To produce a literal asterisk or underscore at a position where it would otherwise be used as an emphasis delimiter, you can backslash escape it:</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\*<span class="keyword">this</span> text <span class="keyword">is</span> surrounded <span class="keyword">by</span> literal asterisks\*</span><br></pre></td></tr></table></figure><h3 id="CODE"><a href="#CODE" class="headerlink" title="CODE"></a>CODE</h3><p>To indicate a span of code, wrap it with backtick quotes (&#96;&#96;&#96;). Unlike a pre-formatted code block, a code span indicates code within a normal paragraph. For example:</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Use</span> the `printf()` <span class="keyword">function</span>.</span><br></pre></td></tr></table></figure><p>will produce:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Use the <span class="tag">&lt;<span class="name">code</span>&gt;</span>printf()<span class="tag">&lt;/<span class="name">code</span>&gt;</span> function.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>To include a literal backtick character within a code span, you can use multiple backticks as the opening and closing delimiters:</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">``There is a literal backtick (`) here.``</span><br></pre></td></tr></table></figure><p>which will produce this:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">p</span>&gt;&lt;<span class="selector-tag">code</span>&gt;There is <span class="selector-tag">a</span> literal backtick (`) here.&lt;/<span class="selector-tag">code</span>&gt;&lt;/<span class="selector-tag">p</span>&gt;</span><br></pre></td></tr></table></figure><p>The backtick delimiters surrounding a code span may include spaces — one after the opening, one before the closing. This allows you to place literal backtick characters at the beginning or end of a code span:</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">A</span> <span class="selector-tag">single</span> <span class="selector-tag">backtick</span> <span class="selector-tag">in</span> <span class="selector-tag">a</span> <span class="selector-tag">code</span> <span class="selector-tag">span</span>: `` ` ``</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">A</span> <span class="selector-tag">backtick-delimited</span> <span class="selector-tag">string</span> <span class="selector-tag">in</span> <span class="selector-tag">a</span> <span class="selector-tag">code</span> <span class="selector-tag">span</span>: `` `<span class="selector-tag">foo</span>` ``</span><br></pre></td></tr></table></figure><p>will produce:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>A single backtick in a code span: <span class="tag">&lt;<span class="name">code</span>&gt;</span>`<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>A backtick-delimited string in a code span: <span class="tag">&lt;<span class="name">code</span>&gt;</span>`foo`<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>With a code span, ampersands and angle brackets are encoded as HTML entities automatically, which makes it easy to include example HTML tags. Markdown will turn this:</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Please don<span class="symbol">&#x27;t</span> <span class="keyword">use</span> any `&lt;blink&gt;` tags.</span><br></pre></td></tr></table></figure><p>into:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Please don&#x27;t use any <span class="tag">&lt;<span class="name">code</span>&gt;</span><span class="symbol">&amp;lt;</span>blink<span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">code</span>&gt;</span> tags.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>You can write this:</p><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">`&amp;#8212;`</span> <span class="keyword">is</span> the decimal-encoded equivalent of <span class="string">`&amp;mdash;`</span>.</span><br></pre></td></tr></table></figure><p>to produce:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span><span class="symbol">&amp;amp;</span>#8212;<span class="tag">&lt;/<span class="name">code</span>&gt;</span> is the decimal-encoded</span><br><span class="line">equivalent of <span class="tag">&lt;<span class="name">code</span>&gt;</span><span class="symbol">&amp;amp;</span>mdash;<span class="tag">&lt;/<span class="name">code</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="IMAGES"><a href="#IMAGES" class="headerlink" title="IMAGES"></a>IMAGES</h3><p>Admittedly, it’s fairly difficult to devise a “natural” syntax for placing images into a plain text document format.</p><p>Markdown uses an image syntax that is intended to resemble the syntax for links, allowing for two styles: <em>inline</em> and <em>reference</em>.</p><p>Inline image syntax looks like this:</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">![Alt <span class="type">text</span>](/<span class="type">path</span>/<span class="keyword">to</span>/img.jpg)</span><br><span class="line"></span><br><span class="line">![Alt <span class="type">text</span>](/<span class="type">path</span>/<span class="keyword">to</span>/img.jpg &quot;Optional title&quot;)</span><br></pre></td></tr></table></figure><p>That is:</p><ul><li>An exclamation mark: <code>!</code>;</li><li>followed by a set of square brackets, containing the <code>alt</code>attribute text for the image;</li><li>followed by a set of parentheses, containing the URL or path to the image, and an optional <code>title</code> attribute enclosed in double or single quotes.</li></ul><p>Reference-style image syntax looks like this:</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![Alt <span class="built_in">text</span>][<span class="built_in">id</span>]</span><br></pre></td></tr></table></figure><p>Where “id” is the name of a defined image reference. Image references are defined using syntax identical to link references:</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="built_in">id</span>]: url/<span class="keyword">to</span>/image  <span class="string">&quot;Optional title attribute&quot;</span></span><br></pre></td></tr></table></figure><p>As of this writing, Markdown has no syntax for specifying the dimensions of an image; if this is important to you, you can simply use regular HTML <code>&lt;img&gt;</code> tags.</p><hr><h2 id="MISCELLANEOUS"><a href="#MISCELLANEOUS" class="headerlink" title="MISCELLANEOUS"></a>MISCELLANEOUS</h2><h3 id="AUTOMATIC-LINKS"><a href="#AUTOMATIC-LINKS" class="headerlink" title="AUTOMATIC LINKS"></a>AUTOMATIC LINKS</h3><p>Markdown supports a shortcut style for creating “automatic” links for URLs and email addresses: simply surround the URL or email address with angle brackets. What this means is that if you want to show the actual text of a URL or email address, and also have it be a clickable link, you can do this:</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;http:<span class="comment">//example.com/&gt;</span></span><br></pre></td></tr></table></figure><p>Markdown will turn this into:</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">a</span> href=<span class="string">&quot;http://example.com/&quot;</span>&gt;<span class="keyword">http</span>://example.com/&lt;/<span class="keyword">a</span>&gt;</span><br></pre></td></tr></table></figure><p>Automatic links for email addresses work similarly, except that Markdown will also perform a bit of randomized decimal and hex entity-encoding to help obscure your address from address-harvesting spambots. For example, Markdown will turn this:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">address</span><span class="keyword">@example</span>.com&gt;</span><br></pre></td></tr></table></figure><p>into something like this:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;<span class="symbol">&amp;#x6D;</span><span class="symbol">&amp;#x61;</span>i<span class="symbol">&amp;#x6C;</span><span class="symbol">&amp;#x74;</span><span class="symbol">&amp;#x6F;</span>:<span class="symbol">&amp;#x61;</span><span class="symbol">&amp;#x64;</span><span class="symbol">&amp;#x64;</span><span class="symbol">&amp;#x72;</span><span class="symbol">&amp;#x65;</span></span></span></span><br><span class="line"><span class="string"><span class="tag"><span class="symbol">&amp;#115;</span><span class="symbol">&amp;#115;</span><span class="symbol">&amp;#64;</span><span class="symbol">&amp;#101;</span><span class="symbol">&amp;#120;</span><span class="symbol">&amp;#x61;</span><span class="symbol">&amp;#109;</span><span class="symbol">&amp;#x70;</span><span class="symbol">&amp;#x6C;</span>e<span class="symbol">&amp;#x2E;</span><span class="symbol">&amp;#99;</span><span class="symbol">&amp;#111;</span></span></span></span><br><span class="line"><span class="string"><span class="tag"><span class="symbol">&amp;#109;</span>&quot;</span>&gt;</span><span class="symbol">&amp;#x61;</span><span class="symbol">&amp;#x64;</span><span class="symbol">&amp;#x64;</span><span class="symbol">&amp;#x72;</span><span class="symbol">&amp;#x65;</span><span class="symbol">&amp;#115;</span><span class="symbol">&amp;#115;</span><span class="symbol">&amp;#64;</span><span class="symbol">&amp;#101;</span><span class="symbol">&amp;#120;</span><span class="symbol">&amp;#x61;</span></span><br><span class="line"><span class="symbol">&amp;#109;</span><span class="symbol">&amp;#x70;</span><span class="symbol">&amp;#x6C;</span>e<span class="symbol">&amp;#x2E;</span><span class="symbol">&amp;#99;</span><span class="symbol">&amp;#111;</span><span class="symbol">&amp;#109;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>which will render in a browser as a clickable link to “<a href="mailto:&#97;&#100;&#x64;&#x72;&#101;&#115;&#115;&#x40;&#101;&#120;&#97;&#x6d;&#x70;&#x6c;&#x65;&#46;&#99;&#111;&#109;">&#97;&#100;&#x64;&#x72;&#101;&#115;&#115;&#x40;&#101;&#120;&#97;&#x6d;&#x70;&#x6c;&#x65;&#46;&#99;&#111;&#109;</a>”.</p><p>(This sort of entity-encoding trick will indeed fool many, if not most, address-harvesting bots, but it definitely won’t fool all of them. It’s better than nothing, but an address published in this way will probably eventually start receiving spam.)</p><h3 id="BACKSLASH-ESCAPES"><a href="#BACKSLASH-ESCAPES" class="headerlink" title="BACKSLASH ESCAPES"></a>BACKSLASH ESCAPES</h3><p>Markdown allows you to use backslash escapes to generate literal characters which would otherwise have special meaning in Markdown’s formatting syntax. For example, if you wanted to surround a word with literal asterisks (instead of an HTML <code>&lt;em&gt;</code> tag), you can use backslashes before the asterisks, like this:</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\*literal asterisks\*</span><br></pre></td></tr></table></figure><p>Markdown provides backslash escapes for the following characters:</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">\   <span class="keyword">backslash</span></span><br><span class="line"><span class="keyword"></span>`   <span class="keyword">backtick</span></span><br><span class="line"><span class="keyword"></span>*   asterisk</span><br><span class="line">_   underscore</span><br><span class="line">&#123;&#125;  curly <span class="keyword">braces</span></span><br><span class="line"><span class="keyword"></span>[]  square <span class="keyword">brackets</span></span><br><span class="line"><span class="keyword"></span>()  parentheses</span><br><span class="line"><span class="comment">#   hash mark</span></span><br><span class="line">+   plus sign</span><br><span class="line">-   minus sign (hyphen)</span><br><span class="line">.   dot</span><br><span class="line">!   exclamation mark</span><br></pre></td></tr></table></figure><p><a href="https://daringfireball.net/preferences/">Display Preferences</a></p><p>Copyright © 2002–2023 The Daring Fireball Company LLC.</p>]]></content>
    
    
    <summary type="html">SyntaxMarkdown是一个轻量级的标记语言，它允许用户使用易读易写的纯文本格式来编写文档，然后转换成结构化的HTML或其他格式的文档。SyntaxMarkdown最初由John Gruber创建，后来被广泛应用于各种编辑器、博客平台和内容管理系统。</summary>
    
    
    
    <category term="语法分析" scheme="https://blog.ceobe.cn/categories/%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90/"/>
    
    
    <category term="Markdown" scheme="https://blog.ceobe.cn/tags/Markdown/"/>
    
    <category term="兼容性" scheme="https://blog.ceobe.cn/tags/%E5%85%BC%E5%AE%B9%E6%80%A7/"/>
    
    <category term="代码折叠" scheme="https://blog.ceobe.cn/tags/%E4%BB%A3%E7%A0%81%E6%8A%98%E5%8F%A0/"/>
    
    <category term="多语言支持" scheme="https://blog.ceobe.cn/tags/%E5%A4%9A%E8%AF%AD%E8%A8%80%E6%94%AF%E6%8C%81/"/>
    
    <category term="数学公式" scheme="https://blog.ceobe.cn/tags/%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/"/>
    
    <category term="流程图" scheme="https://blog.ceobe.cn/tags/%E6%B5%81%E7%A8%8B%E5%9B%BE/"/>
    
    <category term="甘特图" scheme="https://blog.ceobe.cn/tags/%E7%94%98%E7%89%B9%E5%9B%BE/"/>
    
    <category term="目录生成" scheme="https://blog.ceobe.cn/tags/%E7%9B%AE%E5%BD%95%E7%94%9F%E6%88%90/"/>
    
    <category term="任务列表" scheme="https://blog.ceobe.cn/tags/%E4%BB%BB%E5%8A%A1%E5%88%97%E8%A1%A8/"/>
    
  </entry>
  
</feed>
